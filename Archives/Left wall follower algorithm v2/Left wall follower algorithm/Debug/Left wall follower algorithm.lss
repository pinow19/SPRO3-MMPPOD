
Left wall follower algorithm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  00001708  0000179c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001708  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  00800180  00800180  0000181c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000181c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001878  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000135d  00000000  00000000  000019f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ba1  00000000  00000000  00002d55  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bd3  00000000  00000000  000038f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000360  00000000  00000000  000044cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000074d  00000000  00000000  0000482c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000939  00000000  00000000  00004f79  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  000058b2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 2a 02 	jmp	0x454	; 0x454 <__vector_2>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 bb 03 	jmp	0x776	; 0x776 <__vector_14>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e8 e0       	ldi	r30, 0x08	; 8
      88:	f7 e1       	ldi	r31, 0x17	; 23
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a0 38       	cpi	r26, 0x80	; 128
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	21 e0       	ldi	r18, 0x01	; 1
      98:	a0 e8       	ldi	r26, 0x80	; 128
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a8 3a       	cpi	r26, 0xA8	; 168
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 da 00 	call	0x1b4	; 0x1b4 <main>
      aa:	0c 94 82 0b 	jmp	0x1704	; 0x1704 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <ultrasond_sensor_value>:
		
    }
}
void ultrasond_sensor_value(void)
{
	Left_sensor=ultra_sound_sensor(1);
      b2:	81 e0       	ldi	r24, 0x01	; 1
      b4:	90 e0       	ldi	r25, 0x00	; 0
      b6:	0e 94 b8 02 	call	0x570	; 0x570 <ultra_sound_sensor>
      ba:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <Left_sensor>
      be:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <Left_sensor+0x1>
	printf("Sensor1: %d cm\n", Left_sensor);
      c2:	9f 93       	push	r25
      c4:	8f 93       	push	r24
      c6:	8c e1       	ldi	r24, 0x1C	; 28
      c8:	91 e0       	ldi	r25, 0x01	; 1
      ca:	9f 93       	push	r25
      cc:	8f 93       	push	r24
      ce:	0e 94 73 05 	call	0xae6	; 0xae6 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      d2:	2f ef       	ldi	r18, 0xFF	; 255
      d4:	83 ed       	ldi	r24, 0xD3	; 211
      d6:	90 e3       	ldi	r25, 0x30	; 48
      d8:	21 50       	subi	r18, 0x01	; 1
      da:	80 40       	sbci	r24, 0x00	; 0
      dc:	90 40       	sbci	r25, 0x00	; 0
      de:	e1 f7       	brne	.-8      	; 0xd8 <ultrasond_sensor_value+0x26>
      e0:	00 c0       	rjmp	.+0      	; 0xe2 <ultrasond_sensor_value+0x30>
      e2:	00 00       	nop
	_delay_ms(1000);
	Front_sensor=ultra_sound_sensor(2);
      e4:	82 e0       	ldi	r24, 0x02	; 2
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	0e 94 b8 02 	call	0x570	; 0x570 <ultra_sound_sensor>
      ec:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <Front_sensor>
      f0:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <Front_sensor+0x1>
	printf("Sensor2: %d cm\n", Front_sensor);
      f4:	9f 93       	push	r25
      f6:	8f 93       	push	r24
      f8:	8c e2       	ldi	r24, 0x2C	; 44
      fa:	91 e0       	ldi	r25, 0x01	; 1
      fc:	9f 93       	push	r25
      fe:	8f 93       	push	r24
     100:	0e 94 73 05 	call	0xae6	; 0xae6 <printf>
     104:	2f ef       	ldi	r18, 0xFF	; 255
     106:	83 ed       	ldi	r24, 0xD3	; 211
     108:	90 e3       	ldi	r25, 0x30	; 48
     10a:	21 50       	subi	r18, 0x01	; 1
     10c:	80 40       	sbci	r24, 0x00	; 0
     10e:	90 40       	sbci	r25, 0x00	; 0
     110:	e1 f7       	brne	.-8      	; 0x10a <ultrasond_sensor_value+0x58>
     112:	00 c0       	rjmp	.+0      	; 0x114 <ultrasond_sensor_value+0x62>
     114:	00 00       	nop
	_delay_ms(1000);
	Right_sensor=ultra_sound_sensor(3);
     116:	83 e0       	ldi	r24, 0x03	; 3
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	0e 94 b8 02 	call	0x570	; 0x570 <ultra_sound_sensor>
     11e:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__data_end>
     122:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <__data_end+0x1>
	printf("Sensor3: %d cm\n", Right_sensor);
     126:	9f 93       	push	r25
     128:	8f 93       	push	r24
     12a:	8c e3       	ldi	r24, 0x3C	; 60
     12c:	91 e0       	ldi	r25, 0x01	; 1
     12e:	9f 93       	push	r25
     130:	8f 93       	push	r24
     132:	0e 94 73 05 	call	0xae6	; 0xae6 <printf>
     136:	2f ef       	ldi	r18, 0xFF	; 255
     138:	83 ed       	ldi	r24, 0xD3	; 211
     13a:	90 e3       	ldi	r25, 0x30	; 48
     13c:	21 50       	subi	r18, 0x01	; 1
     13e:	80 40       	sbci	r24, 0x00	; 0
     140:	90 40       	sbci	r25, 0x00	; 0
     142:	e1 f7       	brne	.-8      	; 0x13c <ultrasond_sensor_value+0x8a>
     144:	00 c0       	rjmp	.+0      	; 0x146 <ultrasond_sensor_value+0x94>
     146:	00 00       	nop
	_delay_ms(1000);
}
     148:	8d b7       	in	r24, 0x3d	; 61
     14a:	9e b7       	in	r25, 0x3e	; 62
     14c:	0c 96       	adiw	r24, 0x0c	; 12
     14e:	0f b6       	in	r0, 0x3f	; 63
     150:	f8 94       	cli
     152:	9e bf       	out	0x3e, r25	; 62
     154:	0f be       	out	0x3f, r0	; 63
     156:	8d bf       	out	0x3d, r24	; 61
     158:	08 95       	ret

0000015a <go_straight>:
void go_straight()
{
	M[0].state[0] = 1; M[0].state[1] = 0;
     15a:	e2 e9       	ldi	r30, 0x92	; 146
     15c:	f1 e0       	ldi	r31, 0x01	; 1
     15e:	81 e0       	ldi	r24, 0x01	; 1
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	95 83       	std	Z+5, r25	; 0x05
     164:	84 83       	std	Z+4, r24	; 0x04
     166:	17 82       	std	Z+7, r1	; 0x07
     168:	16 82       	std	Z+6, r1	; 0x06
	M[1].state[0] = 1; M[1].state[1] = 0;
     16a:	95 87       	std	Z+13, r25	; 0x0d
     16c:	84 87       	std	Z+12, r24	; 0x0c
     16e:	17 86       	std	Z+15, r1	; 0x0f
     170:	16 86       	std	Z+14, r1	; 0x0e
	motor_setup();
     172:	0e 94 9d 01 	call	0x33a	; 0x33a <motor_setup>
     176:	08 95       	ret

00000178 <turn_left>:
}


void turn_left()
{
	M[0].state[0] = 0; M[0].state[1] = 1;
     178:	e2 e9       	ldi	r30, 0x92	; 146
     17a:	f1 e0       	ldi	r31, 0x01	; 1
     17c:	15 82       	std	Z+5, r1	; 0x05
     17e:	14 82       	std	Z+4, r1	; 0x04
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	97 83       	std	Z+7, r25	; 0x07
     186:	86 83       	std	Z+6, r24	; 0x06
	M[1].state[0] = 0; M[1].state[1]= 0;
     188:	15 86       	std	Z+13, r1	; 0x0d
     18a:	14 86       	std	Z+12, r1	; 0x0c
     18c:	17 86       	std	Z+15, r1	; 0x0f
     18e:	16 86       	std	Z+14, r1	; 0x0e
	motor_setup();
     190:	0e 94 9d 01 	call	0x33a	; 0x33a <motor_setup>
     194:	08 95       	ret

00000196 <turn_right>:
}

void turn_right()
{
	M[0].state[0] = 0; M[0].state[1] = 0;
     196:	e2 e9       	ldi	r30, 0x92	; 146
     198:	f1 e0       	ldi	r31, 0x01	; 1
     19a:	15 82       	std	Z+5, r1	; 0x05
     19c:	14 82       	std	Z+4, r1	; 0x04
     19e:	17 82       	std	Z+7, r1	; 0x07
     1a0:	16 82       	std	Z+6, r1	; 0x06
	M[1].state[0] = 0; M[1].state[1]= 1;
     1a2:	15 86       	std	Z+13, r1	; 0x0d
     1a4:	14 86       	std	Z+12, r1	; 0x0c
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	97 87       	std	Z+15, r25	; 0x0f
     1ac:	86 87       	std	Z+14, r24	; 0x0e
	motor_setup();
     1ae:	0e 94 9d 01 	call	0x33a	; 0x33a <motor_setup>
     1b2:	08 95       	ret

000001b4 <main>:
void turn_left(void);
void turn_right(void);
 
int main(void)
{
	uart_init();
     1b4:	0e 94 2d 04 	call	0x85a	; 0x85a <uart_init>
	io_redirect();
     1b8:	0e 94 3e 04 	call	0x87c	; 0x87c <io_redirect>
	
	DDRD |= (1<<DDD3)|(1<<DDD5)|(1<<DDD7);
     1bc:	8a b1       	in	r24, 0x0a	; 10
     1be:	88 6a       	ori	r24, 0xA8	; 168
     1c0:	8a b9       	out	0x0a, r24	; 10
	DDRD &= (~(1<<DDD2))&(~(1<<DDD4))&(~(1<<DDD6));
     1c2:	8a b1       	in	r24, 0x0a	; 10
     1c4:	8b 7a       	andi	r24, 0xAB	; 171
     1c6:	8a b9       	out	0x0a, r24	; 10

    while (1) 
    {
		ultrasond_sensor_value();
     1c8:	0e 94 59 00 	call	0xb2	; 0xb2 <ultrasond_sensor_value>
		
		if( (Left_sensor<DISTANCE) && (Front_sensor<DISTANCE) && (Right_sensor<DISTANCE) )//turn around dead-end
     1cc:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <Left_sensor>
     1d0:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <Left_sensor+0x1>
     1d4:	89 31       	cpi	r24, 0x19	; 25
     1d6:	91 05       	cpc	r25, r1
     1d8:	d8 f4       	brcc	.+54     	; 0x210 <main+0x5c>
     1da:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <Front_sensor>
     1de:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <Front_sensor+0x1>
     1e2:	29 31       	cpi	r18, 0x19	; 25
     1e4:	31 05       	cpc	r19, r1
     1e6:	a0 f4       	brcc	.+40     	; 0x210 <main+0x5c>
     1e8:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__data_end>
     1ec:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__data_end+0x1>
     1f0:	29 31       	cpi	r18, 0x19	; 25
     1f2:	31 05       	cpc	r19, r1
     1f4:	08 f0       	brcs	.+2      	; 0x1f8 <main+0x44>
     1f6:	83 c0       	rjmp	.+262    	; 0x2fe <main+0x14a>
		
		{
			turn_right();
     1f8:	0e 94 cb 00 	call	0x196	; 0x196 <turn_right>
     1fc:	2f ef       	ldi	r18, 0xFF	; 255
     1fe:	87 ea       	ldi	r24, 0xA7	; 167
     200:	91 e6       	ldi	r25, 0x61	; 97
     202:	21 50       	subi	r18, 0x01	; 1
     204:	80 40       	sbci	r24, 0x00	; 0
     206:	90 40       	sbci	r25, 0x00	; 0
     208:	e1 f7       	brne	.-8      	; 0x202 <main+0x4e>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x58>
     20c:	00 00       	nop
     20e:	dc cf       	rjmp	.-72     	; 0x1c8 <main+0x14>
			_delay_ms(2000);			
			
		}
		else if( (Left_sensor>DISTANCE) && (Front_sensor<DISTANCE) && (Right_sensor<DISTANCE) )
     210:	8a 31       	cpi	r24, 0x1A	; 26
     212:	91 05       	cpc	r25, r1
     214:	e0 f0       	brcs	.+56     	; 0x24e <main+0x9a>
     216:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <Front_sensor>
     21a:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <Front_sensor+0x1>
     21e:	29 31       	cpi	r18, 0x19	; 25
     220:	31 05       	cpc	r19, r1
     222:	08 f0       	brcs	.+2      	; 0x226 <main+0x72>
     224:	7b c0       	rjmp	.+246    	; 0x31c <main+0x168>
     226:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__data_end>
     22a:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__data_end+0x1>
     22e:	29 31       	cpi	r18, 0x19	; 25
     230:	31 05       	cpc	r19, r1
     232:	08 f0       	brcs	.+2      	; 0x236 <main+0x82>
     234:	69 c0       	rjmp	.+210    	; 0x308 <main+0x154>
		{
			turn_left();
     236:	0e 94 bc 00 	call	0x178	; 0x178 <turn_left>
     23a:	2f ef       	ldi	r18, 0xFF	; 255
     23c:	87 ea       	ldi	r24, 0xA7	; 167
     23e:	91 e6       	ldi	r25, 0x61	; 97
     240:	21 50       	subi	r18, 0x01	; 1
     242:	80 40       	sbci	r24, 0x00	; 0
     244:	90 40       	sbci	r25, 0x00	; 0
     246:	e1 f7       	brne	.-8      	; 0x240 <main+0x8c>
     248:	00 c0       	rjmp	.+0      	; 0x24a <main+0x96>
     24a:	00 00       	nop
     24c:	bd cf       	rjmp	.-134    	; 0x1c8 <main+0x14>
			_delay_ms(2000);
			
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor<DISTANCE) && (Right_sensor>DISTANCE) )
     24e:	89 31       	cpi	r24, 0x19	; 25
     250:	91 05       	cpc	r25, r1
     252:	08 f0       	brcs	.+2      	; 0x256 <main+0xa2>
     254:	67 c0       	rjmp	.+206    	; 0x324 <main+0x170>
     256:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <Front_sensor>
     25a:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <Front_sensor+0x1>
     25e:	29 31       	cpi	r18, 0x19	; 25
     260:	31 05       	cpc	r19, r1
     262:	98 f4       	brcc	.+38     	; 0x28a <main+0xd6>
     264:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__data_end>
     268:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__data_end+0x1>
     26c:	2a 31       	cpi	r18, 0x1A	; 26
     26e:	31 05       	cpc	r19, r1
     270:	60 f0       	brcs	.+24     	; 0x28a <main+0xd6>
		{
			turn_right();
     272:	0e 94 cb 00 	call	0x196	; 0x196 <turn_right>
     276:	2f ef       	ldi	r18, 0xFF	; 255
     278:	87 ea       	ldi	r24, 0xA7	; 167
     27a:	91 e6       	ldi	r25, 0x61	; 97
     27c:	21 50       	subi	r18, 0x01	; 1
     27e:	80 40       	sbci	r24, 0x00	; 0
     280:	90 40       	sbci	r25, 0x00	; 0
     282:	e1 f7       	brne	.-8      	; 0x27c <main+0xc8>
     284:	00 c0       	rjmp	.+0      	; 0x286 <main+0xd2>
     286:	00 00       	nop
     288:	9f cf       	rjmp	.-194    	; 0x1c8 <main+0x14>
			_delay_ms(2000);
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor<DISTANCE) )
     28a:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <Front_sensor>
     28e:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <Front_sensor+0x1>
     292:	2a 31       	cpi	r18, 0x1A	; 26
     294:	31 05       	cpc	r19, r1
     296:	08 f4       	brcc	.+2      	; 0x29a <main+0xe6>
     298:	49 c0       	rjmp	.+146    	; 0x32c <main+0x178>
     29a:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__data_end>
     29e:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__data_end+0x1>
     2a2:	29 31       	cpi	r18, 0x19	; 25
     2a4:	31 05       	cpc	r19, r1
     2a6:	a0 f5       	brcc	.+104    	; 0x310 <main+0x15c>
		{
			go_straight();
     2a8:	0e 94 ad 00 	call	0x15a	; 0x15a <go_straight>
     2ac:	8d cf       	rjmp	.-230    	; 0x1c8 <main+0x14>
		}
		else if ( (Left_sensor>DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor<DISTANCE) )
     2ae:	8a 31       	cpi	r24, 0x1A	; 26
     2b0:	91 05       	cpc	r25, r1
     2b2:	88 f0       	brcs	.+34     	; 0x2d6 <main+0x122>
     2b4:	20 91 82 01 	lds	r18, 0x0182	; 0x800182 <Front_sensor>
     2b8:	30 91 83 01 	lds	r19, 0x0183	; 0x800183 <Front_sensor+0x1>
     2bc:	2a 31       	cpi	r18, 0x1A	; 26
     2be:	31 05       	cpc	r19, r1
     2c0:	d8 f0       	brcs	.+54     	; 0x2f8 <main+0x144>
     2c2:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__data_end>
     2c6:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__data_end+0x1>
     2ca:	29 31       	cpi	r18, 0x19	; 25
     2cc:	31 05       	cpc	r19, r1
     2ce:	18 f5       	brcc	.+70     	; 0x316 <main+0x162>
		{
			go_straight();
     2d0:	0e 94 ad 00 	call	0x15a	; 0x15a <go_straight>
     2d4:	79 cf       	rjmp	.-270    	; 0x1c8 <main+0x14>
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor>DISTANCE) )
     2d6:	49 97       	sbiw	r24, 0x19	; 25
     2d8:	78 f4       	brcc	.+30     	; 0x2f8 <main+0x144>
     2da:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Front_sensor>
     2de:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Front_sensor+0x1>
     2e2:	4a 97       	sbiw	r24, 0x1a	; 26
     2e4:	48 f0       	brcs	.+18     	; 0x2f8 <main+0x144>
     2e6:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end>
     2ea:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <__data_end+0x1>
     2ee:	4a 97       	sbiw	r24, 0x1a	; 26
     2f0:	18 f0       	brcs	.+6      	; 0x2f8 <main+0x144>
		{
			go_straight();
     2f2:	0e 94 ad 00 	call	0x15a	; 0x15a <go_straight>
     2f6:	68 cf       	rjmp	.-304    	; 0x1c8 <main+0x14>
		}
		else go_straight();
     2f8:	0e 94 ad 00 	call	0x15a	; 0x15a <go_straight>
     2fc:	65 cf       	rjmp	.-310    	; 0x1c8 <main+0x14>
		{
			turn_right();
			_delay_ms(2000);			
			
		}
		else if( (Left_sensor>DISTANCE) && (Front_sensor<DISTANCE) && (Right_sensor<DISTANCE) )
     2fe:	8a 31       	cpi	r24, 0x1A	; 26
     300:	91 05       	cpc	r25, r1
     302:	08 f0       	brcs	.+2      	; 0x306 <main+0x152>
     304:	af cf       	rjmp	.-162    	; 0x264 <main+0xb0>
     306:	a7 cf       	rjmp	.-178    	; 0x256 <main+0xa2>
		{
			turn_left();
			_delay_ms(2000);
			
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor<DISTANCE) && (Right_sensor>DISTANCE) )
     308:	89 31       	cpi	r24, 0x19	; 25
     30a:	91 05       	cpc	r25, r1
     30c:	a8 f7       	brcc	.-22     	; 0x2f8 <main+0x144>
     30e:	aa cf       	rjmp	.-172    	; 0x264 <main+0xb0>
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor<DISTANCE) )
		{
			go_straight();
		}
		else if ( (Left_sensor>DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor<DISTANCE) )
     310:	8a 31       	cpi	r24, 0x1A	; 26
     312:	91 05       	cpc	r25, r1
     314:	78 f0       	brcs	.+30     	; 0x334 <main+0x180>
		{
			go_straight();
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor>DISTANCE) )
     316:	49 97       	sbiw	r24, 0x19	; 25
     318:	30 f3       	brcs	.-52     	; 0x2e6 <main+0x132>
     31a:	ee cf       	rjmp	.-36     	; 0x2f8 <main+0x144>
		{
			turn_left();
			_delay_ms(2000);
			
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor<DISTANCE) && (Right_sensor>DISTANCE) )
     31c:	89 31       	cpi	r24, 0x19	; 25
     31e:	91 05       	cpc	r25, r1
     320:	30 f6       	brcc	.-116    	; 0x2ae <main+0xfa>
     322:	b3 cf       	rjmp	.-154    	; 0x28a <main+0xd6>
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor<DISTANCE) )
		{
			go_straight();
		}
		else if ( (Left_sensor>DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor<DISTANCE) )
     324:	8a 31       	cpi	r24, 0x1A	; 26
     326:	91 05       	cpc	r25, r1
     328:	28 f6       	brcc	.-118    	; 0x2b4 <main+0x100>
     32a:	e6 cf       	rjmp	.-52     	; 0x2f8 <main+0x144>
     32c:	8a 31       	cpi	r24, 0x1A	; 26
     32e:	91 05       	cpc	r25, r1
     330:	18 f7       	brcc	.-58     	; 0x2f8 <main+0x144>
     332:	d1 cf       	rjmp	.-94     	; 0x2d6 <main+0x122>
		{
			go_straight();
		}
		else if ( (Left_sensor<DISTANCE) && (Front_sensor>DISTANCE) && (Right_sensor>DISTANCE) )
     334:	49 97       	sbiw	r24, 0x19	; 25
     336:	b8 f2       	brcs	.-82     	; 0x2e6 <main+0x132>
     338:	df cf       	rjmp	.-66     	; 0x2f8 <main+0x144>

0000033a <motor_setup>:
	TCCR0A|= ((1<<COM0A1) | (1<<COM0B1)); //non-inverting something
	
	TCCR0B = (1<<CS22); //prescaler = 64
}
void motor_setup()
{
     33a:	ef 92       	push	r14
     33c:	ff 92       	push	r15
     33e:	0f 93       	push	r16
     340:	1f 93       	push	r17
     342:	cf 93       	push	r28
     344:	df 93       	push	r29
	for(int i=0;i<number_of_motors;i++)
	{
		printf("\nPlease give Motor #%d PWM cycle:", i+1);
     346:	1f 92       	push	r1
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	8f 93       	push	r24
     34c:	0f 2e       	mov	r0, r31
     34e:	fc e4       	ldi	r31, 0x4C	; 76
     350:	ef 2e       	mov	r14, r31
     352:	f1 e0       	ldi	r31, 0x01	; 1
     354:	ff 2e       	mov	r15, r31
     356:	f0 2d       	mov	r31, r0
     358:	ff 92       	push	r15
     35a:	ef 92       	push	r14
     35c:	0e 94 73 05 	call	0xae6	; 0xae6 <printf>
		scanf("%d", &M[i].pwm_value);
     360:	c2 e9       	ldi	r28, 0x92	; 146
     362:	d1 e0       	ldi	r29, 0x01	; 1
     364:	df 93       	push	r29
     366:	cf 93       	push	r28
     368:	0d e7       	ldi	r16, 0x7D	; 125
     36a:	11 e0       	ldi	r17, 0x01	; 1
     36c:	1f 93       	push	r17
     36e:	0f 93       	push	r16
     370:	0e 94 89 05 	call	0xb12	; 0xb12 <scanf>
}
void motor_setup()
{
	for(int i=0;i<number_of_motors;i++)
	{
		printf("\nPlease give Motor #%d PWM cycle:", i+1);
     374:	1f 92       	push	r1
     376:	82 e0       	ldi	r24, 0x02	; 2
     378:	8f 93       	push	r24
     37a:	ff 92       	push	r15
     37c:	ef 92       	push	r14
     37e:	0e 94 73 05 	call	0xae6	; 0xae6 <printf>
		scanf("%d", &M[i].pwm_value);
     382:	8a e9       	ldi	r24, 0x9A	; 154
     384:	91 e0       	ldi	r25, 0x01	; 1
     386:	9f 93       	push	r25
     388:	8f 93       	push	r24
     38a:	1f 93       	push	r17
     38c:	0f 93       	push	r16
     38e:	0e 94 89 05 	call	0xb12	; 0xb12 <scanf>
			case CW: M[i].state[0] = 1; M[i].state[1] = 0; break;
			case CCW: M[i].state[0] = 0; M[i].state[1]= 1; break;
			case BRAKE: M[i].state[0] = 0; M[i].state[1]= 0; break;
		}*/
	}
	OCR0A = M[0].pwm_value;
     392:	88 81       	ld	r24, Y
     394:	87 bd       	out	0x27, r24	; 39
	OCR0B = M[1].pwm_value;
     396:	88 85       	ldd	r24, Y+8	; 0x08
     398:	88 bd       	out	0x28, r24	; 40
	PORTD = 0; //THIS IS BAD
     39a:	1b b8       	out	0x0b, r1	; 11
	PORTB = 0; //FIX THIS
     39c:	15 b8       	out	0x05, r1	; 5
	PORTD |= (((M[0].state[0]<<PORTD2) | (M[0].state[1]<<PORTD4)));
     39e:	2b b1       	in	r18, 0x0b	; 11
     3a0:	8c 81       	ldd	r24, Y+4	; 0x04
     3a2:	9d 81       	ldd	r25, Y+5	; 0x05
     3a4:	ac 01       	movw	r20, r24
     3a6:	44 0f       	add	r20, r20
     3a8:	55 1f       	adc	r21, r21
     3aa:	44 0f       	add	r20, r20
     3ac:	55 1f       	adc	r21, r21
     3ae:	8e 81       	ldd	r24, Y+6	; 0x06
     3b0:	9f 81       	ldd	r25, Y+7	; 0x07
     3b2:	82 95       	swap	r24
     3b4:	92 95       	swap	r25
     3b6:	90 7f       	andi	r25, 0xF0	; 240
     3b8:	98 27       	eor	r25, r24
     3ba:	80 7f       	andi	r24, 0xF0	; 240
     3bc:	98 27       	eor	r25, r24
     3be:	84 2b       	or	r24, r20
     3c0:	82 2b       	or	r24, r18
     3c2:	8b b9       	out	0x0b, r24	; 11
	PORTB |= (((M[1].state[0]<<PORTB0) | (M[1].state[1]<<PORTB4)));
     3c4:	25 b1       	in	r18, 0x05	; 5
     3c6:	8e 85       	ldd	r24, Y+14	; 0x0e
     3c8:	9f 85       	ldd	r25, Y+15	; 0x0f
     3ca:	82 95       	swap	r24
     3cc:	92 95       	swap	r25
     3ce:	90 7f       	andi	r25, 0xF0	; 240
     3d0:	98 27       	eor	r25, r24
     3d2:	80 7f       	andi	r24, 0xF0	; 240
     3d4:	98 27       	eor	r25, r24
     3d6:	9c 85       	ldd	r25, Y+12	; 0x0c
     3d8:	92 2b       	or	r25, r18
     3da:	89 2b       	or	r24, r25
     3dc:	85 b9       	out	0x05, r24	; 5
	
	printf("%d %d %d %d %d %d", M[0].pwm_value, M[1].pwm_value, M[0].state[0], M[0].state[1], M[1].state[0], M[1].state[1]);
     3de:	8f 85       	ldd	r24, Y+15	; 0x0f
     3e0:	8f 93       	push	r24
     3e2:	8e 85       	ldd	r24, Y+14	; 0x0e
     3e4:	8f 93       	push	r24
     3e6:	8d 85       	ldd	r24, Y+13	; 0x0d
     3e8:	8f 93       	push	r24
     3ea:	8c 85       	ldd	r24, Y+12	; 0x0c
     3ec:	8f 93       	push	r24
     3ee:	8f 81       	ldd	r24, Y+7	; 0x07
     3f0:	8f 93       	push	r24
     3f2:	8e 81       	ldd	r24, Y+6	; 0x06
     3f4:	8f 93       	push	r24
     3f6:	8d 81       	ldd	r24, Y+5	; 0x05
     3f8:	8f 93       	push	r24
     3fa:	8c 81       	ldd	r24, Y+4	; 0x04
     3fc:	8f 93       	push	r24
     3fe:	89 85       	ldd	r24, Y+9	; 0x09
     400:	8f 93       	push	r24
     402:	88 85       	ldd	r24, Y+8	; 0x08
     404:	8f 93       	push	r24
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	8f 93       	push	r24
     40a:	88 81       	ld	r24, Y
     40c:	8f 93       	push	r24
     40e:	8e e6       	ldi	r24, 0x6E	; 110
     410:	91 e0       	ldi	r25, 0x01	; 1
     412:	9f 93       	push	r25
     414:	8f 93       	push	r24
     416:	0e 94 73 05 	call	0xae6	; 0xae6 <printf>
     41a:	8d b7       	in	r24, 0x3d	; 61
     41c:	9e b7       	in	r25, 0x3e	; 62
     41e:	4e 96       	adiw	r24, 0x1e	; 30
     420:	0f b6       	in	r0, 0x3f	; 63
     422:	f8 94       	cli
     424:	9e bf       	out	0x3e, r25	; 62
     426:	0f be       	out	0x3f, r0	; 63
     428:	8d bf       	out	0x3d, r24	; 61
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	1f 91       	pop	r17
     430:	0f 91       	pop	r16
     432:	ff 90       	pop	r15
     434:	ef 90       	pop	r14
     436:	08 95       	ret

00000438 <milisec_delay>:
		// printf("Distance traveled in cm is %d and the average nr of slids/min is %0.2f\n",distance,(float)avg_slids_per_min);
		//printf("The average rpm is %0.2f rotations/min \n",avg_rpm);
		x=1;
	}
	if(x==2) x=0;
}
     438:	84 b5       	in	r24, 0x24	; 36
     43a:	82 60       	ori	r24, 0x02	; 2
     43c:	84 bd       	out	0x24, r24	; 36
     43e:	89 ef       	ldi	r24, 0xF9	; 249
     440:	87 bd       	out	0x27, r24	; 39
     442:	ee e6       	ldi	r30, 0x6E	; 110
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	80 81       	ld	r24, Z
     448:	82 60       	ori	r24, 0x02	; 2
     44a:	80 83       	st	Z, r24
     44c:	85 b5       	in	r24, 0x25	; 37
     44e:	83 60       	ori	r24, 0x03	; 3
     450:	85 bd       	out	0x25, r24	; 37
     452:	08 95       	ret

00000454 <__vector_2>:

ISR (INT1_vect)// external interrupt 1
{
     454:	1f 92       	push	r1
     456:	0f 92       	push	r0
     458:	0f b6       	in	r0, 0x3f	; 63
     45a:	0f 92       	push	r0
     45c:	11 24       	eor	r1, r1
     45e:	2f 93       	push	r18
     460:	3f 93       	push	r19
     462:	4f 93       	push	r20
     464:	5f 93       	push	r21
     466:	6f 93       	push	r22
     468:	7f 93       	push	r23
     46a:	8f 93       	push	r24
     46c:	9f 93       	push	r25
     46e:	af 93       	push	r26
     470:	bf 93       	push	r27
     472:	cf 93       	push	r28
     474:	df 93       	push	r29
     476:	ef 93       	push	r30
     478:	ff 93       	push	r31
	while( ( PIND &= (1<<DDD3) ) == 0 )
     47a:	89 b1       	in	r24, 0x09	; 9
     47c:	88 70       	andi	r24, 0x08	; 8
     47e:	89 b9       	out	0x09, r24	; 9
     480:	81 11       	cpse	r24, r1
     482:	12 c0       	rjmp	.+36     	; 0x4a8 <__vector_2+0x54>
	{
		sei();
		
		milisec_delay();
		flag1=1;
     484:	c1 e0       	ldi	r28, 0x01	; 1
     486:	d0 e0       	ldi	r29, 0x00	; 0

ISR (INT1_vect)// external interrupt 1
{
	while( ( PIND &= (1<<DDD3) ) == 0 )
	{
		sei();
     488:	78 94       	sei
		
		milisec_delay();
     48a:	0e 94 1c 02 	call	0x438	; 0x438 <milisec_delay>
		flag1=1;
     48e:	d0 93 89 01 	sts	0x0189, r29	; 0x800189 <flag1+0x1>
     492:	c0 93 88 01 	sts	0x0188, r28	; 0x800188 <flag1>
		flag2=1;
     496:	d0 93 87 01 	sts	0x0187, r29	; 0x800187 <flag2+0x1>
     49a:	c0 93 86 01 	sts	0x0186, r28	; 0x800186 <flag2>
	if(x==2) x=0;
}

ISR (INT1_vect)// external interrupt 1
{
	while( ( PIND &= (1<<DDD3) ) == 0 )
     49e:	89 b1       	in	r24, 0x09	; 9
     4a0:	88 70       	andi	r24, 0x08	; 8
     4a2:	89 b9       	out	0x09, r24	; 9
     4a4:	88 23       	and	r24, r24
     4a6:	81 f3       	breq	.-32     	; 0x488 <__vector_2+0x34>
		flag2=1;
	}

	
	
}
     4a8:	ff 91       	pop	r31
     4aa:	ef 91       	pop	r30
     4ac:	df 91       	pop	r29
     4ae:	cf 91       	pop	r28
     4b0:	bf 91       	pop	r27
     4b2:	af 91       	pop	r26
     4b4:	9f 91       	pop	r25
     4b6:	8f 91       	pop	r24
     4b8:	7f 91       	pop	r23
     4ba:	6f 91       	pop	r22
     4bc:	5f 91       	pop	r21
     4be:	4f 91       	pop	r20
     4c0:	3f 91       	pop	r19
     4c2:	2f 91       	pop	r18
     4c4:	0f 90       	pop	r0
     4c6:	0f be       	out	0x3f, r0	; 63
     4c8:	0f 90       	pop	r0
     4ca:	1f 90       	pop	r1
     4cc:	18 95       	reti

000004ce <reset_prescaler>:

void reset_prescaler(void){
	TCCR0B &= ~((1<<CS00) | (1<<CS01));
}
void disable_interrupt(void){
	TCCR0B = 0;
     4ce:	85 b5       	in	r24, 0x25	; 37
     4d0:	8c 7f       	andi	r24, 0xFC	; 252
     4d2:	85 bd       	out	0x25, r24	; 37
     4d4:	08 95       	ret

000004d6 <delay_ms>:
     4d6:	cf 93       	push	r28
     4d8:	df 93       	push	r29
     4da:	ec 01       	movw	r28, r24
     4dc:	84 b5       	in	r24, 0x24	; 36
     4de:	82 60       	ori	r24, 0x02	; 2
     4e0:	84 bd       	out	0x24, r24	; 36
     4e2:	89 ef       	ldi	r24, 0xF9	; 249
     4e4:	87 bd       	out	0x27, r24	; 39
     4e6:	0e 94 67 02 	call	0x4ce	; 0x4ce <reset_prescaler>
     4ea:	85 b5       	in	r24, 0x25	; 37
     4ec:	83 60       	ori	r24, 0x03	; 3
     4ee:	85 bd       	out	0x25, r24	; 37
     4f0:	20 97       	sbiw	r28, 0x00	; 0
     4f2:	61 f0       	breq	.+24     	; 0x50c <delay_ms+0x36>
     4f4:	ce 01       	movw	r24, r28
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	42 e0       	ldi	r20, 0x02	; 2
     4fc:	a9 9b       	sbis	0x15, 1	; 21
     4fe:	fe cf       	rjmp	.-4      	; 0x4fc <delay_ms+0x26>
     500:	45 bb       	out	0x15, r20	; 21
     502:	2f 5f       	subi	r18, 0xFF	; 255
     504:	3f 4f       	sbci	r19, 0xFF	; 255
     506:	28 17       	cp	r18, r24
     508:	39 07       	cpc	r19, r25
     50a:	c1 f7       	brne	.-16     	; 0x4fc <delay_ms+0x26>
     50c:	df 91       	pop	r29
     50e:	cf 91       	pop	r28
     510:	08 95       	ret

00000512 <delay_us>:
     512:	cf 93       	push	r28
     514:	df 93       	push	r29
     516:	ec 01       	movw	r28, r24
     518:	84 b5       	in	r24, 0x24	; 36
     51a:	82 60       	ori	r24, 0x02	; 2
     51c:	84 bd       	out	0x24, r24	; 36
     51e:	8f e0       	ldi	r24, 0x0F	; 15
     520:	87 bd       	out	0x27, r24	; 39
     522:	0e 94 67 02 	call	0x4ce	; 0x4ce <reset_prescaler>
     526:	85 b5       	in	r24, 0x25	; 37
     528:	81 60       	ori	r24, 0x01	; 1
     52a:	85 bd       	out	0x25, r24	; 37
     52c:	20 97       	sbiw	r28, 0x00	; 0
     52e:	61 f0       	breq	.+24     	; 0x548 <delay_us+0x36>
     530:	ce 01       	movw	r24, r28
     532:	20 e0       	ldi	r18, 0x00	; 0
     534:	30 e0       	ldi	r19, 0x00	; 0
     536:	42 e0       	ldi	r20, 0x02	; 2
     538:	a9 9b       	sbis	0x15, 1	; 21
     53a:	fe cf       	rjmp	.-4      	; 0x538 <delay_us+0x26>
     53c:	45 bb       	out	0x15, r20	; 21
     53e:	2f 5f       	subi	r18, 0xFF	; 255
     540:	3f 4f       	sbci	r19, 0xFF	; 255
     542:	28 17       	cp	r18, r24
     544:	39 07       	cpc	r19, r25
     546:	c1 f7       	brne	.-16     	; 0x538 <delay_us+0x26>
     548:	df 91       	pop	r29
     54a:	cf 91       	pop	r28
     54c:	08 95       	ret

0000054e <init_getEcho>:
     54e:	84 b5       	in	r24, 0x24	; 36
     550:	82 60       	ori	r24, 0x02	; 2
     552:	84 bd       	out	0x24, r24	; 36
     554:	8f e5       	ldi	r24, 0x5F	; 95
     556:	87 bd       	out	0x27, r24	; 39
     558:	ee e6       	ldi	r30, 0x6E	; 110
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	80 81       	ld	r24, Z
     55e:	82 60       	ori	r24, 0x02	; 2
     560:	80 83       	st	Z, r24
     562:	78 94       	sei
     564:	0e 94 67 02 	call	0x4ce	; 0x4ce <reset_prescaler>
     568:	85 b5       	in	r24, 0x25	; 37
     56a:	81 60       	ori	r24, 0x01	; 1
     56c:	85 bd       	out	0x25, r24	; 37
     56e:	08 95       	ret

00000570 <ultra_sound_sensor>:
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	81 30       	cpi	r24, 0x01	; 1
     576:	91 05       	cpc	r25, r1
     578:	09 f0       	breq	.+2      	; 0x57c <ultra_sound_sensor+0xc>
     57a:	51 c0       	rjmp	.+162    	; 0x61e <ultra_sound_sensor+0xae>
     57c:	52 98       	cbi	0x0a, 2	; 10
     57e:	53 9a       	sbi	0x0a, 3	; 10
     580:	5b 98       	cbi	0x0b, 3	; 11
     582:	82 e0       	ldi	r24, 0x02	; 2
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	0e 94 89 02 	call	0x512	; 0x512 <delay_us>
     58a:	5b 9a       	sbi	0x0b, 3	; 11
     58c:	8a e0       	ldi	r24, 0x0A	; 10
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	0e 94 89 02 	call	0x512	; 0x512 <delay_us>
     594:	5b 98       	cbi	0x0b, 3	; 11
     596:	0e 94 a7 02 	call	0x54e	; 0x54e <init_getEcho>
     59a:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <total_time>
     59e:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <total_time+0x1>
     5a2:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <total_time+0x2>
     5a6:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <total_time+0x3>
     5aa:	89 2b       	or	r24, r25
     5ac:	8a 2b       	or	r24, r26
     5ae:	8b 2b       	or	r24, r27
     5b0:	a1 f3       	breq	.-24     	; 0x59a <ultra_sound_sensor+0x2a>
     5b2:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <total_time>
     5b6:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <total_time+0x1>
     5ba:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <total_time+0x2>
     5be:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <total_time+0x3>
     5c2:	ac 01       	movw	r20, r24
     5c4:	bd 01       	movw	r22, r26
     5c6:	44 0f       	add	r20, r20
     5c8:	55 1f       	adc	r21, r21
     5ca:	66 1f       	adc	r22, r22
     5cc:	77 1f       	adc	r23, r23
     5ce:	84 0f       	add	r24, r20
     5d0:	95 1f       	adc	r25, r21
     5d2:	a6 1f       	adc	r26, r22
     5d4:	b7 1f       	adc	r27, r23
     5d6:	bc 01       	movw	r22, r24
     5d8:	cd 01       	movw	r24, r26
     5da:	66 0f       	add	r22, r22
     5dc:	77 1f       	adc	r23, r23
     5de:	88 1f       	adc	r24, r24
     5e0:	99 1f       	adc	r25, r25
     5e2:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__floatunsisf>
     5e6:	26 e9       	ldi	r18, 0x96	; 150
     5e8:	33 e4       	ldi	r19, 0x43	; 67
     5ea:	4b e0       	ldi	r20, 0x0B	; 11
     5ec:	5d e3       	ldi	r21, 0x3D	; 61
     5ee:	0e 94 06 05 	call	0xa0c	; 0xa0c <__mulsf3>
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	5f e3       	ldi	r21, 0x3F	; 63
     5fa:	0e 94 06 05 	call	0xa0c	; 0xa0c <__mulsf3>
     5fe:	0e 94 49 04 	call	0x892	; 0x892 <__fixunssfsi>
     602:	eb 01       	movw	r28, r22
     604:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <total_time>
     608:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <total_time+0x1>
     60c:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <total_time+0x2>
     610:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <total_time+0x3>
     614:	8c e3       	ldi	r24, 0x3C	; 60
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <delay_ms>
     61c:	a8 c0       	rjmp	.+336    	; 0x76e <ultra_sound_sensor+0x1fe>
     61e:	82 30       	cpi	r24, 0x02	; 2
     620:	91 05       	cpc	r25, r1
     622:	09 f0       	breq	.+2      	; 0x626 <ultra_sound_sensor+0xb6>
     624:	51 c0       	rjmp	.+162    	; 0x6c8 <ultra_sound_sensor+0x158>
     626:	54 98       	cbi	0x0a, 4	; 10
     628:	55 9a       	sbi	0x0a, 5	; 10
     62a:	5d 98       	cbi	0x0b, 5	; 11
     62c:	82 e0       	ldi	r24, 0x02	; 2
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	0e 94 89 02 	call	0x512	; 0x512 <delay_us>
     634:	5d 9a       	sbi	0x0b, 5	; 11
     636:	8a e0       	ldi	r24, 0x0A	; 10
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	0e 94 89 02 	call	0x512	; 0x512 <delay_us>
     63e:	5d 98       	cbi	0x0b, 5	; 11
     640:	0e 94 a7 02 	call	0x54e	; 0x54e <init_getEcho>
     644:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <total_time>
     648:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <total_time+0x1>
     64c:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <total_time+0x2>
     650:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <total_time+0x3>
     654:	89 2b       	or	r24, r25
     656:	8a 2b       	or	r24, r26
     658:	8b 2b       	or	r24, r27
     65a:	a1 f3       	breq	.-24     	; 0x644 <ultra_sound_sensor+0xd4>
     65c:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <total_time>
     660:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <total_time+0x1>
     664:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <total_time+0x2>
     668:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <total_time+0x3>
     66c:	ac 01       	movw	r20, r24
     66e:	bd 01       	movw	r22, r26
     670:	44 0f       	add	r20, r20
     672:	55 1f       	adc	r21, r21
     674:	66 1f       	adc	r22, r22
     676:	77 1f       	adc	r23, r23
     678:	84 0f       	add	r24, r20
     67a:	95 1f       	adc	r25, r21
     67c:	a6 1f       	adc	r26, r22
     67e:	b7 1f       	adc	r27, r23
     680:	bc 01       	movw	r22, r24
     682:	cd 01       	movw	r24, r26
     684:	66 0f       	add	r22, r22
     686:	77 1f       	adc	r23, r23
     688:	88 1f       	adc	r24, r24
     68a:	99 1f       	adc	r25, r25
     68c:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__floatunsisf>
     690:	26 e9       	ldi	r18, 0x96	; 150
     692:	33 e4       	ldi	r19, 0x43	; 67
     694:	4b e0       	ldi	r20, 0x0B	; 11
     696:	5d e3       	ldi	r21, 0x3D	; 61
     698:	0e 94 06 05 	call	0xa0c	; 0xa0c <__mulsf3>
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	40 e0       	ldi	r20, 0x00	; 0
     6a2:	5f e3       	ldi	r21, 0x3F	; 63
     6a4:	0e 94 06 05 	call	0xa0c	; 0xa0c <__mulsf3>
     6a8:	0e 94 49 04 	call	0x892	; 0x892 <__fixunssfsi>
     6ac:	eb 01       	movw	r28, r22
     6ae:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <total_time>
     6b2:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <total_time+0x1>
     6b6:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <total_time+0x2>
     6ba:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <total_time+0x3>
     6be:	8c e3       	ldi	r24, 0x3C	; 60
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <delay_ms>
     6c6:	53 c0       	rjmp	.+166    	; 0x76e <ultra_sound_sensor+0x1fe>
     6c8:	03 97       	sbiw	r24, 0x03	; 3
     6ca:	09 f0       	breq	.+2      	; 0x6ce <ultra_sound_sensor+0x15e>
     6cc:	50 c0       	rjmp	.+160    	; 0x76e <ultra_sound_sensor+0x1fe>
     6ce:	56 98       	cbi	0x0a, 6	; 10
     6d0:	57 9a       	sbi	0x0a, 7	; 10
     6d2:	5f 98       	cbi	0x0b, 7	; 11
     6d4:	82 e0       	ldi	r24, 0x02	; 2
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	0e 94 89 02 	call	0x512	; 0x512 <delay_us>
     6dc:	5f 9a       	sbi	0x0b, 7	; 11
     6de:	8a e0       	ldi	r24, 0x0A	; 10
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	0e 94 89 02 	call	0x512	; 0x512 <delay_us>
     6e6:	5f 98       	cbi	0x0b, 7	; 11
     6e8:	0e 94 a7 02 	call	0x54e	; 0x54e <init_getEcho>
     6ec:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <total_time>
     6f0:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <total_time+0x1>
     6f4:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <total_time+0x2>
     6f8:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <total_time+0x3>
     6fc:	89 2b       	or	r24, r25
     6fe:	8a 2b       	or	r24, r26
     700:	8b 2b       	or	r24, r27
     702:	a1 f3       	breq	.-24     	; 0x6ec <ultra_sound_sensor+0x17c>
     704:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <total_time>
     708:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <total_time+0x1>
     70c:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <total_time+0x2>
     710:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <total_time+0x3>
     714:	ac 01       	movw	r20, r24
     716:	bd 01       	movw	r22, r26
     718:	44 0f       	add	r20, r20
     71a:	55 1f       	adc	r21, r21
     71c:	66 1f       	adc	r22, r22
     71e:	77 1f       	adc	r23, r23
     720:	84 0f       	add	r24, r20
     722:	95 1f       	adc	r25, r21
     724:	a6 1f       	adc	r26, r22
     726:	b7 1f       	adc	r27, r23
     728:	bc 01       	movw	r22, r24
     72a:	cd 01       	movw	r24, r26
     72c:	66 0f       	add	r22, r22
     72e:	77 1f       	adc	r23, r23
     730:	88 1f       	adc	r24, r24
     732:	99 1f       	adc	r25, r25
     734:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__floatunsisf>
     738:	26 e9       	ldi	r18, 0x96	; 150
     73a:	33 e4       	ldi	r19, 0x43	; 67
     73c:	4b e0       	ldi	r20, 0x0B	; 11
     73e:	5d e3       	ldi	r21, 0x3D	; 61
     740:	0e 94 06 05 	call	0xa0c	; 0xa0c <__mulsf3>
     744:	20 e0       	ldi	r18, 0x00	; 0
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	40 e0       	ldi	r20, 0x00	; 0
     74a:	5f e3       	ldi	r21, 0x3F	; 63
     74c:	0e 94 06 05 	call	0xa0c	; 0xa0c <__mulsf3>
     750:	0e 94 49 04 	call	0x892	; 0x892 <__fixunssfsi>
     754:	eb 01       	movw	r28, r22
     756:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <total_time>
     75a:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <total_time+0x1>
     75e:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <total_time+0x2>
     762:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <total_time+0x3>
     766:	8c e3       	ldi	r24, 0x3C	; 60
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <delay_ms>
     76e:	ce 01       	movw	r24, r28
     770:	df 91       	pop	r29
     772:	cf 91       	pop	r28
     774:	08 95       	ret

00000776 <__vector_14>:
}

ISR (TIMER0_COMPA_vect) {
     776:	1f 92       	push	r1
     778:	0f 92       	push	r0
     77a:	0f b6       	in	r0, 0x3f	; 63
     77c:	0f 92       	push	r0
     77e:	11 24       	eor	r1, r1
     780:	2f 93       	push	r18
     782:	3f 93       	push	r19
     784:	8f 93       	push	r24
     786:	9f 93       	push	r25
     788:	af 93       	push	r26
     78a:	bf 93       	push	r27
	if (PIND & (1<<PIND2) | PIND & (1<<PIND4) | PIND & (1<<PIND6))
     78c:	89 b1       	in	r24, 0x09	; 9
     78e:	29 b1       	in	r18, 0x09	; 9
     790:	99 b1       	in	r25, 0x09	; 9
     792:	38 2f       	mov	r19, r24
     794:	34 70       	andi	r19, 0x04	; 4
     796:	82 2f       	mov	r24, r18
     798:	80 71       	andi	r24, 0x10	; 16
     79a:	83 2b       	or	r24, r19
     79c:	90 74       	andi	r25, 0x40	; 64
     79e:	89 2b       	or	r24, r25
     7a0:	a1 f0       	breq	.+40     	; 0x7ca <__vector_14+0x54>
	{
		us_counter++;
     7a2:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <us_counter>
     7a6:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <us_counter+0x1>
     7aa:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <us_counter+0x2>
     7ae:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <us_counter+0x3>
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	a1 1d       	adc	r26, r1
     7b6:	b1 1d       	adc	r27, r1
     7b8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <us_counter>
     7bc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <us_counter+0x1>
     7c0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <us_counter+0x2>
     7c4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <us_counter+0x3>
     7c8:	25 c0       	rjmp	.+74     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
	}
	else
	{
		if (us_counter !=0)
     7ca:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <us_counter>
     7ce:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <us_counter+0x1>
     7d2:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <us_counter+0x2>
     7d6:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <us_counter+0x3>
     7da:	89 2b       	or	r24, r25
     7dc:	8a 2b       	or	r24, r26
     7de:	8b 2b       	or	r24, r27
     7e0:	c9 f0       	breq	.+50     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
		{
			total_time = us_counter;
     7e2:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <us_counter>
     7e6:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <us_counter+0x1>
     7ea:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <us_counter+0x2>
     7ee:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <us_counter+0x3>
     7f2:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <total_time>
     7f6:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <total_time+0x1>
     7fa:	a0 93 8c 01 	sts	0x018C, r26	; 0x80018c <total_time+0x2>
     7fe:	b0 93 8d 01 	sts	0x018D, r27	; 0x80018d <total_time+0x3>
			us_counter = 0;
     802:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <us_counter>
     806:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <us_counter+0x1>
     80a:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <us_counter+0x2>
     80e:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <us_counter+0x3>

void reset_prescaler(void){
	TCCR0B &= ~((1<<CS00) | (1<<CS01));
}
void disable_interrupt(void){
	TCCR0B = 0;
     812:	15 bc       	out	0x25, r1	; 37
			total_time = us_counter;
			us_counter = 0;
			disable_interrupt();
		}
	}
	
     814:	bf 91       	pop	r27
     816:	af 91       	pop	r26
     818:	9f 91       	pop	r25
     81a:	8f 91       	pop	r24
     81c:	3f 91       	pop	r19
     81e:	2f 91       	pop	r18
     820:	0f 90       	pop	r0
     822:	0f be       	out	0x3f, r0	; 63
     824:	0f 90       	pop	r0
     826:	1f 90       	pop	r1
     828:	18 95       	reti

0000082a <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
     82a:	cf 93       	push	r28
     82c:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     82e:	8a 30       	cpi	r24, 0x0A	; 10
     830:	19 f4       	brne	.+6      	; 0x838 <uart_putchar+0xe>
		uart_putchar('\r', stream);
     832:	8d e0       	ldi	r24, 0x0D	; 13
     834:	0e 94 15 04 	call	0x82a	; 0x82a <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     838:	e0 ec       	ldi	r30, 0xC0	; 192
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	80 81       	ld	r24, Z
     83e:	85 ff       	sbrs	r24, 5
     840:	fd cf       	rjmp	.-6      	; 0x83c <uart_putchar+0x12>
	UDR0 = c;
     842:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     846:	cf 91       	pop	r28
     848:	08 95       	ret

0000084a <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     84a:	e0 ec       	ldi	r30, 0xC0	; 192
     84c:	f0 e0       	ldi	r31, 0x00	; 0
     84e:	80 81       	ld	r24, Z
     850:	88 23       	and	r24, r24
     852:	ec f7       	brge	.-6      	; 0x84e <uart_getchar+0x4>
	return UDR0;
     854:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     858:	08 95       	ret

0000085a <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
     85a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = UBRRL_VALUE;
     85e:	87 e6       	ldi	r24, 0x67	; 103
     860:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     864:	e0 ec       	ldi	r30, 0xC0	; 192
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	80 81       	ld	r24, Z
     86a:	8d 7f       	andi	r24, 0xFD	; 253
     86c:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     86e:	86 e0       	ldi	r24, 0x06	; 6
     870:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     874:	88 e1       	ldi	r24, 0x18	; 24
     876:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     87a:	08 95       	ret

0000087c <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
     87c:	e2 ea       	ldi	r30, 0xA2	; 162
     87e:	f1 e0       	ldi	r31, 0x01	; 1
     880:	8e e0       	ldi	r24, 0x0E	; 14
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	93 83       	std	Z+3, r25	; 0x03
     886:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	91 e0       	ldi	r25, 0x01	; 1
     88c:	91 83       	std	Z+1, r25	; 0x01
     88e:	80 83       	st	Z, r24
     890:	08 95       	ret

00000892 <__fixunssfsi>:
     892:	0e 94 e5 04 	call	0x9ca	; 0x9ca <__fp_splitA>
     896:	88 f0       	brcs	.+34     	; 0x8ba <__fixunssfsi+0x28>
     898:	9f 57       	subi	r25, 0x7F	; 127
     89a:	98 f0       	brcs	.+38     	; 0x8c2 <__fixunssfsi+0x30>
     89c:	b9 2f       	mov	r27, r25
     89e:	99 27       	eor	r25, r25
     8a0:	b7 51       	subi	r27, 0x17	; 23
     8a2:	b0 f0       	brcs	.+44     	; 0x8d0 <__fixunssfsi+0x3e>
     8a4:	e1 f0       	breq	.+56     	; 0x8de <__fixunssfsi+0x4c>
     8a6:	66 0f       	add	r22, r22
     8a8:	77 1f       	adc	r23, r23
     8aa:	88 1f       	adc	r24, r24
     8ac:	99 1f       	adc	r25, r25
     8ae:	1a f0       	brmi	.+6      	; 0x8b6 <__fixunssfsi+0x24>
     8b0:	ba 95       	dec	r27
     8b2:	c9 f7       	brne	.-14     	; 0x8a6 <__fixunssfsi+0x14>
     8b4:	14 c0       	rjmp	.+40     	; 0x8de <__fixunssfsi+0x4c>
     8b6:	b1 30       	cpi	r27, 0x01	; 1
     8b8:	91 f0       	breq	.+36     	; 0x8de <__fixunssfsi+0x4c>
     8ba:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fp_zero>
     8be:	b1 e0       	ldi	r27, 0x01	; 1
     8c0:	08 95       	ret
     8c2:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_zero>
     8c6:	67 2f       	mov	r22, r23
     8c8:	78 2f       	mov	r23, r24
     8ca:	88 27       	eor	r24, r24
     8cc:	b8 5f       	subi	r27, 0xF8	; 248
     8ce:	39 f0       	breq	.+14     	; 0x8de <__fixunssfsi+0x4c>
     8d0:	b9 3f       	cpi	r27, 0xF9	; 249
     8d2:	cc f3       	brlt	.-14     	; 0x8c6 <__fixunssfsi+0x34>
     8d4:	86 95       	lsr	r24
     8d6:	77 95       	ror	r23
     8d8:	67 95       	ror	r22
     8da:	b3 95       	inc	r27
     8dc:	d9 f7       	brne	.-10     	; 0x8d4 <__fixunssfsi+0x42>
     8de:	3e f4       	brtc	.+14     	; 0x8ee <__fixunssfsi+0x5c>
     8e0:	90 95       	com	r25
     8e2:	80 95       	com	r24
     8e4:	70 95       	com	r23
     8e6:	61 95       	neg	r22
     8e8:	7f 4f       	sbci	r23, 0xFF	; 255
     8ea:	8f 4f       	sbci	r24, 0xFF	; 255
     8ec:	9f 4f       	sbci	r25, 0xFF	; 255
     8ee:	08 95       	ret

000008f0 <__floatunsisf>:
     8f0:	e8 94       	clt
     8f2:	09 c0       	rjmp	.+18     	; 0x906 <__stack+0x7>

000008f4 <__floatsisf>:
     8f4:	97 fb       	bst	r25, 7
     8f6:	3e f4       	brtc	.+14     	; 0x906 <__stack+0x7>
     8f8:	90 95       	com	r25
     8fa:	80 95       	com	r24
     8fc:	70 95       	com	r23
     8fe:	61 95       	neg	r22
     900:	7f 4f       	sbci	r23, 0xFF	; 255
     902:	8f 4f       	sbci	r24, 0xFF	; 255
     904:	9f 4f       	sbci	r25, 0xFF	; 255
     906:	99 23       	and	r25, r25
     908:	a9 f0       	breq	.+42     	; 0x934 <__stack+0x35>
     90a:	f9 2f       	mov	r31, r25
     90c:	96 e9       	ldi	r25, 0x96	; 150
     90e:	bb 27       	eor	r27, r27
     910:	93 95       	inc	r25
     912:	f6 95       	lsr	r31
     914:	87 95       	ror	r24
     916:	77 95       	ror	r23
     918:	67 95       	ror	r22
     91a:	b7 95       	ror	r27
     91c:	f1 11       	cpse	r31, r1
     91e:	f8 cf       	rjmp	.-16     	; 0x910 <__stack+0x11>
     920:	fa f4       	brpl	.+62     	; 0x960 <__stack+0x61>
     922:	bb 0f       	add	r27, r27
     924:	11 f4       	brne	.+4      	; 0x92a <__stack+0x2b>
     926:	60 ff       	sbrs	r22, 0
     928:	1b c0       	rjmp	.+54     	; 0x960 <__stack+0x61>
     92a:	6f 5f       	subi	r22, 0xFF	; 255
     92c:	7f 4f       	sbci	r23, 0xFF	; 255
     92e:	8f 4f       	sbci	r24, 0xFF	; 255
     930:	9f 4f       	sbci	r25, 0xFF	; 255
     932:	16 c0       	rjmp	.+44     	; 0x960 <__stack+0x61>
     934:	88 23       	and	r24, r24
     936:	11 f0       	breq	.+4      	; 0x93c <__stack+0x3d>
     938:	96 e9       	ldi	r25, 0x96	; 150
     93a:	11 c0       	rjmp	.+34     	; 0x95e <__stack+0x5f>
     93c:	77 23       	and	r23, r23
     93e:	21 f0       	breq	.+8      	; 0x948 <__stack+0x49>
     940:	9e e8       	ldi	r25, 0x8E	; 142
     942:	87 2f       	mov	r24, r23
     944:	76 2f       	mov	r23, r22
     946:	05 c0       	rjmp	.+10     	; 0x952 <__stack+0x53>
     948:	66 23       	and	r22, r22
     94a:	71 f0       	breq	.+28     	; 0x968 <__stack+0x69>
     94c:	96 e8       	ldi	r25, 0x86	; 134
     94e:	86 2f       	mov	r24, r22
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	60 e0       	ldi	r22, 0x00	; 0
     954:	2a f0       	brmi	.+10     	; 0x960 <__stack+0x61>
     956:	9a 95       	dec	r25
     958:	66 0f       	add	r22, r22
     95a:	77 1f       	adc	r23, r23
     95c:	88 1f       	adc	r24, r24
     95e:	da f7       	brpl	.-10     	; 0x956 <__stack+0x57>
     960:	88 0f       	add	r24, r24
     962:	96 95       	lsr	r25
     964:	87 95       	ror	r24
     966:	97 f9       	bld	r25, 7
     968:	08 95       	ret

0000096a <__fp_inf>:
     96a:	97 f9       	bld	r25, 7
     96c:	9f 67       	ori	r25, 0x7F	; 127
     96e:	80 e8       	ldi	r24, 0x80	; 128
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	60 e0       	ldi	r22, 0x00	; 0
     974:	08 95       	ret

00000976 <__fp_nan>:
     976:	9f ef       	ldi	r25, 0xFF	; 255
     978:	80 ec       	ldi	r24, 0xC0	; 192
     97a:	08 95       	ret

0000097c <__fp_pscA>:
     97c:	00 24       	eor	r0, r0
     97e:	0a 94       	dec	r0
     980:	16 16       	cp	r1, r22
     982:	17 06       	cpc	r1, r23
     984:	18 06       	cpc	r1, r24
     986:	09 06       	cpc	r0, r25
     988:	08 95       	ret

0000098a <__fp_pscB>:
     98a:	00 24       	eor	r0, r0
     98c:	0a 94       	dec	r0
     98e:	12 16       	cp	r1, r18
     990:	13 06       	cpc	r1, r19
     992:	14 06       	cpc	r1, r20
     994:	05 06       	cpc	r0, r21
     996:	08 95       	ret

00000998 <__fp_round>:
     998:	09 2e       	mov	r0, r25
     99a:	03 94       	inc	r0
     99c:	00 0c       	add	r0, r0
     99e:	11 f4       	brne	.+4      	; 0x9a4 <__fp_round+0xc>
     9a0:	88 23       	and	r24, r24
     9a2:	52 f0       	brmi	.+20     	; 0x9b8 <__fp_round+0x20>
     9a4:	bb 0f       	add	r27, r27
     9a6:	40 f4       	brcc	.+16     	; 0x9b8 <__fp_round+0x20>
     9a8:	bf 2b       	or	r27, r31
     9aa:	11 f4       	brne	.+4      	; 0x9b0 <__fp_round+0x18>
     9ac:	60 ff       	sbrs	r22, 0
     9ae:	04 c0       	rjmp	.+8      	; 0x9b8 <__fp_round+0x20>
     9b0:	6f 5f       	subi	r22, 0xFF	; 255
     9b2:	7f 4f       	sbci	r23, 0xFF	; 255
     9b4:	8f 4f       	sbci	r24, 0xFF	; 255
     9b6:	9f 4f       	sbci	r25, 0xFF	; 255
     9b8:	08 95       	ret

000009ba <__fp_split3>:
     9ba:	57 fd       	sbrc	r21, 7
     9bc:	90 58       	subi	r25, 0x80	; 128
     9be:	44 0f       	add	r20, r20
     9c0:	55 1f       	adc	r21, r21
     9c2:	59 f0       	breq	.+22     	; 0x9da <__fp_splitA+0x10>
     9c4:	5f 3f       	cpi	r21, 0xFF	; 255
     9c6:	71 f0       	breq	.+28     	; 0x9e4 <__fp_splitA+0x1a>
     9c8:	47 95       	ror	r20

000009ca <__fp_splitA>:
     9ca:	88 0f       	add	r24, r24
     9cc:	97 fb       	bst	r25, 7
     9ce:	99 1f       	adc	r25, r25
     9d0:	61 f0       	breq	.+24     	; 0x9ea <__fp_splitA+0x20>
     9d2:	9f 3f       	cpi	r25, 0xFF	; 255
     9d4:	79 f0       	breq	.+30     	; 0x9f4 <__fp_splitA+0x2a>
     9d6:	87 95       	ror	r24
     9d8:	08 95       	ret
     9da:	12 16       	cp	r1, r18
     9dc:	13 06       	cpc	r1, r19
     9de:	14 06       	cpc	r1, r20
     9e0:	55 1f       	adc	r21, r21
     9e2:	f2 cf       	rjmp	.-28     	; 0x9c8 <__fp_split3+0xe>
     9e4:	46 95       	lsr	r20
     9e6:	f1 df       	rcall	.-30     	; 0x9ca <__fp_splitA>
     9e8:	08 c0       	rjmp	.+16     	; 0x9fa <__fp_splitA+0x30>
     9ea:	16 16       	cp	r1, r22
     9ec:	17 06       	cpc	r1, r23
     9ee:	18 06       	cpc	r1, r24
     9f0:	99 1f       	adc	r25, r25
     9f2:	f1 cf       	rjmp	.-30     	; 0x9d6 <__fp_splitA+0xc>
     9f4:	86 95       	lsr	r24
     9f6:	71 05       	cpc	r23, r1
     9f8:	61 05       	cpc	r22, r1
     9fa:	08 94       	sec
     9fc:	08 95       	ret

000009fe <__fp_zero>:
     9fe:	e8 94       	clt

00000a00 <__fp_szero>:
     a00:	bb 27       	eor	r27, r27
     a02:	66 27       	eor	r22, r22
     a04:	77 27       	eor	r23, r23
     a06:	cb 01       	movw	r24, r22
     a08:	97 f9       	bld	r25, 7
     a0a:	08 95       	ret

00000a0c <__mulsf3>:
     a0c:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3x>
     a10:	0c 94 cc 04 	jmp	0x998	; 0x998 <__fp_round>
     a14:	0e 94 be 04 	call	0x97c	; 0x97c <__fp_pscA>
     a18:	38 f0       	brcs	.+14     	; 0xa28 <__mulsf3+0x1c>
     a1a:	0e 94 c5 04 	call	0x98a	; 0x98a <__fp_pscB>
     a1e:	20 f0       	brcs	.+8      	; 0xa28 <__mulsf3+0x1c>
     a20:	95 23       	and	r25, r21
     a22:	11 f0       	breq	.+4      	; 0xa28 <__mulsf3+0x1c>
     a24:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__fp_inf>
     a28:	0c 94 bb 04 	jmp	0x976	; 0x976 <__fp_nan>
     a2c:	11 24       	eor	r1, r1
     a2e:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__fp_szero>

00000a32 <__mulsf3x>:
     a32:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__fp_split3>
     a36:	70 f3       	brcs	.-36     	; 0xa14 <__mulsf3+0x8>

00000a38 <__mulsf3_pse>:
     a38:	95 9f       	mul	r25, r21
     a3a:	c1 f3       	breq	.-16     	; 0xa2c <__mulsf3+0x20>
     a3c:	95 0f       	add	r25, r21
     a3e:	50 e0       	ldi	r21, 0x00	; 0
     a40:	55 1f       	adc	r21, r21
     a42:	62 9f       	mul	r22, r18
     a44:	f0 01       	movw	r30, r0
     a46:	72 9f       	mul	r23, r18
     a48:	bb 27       	eor	r27, r27
     a4a:	f0 0d       	add	r31, r0
     a4c:	b1 1d       	adc	r27, r1
     a4e:	63 9f       	mul	r22, r19
     a50:	aa 27       	eor	r26, r26
     a52:	f0 0d       	add	r31, r0
     a54:	b1 1d       	adc	r27, r1
     a56:	aa 1f       	adc	r26, r26
     a58:	64 9f       	mul	r22, r20
     a5a:	66 27       	eor	r22, r22
     a5c:	b0 0d       	add	r27, r0
     a5e:	a1 1d       	adc	r26, r1
     a60:	66 1f       	adc	r22, r22
     a62:	82 9f       	mul	r24, r18
     a64:	22 27       	eor	r18, r18
     a66:	b0 0d       	add	r27, r0
     a68:	a1 1d       	adc	r26, r1
     a6a:	62 1f       	adc	r22, r18
     a6c:	73 9f       	mul	r23, r19
     a6e:	b0 0d       	add	r27, r0
     a70:	a1 1d       	adc	r26, r1
     a72:	62 1f       	adc	r22, r18
     a74:	83 9f       	mul	r24, r19
     a76:	a0 0d       	add	r26, r0
     a78:	61 1d       	adc	r22, r1
     a7a:	22 1f       	adc	r18, r18
     a7c:	74 9f       	mul	r23, r20
     a7e:	33 27       	eor	r19, r19
     a80:	a0 0d       	add	r26, r0
     a82:	61 1d       	adc	r22, r1
     a84:	23 1f       	adc	r18, r19
     a86:	84 9f       	mul	r24, r20
     a88:	60 0d       	add	r22, r0
     a8a:	21 1d       	adc	r18, r1
     a8c:	82 2f       	mov	r24, r18
     a8e:	76 2f       	mov	r23, r22
     a90:	6a 2f       	mov	r22, r26
     a92:	11 24       	eor	r1, r1
     a94:	9f 57       	subi	r25, 0x7F	; 127
     a96:	50 40       	sbci	r21, 0x00	; 0
     a98:	9a f0       	brmi	.+38     	; 0xac0 <__mulsf3_pse+0x88>
     a9a:	f1 f0       	breq	.+60     	; 0xad8 <__mulsf3_pse+0xa0>
     a9c:	88 23       	and	r24, r24
     a9e:	4a f0       	brmi	.+18     	; 0xab2 <__mulsf3_pse+0x7a>
     aa0:	ee 0f       	add	r30, r30
     aa2:	ff 1f       	adc	r31, r31
     aa4:	bb 1f       	adc	r27, r27
     aa6:	66 1f       	adc	r22, r22
     aa8:	77 1f       	adc	r23, r23
     aaa:	88 1f       	adc	r24, r24
     aac:	91 50       	subi	r25, 0x01	; 1
     aae:	50 40       	sbci	r21, 0x00	; 0
     ab0:	a9 f7       	brne	.-22     	; 0xa9c <__mulsf3_pse+0x64>
     ab2:	9e 3f       	cpi	r25, 0xFE	; 254
     ab4:	51 05       	cpc	r21, r1
     ab6:	80 f0       	brcs	.+32     	; 0xad8 <__mulsf3_pse+0xa0>
     ab8:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__fp_inf>
     abc:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__fp_szero>
     ac0:	5f 3f       	cpi	r21, 0xFF	; 255
     ac2:	e4 f3       	brlt	.-8      	; 0xabc <__mulsf3_pse+0x84>
     ac4:	98 3e       	cpi	r25, 0xE8	; 232
     ac6:	d4 f3       	brlt	.-12     	; 0xabc <__mulsf3_pse+0x84>
     ac8:	86 95       	lsr	r24
     aca:	77 95       	ror	r23
     acc:	67 95       	ror	r22
     ace:	b7 95       	ror	r27
     ad0:	f7 95       	ror	r31
     ad2:	e7 95       	ror	r30
     ad4:	9f 5f       	subi	r25, 0xFF	; 255
     ad6:	c1 f7       	brne	.-16     	; 0xac8 <__mulsf3_pse+0x90>
     ad8:	fe 2b       	or	r31, r30
     ada:	88 0f       	add	r24, r24
     adc:	91 1d       	adc	r25, r1
     ade:	96 95       	lsr	r25
     ae0:	87 95       	ror	r24
     ae2:	97 f9       	bld	r25, 7
     ae4:	08 95       	ret

00000ae6 <printf>:
     ae6:	a0 e0       	ldi	r26, 0x00	; 0
     ae8:	b0 e0       	ldi	r27, 0x00	; 0
     aea:	e9 e7       	ldi	r30, 0x79	; 121
     aec:	f5 e0       	ldi	r31, 0x05	; 5
     aee:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__prologue_saves__+0x20>
     af2:	ae 01       	movw	r20, r28
     af4:	4b 5f       	subi	r20, 0xFB	; 251
     af6:	5f 4f       	sbci	r21, 0xFF	; 255
     af8:	fa 01       	movw	r30, r20
     afa:	61 91       	ld	r22, Z+
     afc:	71 91       	ld	r23, Z+
     afe:	af 01       	movw	r20, r30
     b00:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <__iob+0x2>
     b04:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <__iob+0x3>
     b08:	0e 94 9f 05 	call	0xb3e	; 0xb3e <vfprintf>
     b0c:	e2 e0       	ldi	r30, 0x02	; 2
     b0e:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__epilogue_restores__+0x20>

00000b12 <scanf>:
     b12:	a0 e0       	ldi	r26, 0x00	; 0
     b14:	b0 e0       	ldi	r27, 0x00	; 0
     b16:	ef e8       	ldi	r30, 0x8F	; 143
     b18:	f5 e0       	ldi	r31, 0x05	; 5
     b1a:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__prologue_saves__+0x20>
     b1e:	ae 01       	movw	r20, r28
     b20:	4b 5f       	subi	r20, 0xFB	; 251
     b22:	5f 4f       	sbci	r21, 0xFF	; 255
     b24:	fa 01       	movw	r30, r20
     b26:	61 91       	ld	r22, Z+
     b28:	71 91       	ld	r23, Z+
     b2a:	af 01       	movw	r20, r30
     b2c:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__iob>
     b30:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <__iob+0x1>
     b34:	0e 94 1c 09 	call	0x1238	; 0x1238 <vfscanf>
     b38:	e2 e0       	ldi	r30, 0x02	; 2
     b3a:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__epilogue_restores__+0x20>

00000b3e <vfprintf>:
     b3e:	ab e0       	ldi	r26, 0x0B	; 11
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	e5 ea       	ldi	r30, 0xA5	; 165
     b44:	f5 e0       	ldi	r31, 0x05	; 5
     b46:	0c 94 4b 0b 	jmp	0x1696	; 0x1696 <__prologue_saves__>
     b4a:	6c 01       	movw	r12, r24
     b4c:	7b 01       	movw	r14, r22
     b4e:	8a 01       	movw	r16, r20
     b50:	fc 01       	movw	r30, r24
     b52:	17 82       	std	Z+7, r1	; 0x07
     b54:	16 82       	std	Z+6, r1	; 0x06
     b56:	83 81       	ldd	r24, Z+3	; 0x03
     b58:	81 ff       	sbrs	r24, 1
     b5a:	cc c1       	rjmp	.+920    	; 0xef4 <vfprintf+0x3b6>
     b5c:	ce 01       	movw	r24, r28
     b5e:	01 96       	adiw	r24, 0x01	; 1
     b60:	3c 01       	movw	r6, r24
     b62:	f6 01       	movw	r30, r12
     b64:	93 81       	ldd	r25, Z+3	; 0x03
     b66:	f7 01       	movw	r30, r14
     b68:	93 fd       	sbrc	r25, 3
     b6a:	85 91       	lpm	r24, Z+
     b6c:	93 ff       	sbrs	r25, 3
     b6e:	81 91       	ld	r24, Z+
     b70:	7f 01       	movw	r14, r30
     b72:	88 23       	and	r24, r24
     b74:	09 f4       	brne	.+2      	; 0xb78 <vfprintf+0x3a>
     b76:	ba c1       	rjmp	.+884    	; 0xeec <vfprintf+0x3ae>
     b78:	85 32       	cpi	r24, 0x25	; 37
     b7a:	39 f4       	brne	.+14     	; 0xb8a <vfprintf+0x4c>
     b7c:	93 fd       	sbrc	r25, 3
     b7e:	85 91       	lpm	r24, Z+
     b80:	93 ff       	sbrs	r25, 3
     b82:	81 91       	ld	r24, Z+
     b84:	7f 01       	movw	r14, r30
     b86:	85 32       	cpi	r24, 0x25	; 37
     b88:	29 f4       	brne	.+10     	; 0xb94 <vfprintf+0x56>
     b8a:	b6 01       	movw	r22, r12
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     b92:	e7 cf       	rjmp	.-50     	; 0xb62 <vfprintf+0x24>
     b94:	91 2c       	mov	r9, r1
     b96:	21 2c       	mov	r2, r1
     b98:	31 2c       	mov	r3, r1
     b9a:	ff e1       	ldi	r31, 0x1F	; 31
     b9c:	f3 15       	cp	r31, r3
     b9e:	d8 f0       	brcs	.+54     	; 0xbd6 <vfprintf+0x98>
     ba0:	8b 32       	cpi	r24, 0x2B	; 43
     ba2:	79 f0       	breq	.+30     	; 0xbc2 <vfprintf+0x84>
     ba4:	38 f4       	brcc	.+14     	; 0xbb4 <vfprintf+0x76>
     ba6:	80 32       	cpi	r24, 0x20	; 32
     ba8:	79 f0       	breq	.+30     	; 0xbc8 <vfprintf+0x8a>
     baa:	83 32       	cpi	r24, 0x23	; 35
     bac:	a1 f4       	brne	.+40     	; 0xbd6 <vfprintf+0x98>
     bae:	23 2d       	mov	r18, r3
     bb0:	20 61       	ori	r18, 0x10	; 16
     bb2:	1d c0       	rjmp	.+58     	; 0xbee <vfprintf+0xb0>
     bb4:	8d 32       	cpi	r24, 0x2D	; 45
     bb6:	61 f0       	breq	.+24     	; 0xbd0 <vfprintf+0x92>
     bb8:	80 33       	cpi	r24, 0x30	; 48
     bba:	69 f4       	brne	.+26     	; 0xbd6 <vfprintf+0x98>
     bbc:	23 2d       	mov	r18, r3
     bbe:	21 60       	ori	r18, 0x01	; 1
     bc0:	16 c0       	rjmp	.+44     	; 0xbee <vfprintf+0xb0>
     bc2:	83 2d       	mov	r24, r3
     bc4:	82 60       	ori	r24, 0x02	; 2
     bc6:	38 2e       	mov	r3, r24
     bc8:	e3 2d       	mov	r30, r3
     bca:	e4 60       	ori	r30, 0x04	; 4
     bcc:	3e 2e       	mov	r3, r30
     bce:	2a c0       	rjmp	.+84     	; 0xc24 <vfprintf+0xe6>
     bd0:	f3 2d       	mov	r31, r3
     bd2:	f8 60       	ori	r31, 0x08	; 8
     bd4:	1d c0       	rjmp	.+58     	; 0xc10 <vfprintf+0xd2>
     bd6:	37 fc       	sbrc	r3, 7
     bd8:	2d c0       	rjmp	.+90     	; 0xc34 <vfprintf+0xf6>
     bda:	20 ed       	ldi	r18, 0xD0	; 208
     bdc:	28 0f       	add	r18, r24
     bde:	2a 30       	cpi	r18, 0x0A	; 10
     be0:	40 f0       	brcs	.+16     	; 0xbf2 <vfprintf+0xb4>
     be2:	8e 32       	cpi	r24, 0x2E	; 46
     be4:	b9 f4       	brne	.+46     	; 0xc14 <vfprintf+0xd6>
     be6:	36 fc       	sbrc	r3, 6
     be8:	81 c1       	rjmp	.+770    	; 0xeec <vfprintf+0x3ae>
     bea:	23 2d       	mov	r18, r3
     bec:	20 64       	ori	r18, 0x40	; 64
     bee:	32 2e       	mov	r3, r18
     bf0:	19 c0       	rjmp	.+50     	; 0xc24 <vfprintf+0xe6>
     bf2:	36 fe       	sbrs	r3, 6
     bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0xc4>
     bf6:	8a e0       	ldi	r24, 0x0A	; 10
     bf8:	98 9e       	mul	r9, r24
     bfa:	20 0d       	add	r18, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	92 2e       	mov	r9, r18
     c00:	11 c0       	rjmp	.+34     	; 0xc24 <vfprintf+0xe6>
     c02:	ea e0       	ldi	r30, 0x0A	; 10
     c04:	2e 9e       	mul	r2, r30
     c06:	20 0d       	add	r18, r0
     c08:	11 24       	eor	r1, r1
     c0a:	22 2e       	mov	r2, r18
     c0c:	f3 2d       	mov	r31, r3
     c0e:	f0 62       	ori	r31, 0x20	; 32
     c10:	3f 2e       	mov	r3, r31
     c12:	08 c0       	rjmp	.+16     	; 0xc24 <vfprintf+0xe6>
     c14:	8c 36       	cpi	r24, 0x6C	; 108
     c16:	21 f4       	brne	.+8      	; 0xc20 <vfprintf+0xe2>
     c18:	83 2d       	mov	r24, r3
     c1a:	80 68       	ori	r24, 0x80	; 128
     c1c:	38 2e       	mov	r3, r24
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <vfprintf+0xe6>
     c20:	88 36       	cpi	r24, 0x68	; 104
     c22:	41 f4       	brne	.+16     	; 0xc34 <vfprintf+0xf6>
     c24:	f7 01       	movw	r30, r14
     c26:	93 fd       	sbrc	r25, 3
     c28:	85 91       	lpm	r24, Z+
     c2a:	93 ff       	sbrs	r25, 3
     c2c:	81 91       	ld	r24, Z+
     c2e:	7f 01       	movw	r14, r30
     c30:	81 11       	cpse	r24, r1
     c32:	b3 cf       	rjmp	.-154    	; 0xb9a <vfprintf+0x5c>
     c34:	98 2f       	mov	r25, r24
     c36:	9f 7d       	andi	r25, 0xDF	; 223
     c38:	95 54       	subi	r25, 0x45	; 69
     c3a:	93 30       	cpi	r25, 0x03	; 3
     c3c:	28 f4       	brcc	.+10     	; 0xc48 <vfprintf+0x10a>
     c3e:	0c 5f       	subi	r16, 0xFC	; 252
     c40:	1f 4f       	sbci	r17, 0xFF	; 255
     c42:	9f e3       	ldi	r25, 0x3F	; 63
     c44:	99 83       	std	Y+1, r25	; 0x01
     c46:	0d c0       	rjmp	.+26     	; 0xc62 <vfprintf+0x124>
     c48:	83 36       	cpi	r24, 0x63	; 99
     c4a:	31 f0       	breq	.+12     	; 0xc58 <vfprintf+0x11a>
     c4c:	83 37       	cpi	r24, 0x73	; 115
     c4e:	71 f0       	breq	.+28     	; 0xc6c <vfprintf+0x12e>
     c50:	83 35       	cpi	r24, 0x53	; 83
     c52:	09 f0       	breq	.+2      	; 0xc56 <vfprintf+0x118>
     c54:	59 c0       	rjmp	.+178    	; 0xd08 <vfprintf+0x1ca>
     c56:	21 c0       	rjmp	.+66     	; 0xc9a <vfprintf+0x15c>
     c58:	f8 01       	movw	r30, r16
     c5a:	80 81       	ld	r24, Z
     c5c:	89 83       	std	Y+1, r24	; 0x01
     c5e:	0e 5f       	subi	r16, 0xFE	; 254
     c60:	1f 4f       	sbci	r17, 0xFF	; 255
     c62:	88 24       	eor	r8, r8
     c64:	83 94       	inc	r8
     c66:	91 2c       	mov	r9, r1
     c68:	53 01       	movw	r10, r6
     c6a:	13 c0       	rjmp	.+38     	; 0xc92 <vfprintf+0x154>
     c6c:	28 01       	movw	r4, r16
     c6e:	f2 e0       	ldi	r31, 0x02	; 2
     c70:	4f 0e       	add	r4, r31
     c72:	51 1c       	adc	r5, r1
     c74:	f8 01       	movw	r30, r16
     c76:	a0 80       	ld	r10, Z
     c78:	b1 80       	ldd	r11, Z+1	; 0x01
     c7a:	36 fe       	sbrs	r3, 6
     c7c:	03 c0       	rjmp	.+6      	; 0xc84 <vfprintf+0x146>
     c7e:	69 2d       	mov	r22, r9
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <vfprintf+0x14a>
     c84:	6f ef       	ldi	r22, 0xFF	; 255
     c86:	7f ef       	ldi	r23, 0xFF	; 255
     c88:	c5 01       	movw	r24, r10
     c8a:	0e 94 4c 0a 	call	0x1498	; 0x1498 <strnlen>
     c8e:	4c 01       	movw	r8, r24
     c90:	82 01       	movw	r16, r4
     c92:	f3 2d       	mov	r31, r3
     c94:	ff 77       	andi	r31, 0x7F	; 127
     c96:	3f 2e       	mov	r3, r31
     c98:	16 c0       	rjmp	.+44     	; 0xcc6 <vfprintf+0x188>
     c9a:	28 01       	movw	r4, r16
     c9c:	22 e0       	ldi	r18, 0x02	; 2
     c9e:	42 0e       	add	r4, r18
     ca0:	51 1c       	adc	r5, r1
     ca2:	f8 01       	movw	r30, r16
     ca4:	a0 80       	ld	r10, Z
     ca6:	b1 80       	ldd	r11, Z+1	; 0x01
     ca8:	36 fe       	sbrs	r3, 6
     caa:	03 c0       	rjmp	.+6      	; 0xcb2 <vfprintf+0x174>
     cac:	69 2d       	mov	r22, r9
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	02 c0       	rjmp	.+4      	; 0xcb6 <vfprintf+0x178>
     cb2:	6f ef       	ldi	r22, 0xFF	; 255
     cb4:	7f ef       	ldi	r23, 0xFF	; 255
     cb6:	c5 01       	movw	r24, r10
     cb8:	0e 94 41 0a 	call	0x1482	; 0x1482 <strnlen_P>
     cbc:	4c 01       	movw	r8, r24
     cbe:	f3 2d       	mov	r31, r3
     cc0:	f0 68       	ori	r31, 0x80	; 128
     cc2:	3f 2e       	mov	r3, r31
     cc4:	82 01       	movw	r16, r4
     cc6:	33 fc       	sbrc	r3, 3
     cc8:	1b c0       	rjmp	.+54     	; 0xd00 <vfprintf+0x1c2>
     cca:	82 2d       	mov	r24, r2
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	88 16       	cp	r8, r24
     cd0:	99 06       	cpc	r9, r25
     cd2:	b0 f4       	brcc	.+44     	; 0xd00 <vfprintf+0x1c2>
     cd4:	b6 01       	movw	r22, r12
     cd6:	80 e2       	ldi	r24, 0x20	; 32
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     cde:	2a 94       	dec	r2
     ce0:	f4 cf       	rjmp	.-24     	; 0xcca <vfprintf+0x18c>
     ce2:	f5 01       	movw	r30, r10
     ce4:	37 fc       	sbrc	r3, 7
     ce6:	85 91       	lpm	r24, Z+
     ce8:	37 fe       	sbrs	r3, 7
     cea:	81 91       	ld	r24, Z+
     cec:	5f 01       	movw	r10, r30
     cee:	b6 01       	movw	r22, r12
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     cf6:	21 10       	cpse	r2, r1
     cf8:	2a 94       	dec	r2
     cfa:	21 e0       	ldi	r18, 0x01	; 1
     cfc:	82 1a       	sub	r8, r18
     cfe:	91 08       	sbc	r9, r1
     d00:	81 14       	cp	r8, r1
     d02:	91 04       	cpc	r9, r1
     d04:	71 f7       	brne	.-36     	; 0xce2 <vfprintf+0x1a4>
     d06:	e8 c0       	rjmp	.+464    	; 0xed8 <vfprintf+0x39a>
     d08:	84 36       	cpi	r24, 0x64	; 100
     d0a:	11 f0       	breq	.+4      	; 0xd10 <vfprintf+0x1d2>
     d0c:	89 36       	cpi	r24, 0x69	; 105
     d0e:	41 f5       	brne	.+80     	; 0xd60 <vfprintf+0x222>
     d10:	f8 01       	movw	r30, r16
     d12:	37 fe       	sbrs	r3, 7
     d14:	07 c0       	rjmp	.+14     	; 0xd24 <vfprintf+0x1e6>
     d16:	60 81       	ld	r22, Z
     d18:	71 81       	ldd	r23, Z+1	; 0x01
     d1a:	82 81       	ldd	r24, Z+2	; 0x02
     d1c:	93 81       	ldd	r25, Z+3	; 0x03
     d1e:	0c 5f       	subi	r16, 0xFC	; 252
     d20:	1f 4f       	sbci	r17, 0xFF	; 255
     d22:	08 c0       	rjmp	.+16     	; 0xd34 <vfprintf+0x1f6>
     d24:	60 81       	ld	r22, Z
     d26:	71 81       	ldd	r23, Z+1	; 0x01
     d28:	07 2e       	mov	r0, r23
     d2a:	00 0c       	add	r0, r0
     d2c:	88 0b       	sbc	r24, r24
     d2e:	99 0b       	sbc	r25, r25
     d30:	0e 5f       	subi	r16, 0xFE	; 254
     d32:	1f 4f       	sbci	r17, 0xFF	; 255
     d34:	f3 2d       	mov	r31, r3
     d36:	ff 76       	andi	r31, 0x6F	; 111
     d38:	3f 2e       	mov	r3, r31
     d3a:	97 ff       	sbrs	r25, 7
     d3c:	09 c0       	rjmp	.+18     	; 0xd50 <vfprintf+0x212>
     d3e:	90 95       	com	r25
     d40:	80 95       	com	r24
     d42:	70 95       	com	r23
     d44:	61 95       	neg	r22
     d46:	7f 4f       	sbci	r23, 0xFF	; 255
     d48:	8f 4f       	sbci	r24, 0xFF	; 255
     d4a:	9f 4f       	sbci	r25, 0xFF	; 255
     d4c:	f0 68       	ori	r31, 0x80	; 128
     d4e:	3f 2e       	mov	r3, r31
     d50:	2a e0       	ldi	r18, 0x0A	; 10
     d52:	30 e0       	ldi	r19, 0x00	; 0
     d54:	a3 01       	movw	r20, r6
     d56:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__ultoa_invert>
     d5a:	88 2e       	mov	r8, r24
     d5c:	86 18       	sub	r8, r6
     d5e:	45 c0       	rjmp	.+138    	; 0xdea <vfprintf+0x2ac>
     d60:	85 37       	cpi	r24, 0x75	; 117
     d62:	31 f4       	brne	.+12     	; 0xd70 <vfprintf+0x232>
     d64:	23 2d       	mov	r18, r3
     d66:	2f 7e       	andi	r18, 0xEF	; 239
     d68:	b2 2e       	mov	r11, r18
     d6a:	2a e0       	ldi	r18, 0x0A	; 10
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	25 c0       	rjmp	.+74     	; 0xdba <vfprintf+0x27c>
     d70:	93 2d       	mov	r25, r3
     d72:	99 7f       	andi	r25, 0xF9	; 249
     d74:	b9 2e       	mov	r11, r25
     d76:	8f 36       	cpi	r24, 0x6F	; 111
     d78:	c1 f0       	breq	.+48     	; 0xdaa <vfprintf+0x26c>
     d7a:	18 f4       	brcc	.+6      	; 0xd82 <vfprintf+0x244>
     d7c:	88 35       	cpi	r24, 0x58	; 88
     d7e:	79 f0       	breq	.+30     	; 0xd9e <vfprintf+0x260>
     d80:	b5 c0       	rjmp	.+362    	; 0xeec <vfprintf+0x3ae>
     d82:	80 37       	cpi	r24, 0x70	; 112
     d84:	19 f0       	breq	.+6      	; 0xd8c <vfprintf+0x24e>
     d86:	88 37       	cpi	r24, 0x78	; 120
     d88:	21 f0       	breq	.+8      	; 0xd92 <vfprintf+0x254>
     d8a:	b0 c0       	rjmp	.+352    	; 0xeec <vfprintf+0x3ae>
     d8c:	e9 2f       	mov	r30, r25
     d8e:	e0 61       	ori	r30, 0x10	; 16
     d90:	be 2e       	mov	r11, r30
     d92:	b4 fe       	sbrs	r11, 4
     d94:	0d c0       	rjmp	.+26     	; 0xdb0 <vfprintf+0x272>
     d96:	fb 2d       	mov	r31, r11
     d98:	f4 60       	ori	r31, 0x04	; 4
     d9a:	bf 2e       	mov	r11, r31
     d9c:	09 c0       	rjmp	.+18     	; 0xdb0 <vfprintf+0x272>
     d9e:	34 fe       	sbrs	r3, 4
     da0:	0a c0       	rjmp	.+20     	; 0xdb6 <vfprintf+0x278>
     da2:	29 2f       	mov	r18, r25
     da4:	26 60       	ori	r18, 0x06	; 6
     da6:	b2 2e       	mov	r11, r18
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <vfprintf+0x278>
     daa:	28 e0       	ldi	r18, 0x08	; 8
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	05 c0       	rjmp	.+10     	; 0xdba <vfprintf+0x27c>
     db0:	20 e1       	ldi	r18, 0x10	; 16
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	02 c0       	rjmp	.+4      	; 0xdba <vfprintf+0x27c>
     db6:	20 e1       	ldi	r18, 0x10	; 16
     db8:	32 e0       	ldi	r19, 0x02	; 2
     dba:	f8 01       	movw	r30, r16
     dbc:	b7 fe       	sbrs	r11, 7
     dbe:	07 c0       	rjmp	.+14     	; 0xdce <vfprintf+0x290>
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	82 81       	ldd	r24, Z+2	; 0x02
     dc6:	93 81       	ldd	r25, Z+3	; 0x03
     dc8:	0c 5f       	subi	r16, 0xFC	; 252
     dca:	1f 4f       	sbci	r17, 0xFF	; 255
     dcc:	06 c0       	rjmp	.+12     	; 0xdda <vfprintf+0x29c>
     dce:	60 81       	ld	r22, Z
     dd0:	71 81       	ldd	r23, Z+1	; 0x01
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 5f       	subi	r16, 0xFE	; 254
     dd8:	1f 4f       	sbci	r17, 0xFF	; 255
     dda:	a3 01       	movw	r20, r6
     ddc:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__ultoa_invert>
     de0:	88 2e       	mov	r8, r24
     de2:	86 18       	sub	r8, r6
     de4:	fb 2d       	mov	r31, r11
     de6:	ff 77       	andi	r31, 0x7F	; 127
     de8:	3f 2e       	mov	r3, r31
     dea:	36 fe       	sbrs	r3, 6
     dec:	0d c0       	rjmp	.+26     	; 0xe08 <vfprintf+0x2ca>
     dee:	23 2d       	mov	r18, r3
     df0:	2e 7f       	andi	r18, 0xFE	; 254
     df2:	a2 2e       	mov	r10, r18
     df4:	89 14       	cp	r8, r9
     df6:	58 f4       	brcc	.+22     	; 0xe0e <vfprintf+0x2d0>
     df8:	34 fe       	sbrs	r3, 4
     dfa:	0b c0       	rjmp	.+22     	; 0xe12 <vfprintf+0x2d4>
     dfc:	32 fc       	sbrc	r3, 2
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <vfprintf+0x2d4>
     e00:	83 2d       	mov	r24, r3
     e02:	8e 7e       	andi	r24, 0xEE	; 238
     e04:	a8 2e       	mov	r10, r24
     e06:	05 c0       	rjmp	.+10     	; 0xe12 <vfprintf+0x2d4>
     e08:	b8 2c       	mov	r11, r8
     e0a:	a3 2c       	mov	r10, r3
     e0c:	03 c0       	rjmp	.+6      	; 0xe14 <vfprintf+0x2d6>
     e0e:	b8 2c       	mov	r11, r8
     e10:	01 c0       	rjmp	.+2      	; 0xe14 <vfprintf+0x2d6>
     e12:	b9 2c       	mov	r11, r9
     e14:	a4 fe       	sbrs	r10, 4
     e16:	0f c0       	rjmp	.+30     	; 0xe36 <vfprintf+0x2f8>
     e18:	fe 01       	movw	r30, r28
     e1a:	e8 0d       	add	r30, r8
     e1c:	f1 1d       	adc	r31, r1
     e1e:	80 81       	ld	r24, Z
     e20:	80 33       	cpi	r24, 0x30	; 48
     e22:	21 f4       	brne	.+8      	; 0xe2c <vfprintf+0x2ee>
     e24:	9a 2d       	mov	r25, r10
     e26:	99 7e       	andi	r25, 0xE9	; 233
     e28:	a9 2e       	mov	r10, r25
     e2a:	09 c0       	rjmp	.+18     	; 0xe3e <vfprintf+0x300>
     e2c:	a2 fe       	sbrs	r10, 2
     e2e:	06 c0       	rjmp	.+12     	; 0xe3c <vfprintf+0x2fe>
     e30:	b3 94       	inc	r11
     e32:	b3 94       	inc	r11
     e34:	04 c0       	rjmp	.+8      	; 0xe3e <vfprintf+0x300>
     e36:	8a 2d       	mov	r24, r10
     e38:	86 78       	andi	r24, 0x86	; 134
     e3a:	09 f0       	breq	.+2      	; 0xe3e <vfprintf+0x300>
     e3c:	b3 94       	inc	r11
     e3e:	a3 fc       	sbrc	r10, 3
     e40:	11 c0       	rjmp	.+34     	; 0xe64 <vfprintf+0x326>
     e42:	a0 fe       	sbrs	r10, 0
     e44:	06 c0       	rjmp	.+12     	; 0xe52 <vfprintf+0x314>
     e46:	b2 14       	cp	r11, r2
     e48:	88 f4       	brcc	.+34     	; 0xe6c <vfprintf+0x32e>
     e4a:	28 0c       	add	r2, r8
     e4c:	92 2c       	mov	r9, r2
     e4e:	9b 18       	sub	r9, r11
     e50:	0e c0       	rjmp	.+28     	; 0xe6e <vfprintf+0x330>
     e52:	b2 14       	cp	r11, r2
     e54:	60 f4       	brcc	.+24     	; 0xe6e <vfprintf+0x330>
     e56:	b6 01       	movw	r22, r12
     e58:	80 e2       	ldi	r24, 0x20	; 32
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     e60:	b3 94       	inc	r11
     e62:	f7 cf       	rjmp	.-18     	; 0xe52 <vfprintf+0x314>
     e64:	b2 14       	cp	r11, r2
     e66:	18 f4       	brcc	.+6      	; 0xe6e <vfprintf+0x330>
     e68:	2b 18       	sub	r2, r11
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <vfprintf+0x332>
     e6c:	98 2c       	mov	r9, r8
     e6e:	21 2c       	mov	r2, r1
     e70:	a4 fe       	sbrs	r10, 4
     e72:	10 c0       	rjmp	.+32     	; 0xe94 <vfprintf+0x356>
     e74:	b6 01       	movw	r22, r12
     e76:	80 e3       	ldi	r24, 0x30	; 48
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     e7e:	a2 fe       	sbrs	r10, 2
     e80:	17 c0       	rjmp	.+46     	; 0xeb0 <vfprintf+0x372>
     e82:	a1 fc       	sbrc	r10, 1
     e84:	03 c0       	rjmp	.+6      	; 0xe8c <vfprintf+0x34e>
     e86:	88 e7       	ldi	r24, 0x78	; 120
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	02 c0       	rjmp	.+4      	; 0xe90 <vfprintf+0x352>
     e8c:	88 e5       	ldi	r24, 0x58	; 88
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	b6 01       	movw	r22, r12
     e92:	0c c0       	rjmp	.+24     	; 0xeac <vfprintf+0x36e>
     e94:	8a 2d       	mov	r24, r10
     e96:	86 78       	andi	r24, 0x86	; 134
     e98:	59 f0       	breq	.+22     	; 0xeb0 <vfprintf+0x372>
     e9a:	a1 fe       	sbrs	r10, 1
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <vfprintf+0x364>
     e9e:	8b e2       	ldi	r24, 0x2B	; 43
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <vfprintf+0x366>
     ea2:	80 e2       	ldi	r24, 0x20	; 32
     ea4:	a7 fc       	sbrc	r10, 7
     ea6:	8d e2       	ldi	r24, 0x2D	; 45
     ea8:	b6 01       	movw	r22, r12
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     eb0:	89 14       	cp	r8, r9
     eb2:	38 f4       	brcc	.+14     	; 0xec2 <vfprintf+0x384>
     eb4:	b6 01       	movw	r22, r12
     eb6:	80 e3       	ldi	r24, 0x30	; 48
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     ebe:	9a 94       	dec	r9
     ec0:	f7 cf       	rjmp	.-18     	; 0xeb0 <vfprintf+0x372>
     ec2:	8a 94       	dec	r8
     ec4:	f3 01       	movw	r30, r6
     ec6:	e8 0d       	add	r30, r8
     ec8:	f1 1d       	adc	r31, r1
     eca:	80 81       	ld	r24, Z
     ecc:	b6 01       	movw	r22, r12
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     ed4:	81 10       	cpse	r8, r1
     ed6:	f5 cf       	rjmp	.-22     	; 0xec2 <vfprintf+0x384>
     ed8:	22 20       	and	r2, r2
     eda:	09 f4       	brne	.+2      	; 0xede <vfprintf+0x3a0>
     edc:	42 ce       	rjmp	.-892    	; 0xb62 <vfprintf+0x24>
     ede:	b6 01       	movw	r22, r12
     ee0:	80 e2       	ldi	r24, 0x20	; 32
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 95 0a 	call	0x152a	; 0x152a <fputc>
     ee8:	2a 94       	dec	r2
     eea:	f6 cf       	rjmp	.-20     	; 0xed8 <vfprintf+0x39a>
     eec:	f6 01       	movw	r30, r12
     eee:	86 81       	ldd	r24, Z+6	; 0x06
     ef0:	97 81       	ldd	r25, Z+7	; 0x07
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <vfprintf+0x3ba>
     ef4:	8f ef       	ldi	r24, 0xFF	; 255
     ef6:	9f ef       	ldi	r25, 0xFF	; 255
     ef8:	2b 96       	adiw	r28, 0x0b	; 11
     efa:	e2 e1       	ldi	r30, 0x12	; 18
     efc:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__epilogue_restores__>

00000f00 <putval>:
     f00:	20 fd       	sbrc	r18, 0
     f02:	09 c0       	rjmp	.+18     	; 0xf16 <putval+0x16>
     f04:	fc 01       	movw	r30, r24
     f06:	23 fd       	sbrc	r18, 3
     f08:	05 c0       	rjmp	.+10     	; 0xf14 <putval+0x14>
     f0a:	22 ff       	sbrs	r18, 2
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <putval+0x12>
     f0e:	73 83       	std	Z+3, r23	; 0x03
     f10:	62 83       	std	Z+2, r22	; 0x02
     f12:	51 83       	std	Z+1, r21	; 0x01
     f14:	40 83       	st	Z, r20
     f16:	08 95       	ret

00000f18 <mulacc>:
     f18:	44 fd       	sbrc	r20, 4
     f1a:	17 c0       	rjmp	.+46     	; 0xf4a <mulacc+0x32>
     f1c:	46 fd       	sbrc	r20, 6
     f1e:	17 c0       	rjmp	.+46     	; 0xf4e <mulacc+0x36>
     f20:	ab 01       	movw	r20, r22
     f22:	bc 01       	movw	r22, r24
     f24:	da 01       	movw	r26, r20
     f26:	fb 01       	movw	r30, r22
     f28:	aa 0f       	add	r26, r26
     f2a:	bb 1f       	adc	r27, r27
     f2c:	ee 1f       	adc	r30, r30
     f2e:	ff 1f       	adc	r31, r31
     f30:	10 94       	com	r1
     f32:	d1 f7       	brne	.-12     	; 0xf28 <mulacc+0x10>
     f34:	4a 0f       	add	r20, r26
     f36:	5b 1f       	adc	r21, r27
     f38:	6e 1f       	adc	r22, r30
     f3a:	7f 1f       	adc	r23, r31
     f3c:	cb 01       	movw	r24, r22
     f3e:	ba 01       	movw	r22, r20
     f40:	66 0f       	add	r22, r22
     f42:	77 1f       	adc	r23, r23
     f44:	88 1f       	adc	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	09 c0       	rjmp	.+18     	; 0xf5c <mulacc+0x44>
     f4a:	33 e0       	ldi	r19, 0x03	; 3
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <mulacc+0x38>
     f4e:	34 e0       	ldi	r19, 0x04	; 4
     f50:	66 0f       	add	r22, r22
     f52:	77 1f       	adc	r23, r23
     f54:	88 1f       	adc	r24, r24
     f56:	99 1f       	adc	r25, r25
     f58:	31 50       	subi	r19, 0x01	; 1
     f5a:	d1 f7       	brne	.-12     	; 0xf50 <mulacc+0x38>
     f5c:	62 0f       	add	r22, r18
     f5e:	71 1d       	adc	r23, r1
     f60:	81 1d       	adc	r24, r1
     f62:	91 1d       	adc	r25, r1
     f64:	08 95       	ret

00000f66 <skip_spaces>:
     f66:	0f 93       	push	r16
     f68:	1f 93       	push	r17
     f6a:	cf 93       	push	r28
     f6c:	df 93       	push	r29
     f6e:	8c 01       	movw	r16, r24
     f70:	c8 01       	movw	r24, r16
     f72:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
     f76:	ec 01       	movw	r28, r24
     f78:	97 fd       	sbrc	r25, 7
     f7a:	08 c0       	rjmp	.+16     	; 0xf8c <skip_spaces+0x26>
     f7c:	0e 94 2d 0a 	call	0x145a	; 0x145a <isspace>
     f80:	89 2b       	or	r24, r25
     f82:	b1 f7       	brne	.-20     	; 0xf70 <skip_spaces+0xa>
     f84:	b8 01       	movw	r22, r16
     f86:	ce 01       	movw	r24, r28
     f88:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <ungetc>
     f8c:	ce 01       	movw	r24, r28
     f8e:	df 91       	pop	r29
     f90:	cf 91       	pop	r28
     f92:	1f 91       	pop	r17
     f94:	0f 91       	pop	r16
     f96:	08 95       	ret

00000f98 <conv_int>:
     f98:	8f 92       	push	r8
     f9a:	9f 92       	push	r9
     f9c:	af 92       	push	r10
     f9e:	bf 92       	push	r11
     fa0:	ef 92       	push	r14
     fa2:	ff 92       	push	r15
     fa4:	0f 93       	push	r16
     fa6:	1f 93       	push	r17
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	8c 01       	movw	r16, r24
     fae:	d6 2f       	mov	r29, r22
     fb0:	7a 01       	movw	r14, r20
     fb2:	b2 2e       	mov	r11, r18
     fb4:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
     fb8:	9c 01       	movw	r18, r24
     fba:	33 27       	eor	r19, r19
     fbc:	2b 32       	cpi	r18, 0x2B	; 43
     fbe:	31 05       	cpc	r19, r1
     fc0:	31 f0       	breq	.+12     	; 0xfce <conv_int+0x36>
     fc2:	2d 32       	cpi	r18, 0x2D	; 45
     fc4:	31 05       	cpc	r19, r1
     fc6:	61 f4       	brne	.+24     	; 0xfe0 <conv_int+0x48>
     fc8:	8b 2d       	mov	r24, r11
     fca:	80 68       	ori	r24, 0x80	; 128
     fcc:	b8 2e       	mov	r11, r24
     fce:	d1 50       	subi	r29, 0x01	; 1
     fd0:	11 f4       	brne	.+4      	; 0xfd6 <conv_int+0x3e>
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	68 c0       	rjmp	.+208    	; 0x10a6 <conv_int+0x10e>
     fd6:	c8 01       	movw	r24, r16
     fd8:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
     fdc:	97 fd       	sbrc	r25, 7
     fde:	f9 cf       	rjmp	.-14     	; 0xfd2 <conv_int+0x3a>
     fe0:	cb 2d       	mov	r28, r11
     fe2:	cd 7f       	andi	r28, 0xFD	; 253
     fe4:	2b 2d       	mov	r18, r11
     fe6:	20 73       	andi	r18, 0x30	; 48
     fe8:	09 f5       	brne	.+66     	; 0x102c <conv_int+0x94>
     fea:	80 33       	cpi	r24, 0x30	; 48
     fec:	f9 f4       	brne	.+62     	; 0x102c <conv_int+0x94>
     fee:	aa 24       	eor	r10, r10
     ff0:	aa 94       	dec	r10
     ff2:	ad 0e       	add	r10, r29
     ff4:	09 f4       	brne	.+2      	; 0xff8 <conv_int+0x60>
     ff6:	43 c0       	rjmp	.+134    	; 0x107e <conv_int+0xe6>
     ff8:	c8 01       	movw	r24, r16
     ffa:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
     ffe:	97 fd       	sbrc	r25, 7
    1000:	3e c0       	rjmp	.+124    	; 0x107e <conv_int+0xe6>
    1002:	9c 01       	movw	r18, r24
    1004:	2f 7d       	andi	r18, 0xDF	; 223
    1006:	33 27       	eor	r19, r19
    1008:	28 35       	cpi	r18, 0x58	; 88
    100a:	31 05       	cpc	r19, r1
    100c:	49 f4       	brne	.+18     	; 0x1020 <conv_int+0x88>
    100e:	c2 64       	ori	r28, 0x42	; 66
    1010:	d2 50       	subi	r29, 0x02	; 2
    1012:	a9 f1       	breq	.+106    	; 0x107e <conv_int+0xe6>
    1014:	c8 01       	movw	r24, r16
    1016:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
    101a:	97 ff       	sbrs	r25, 7
    101c:	07 c0       	rjmp	.+14     	; 0x102c <conv_int+0x94>
    101e:	2f c0       	rjmp	.+94     	; 0x107e <conv_int+0xe6>
    1020:	b6 fe       	sbrs	r11, 6
    1022:	02 c0       	rjmp	.+4      	; 0x1028 <conv_int+0x90>
    1024:	c2 60       	ori	r28, 0x02	; 2
    1026:	01 c0       	rjmp	.+2      	; 0x102a <conv_int+0x92>
    1028:	c2 61       	ori	r28, 0x12	; 18
    102a:	da 2d       	mov	r29, r10
    102c:	81 2c       	mov	r8, r1
    102e:	91 2c       	mov	r9, r1
    1030:	54 01       	movw	r10, r8
    1032:	20 ed       	ldi	r18, 0xD0	; 208
    1034:	28 0f       	add	r18, r24
    1036:	28 30       	cpi	r18, 0x08	; 8
    1038:	80 f0       	brcs	.+32     	; 0x105a <conv_int+0xc2>
    103a:	c4 ff       	sbrs	r28, 4
    103c:	04 c0       	rjmp	.+8      	; 0x1046 <conv_int+0xae>
    103e:	b8 01       	movw	r22, r16
    1040:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <ungetc>
    1044:	19 c0       	rjmp	.+50     	; 0x1078 <conv_int+0xe0>
    1046:	2a 30       	cpi	r18, 0x0A	; 10
    1048:	40 f0       	brcs	.+16     	; 0x105a <conv_int+0xc2>
    104a:	c6 ff       	sbrs	r28, 6
    104c:	f8 cf       	rjmp	.-16     	; 0x103e <conv_int+0xa6>
    104e:	2f 7d       	andi	r18, 0xDF	; 223
    1050:	3f ee       	ldi	r19, 0xEF	; 239
    1052:	32 0f       	add	r19, r18
    1054:	36 30       	cpi	r19, 0x06	; 6
    1056:	98 f7       	brcc	.-26     	; 0x103e <conv_int+0xa6>
    1058:	27 50       	subi	r18, 0x07	; 7
    105a:	4c 2f       	mov	r20, r28
    105c:	c5 01       	movw	r24, r10
    105e:	b4 01       	movw	r22, r8
    1060:	0e 94 8c 07 	call	0xf18	; 0xf18 <mulacc>
    1064:	4b 01       	movw	r8, r22
    1066:	5c 01       	movw	r10, r24
    1068:	c2 60       	ori	r28, 0x02	; 2
    106a:	d1 50       	subi	r29, 0x01	; 1
    106c:	59 f0       	breq	.+22     	; 0x1084 <conv_int+0xec>
    106e:	c8 01       	movw	r24, r16
    1070:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
    1074:	97 ff       	sbrs	r25, 7
    1076:	dd cf       	rjmp	.-70     	; 0x1032 <conv_int+0x9a>
    1078:	c1 fd       	sbrc	r28, 1
    107a:	04 c0       	rjmp	.+8      	; 0x1084 <conv_int+0xec>
    107c:	aa cf       	rjmp	.-172    	; 0xfd2 <conv_int+0x3a>
    107e:	81 2c       	mov	r8, r1
    1080:	91 2c       	mov	r9, r1
    1082:	54 01       	movw	r10, r8
    1084:	c7 ff       	sbrs	r28, 7
    1086:	08 c0       	rjmp	.+16     	; 0x1098 <conv_int+0x100>
    1088:	b0 94       	com	r11
    108a:	a0 94       	com	r10
    108c:	90 94       	com	r9
    108e:	80 94       	com	r8
    1090:	81 1c       	adc	r8, r1
    1092:	91 1c       	adc	r9, r1
    1094:	a1 1c       	adc	r10, r1
    1096:	b1 1c       	adc	r11, r1
    1098:	2c 2f       	mov	r18, r28
    109a:	b5 01       	movw	r22, r10
    109c:	a4 01       	movw	r20, r8
    109e:	c7 01       	movw	r24, r14
    10a0:	0e 94 80 07 	call	0xf00	; 0xf00 <putval>
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	1f 91       	pop	r17
    10ac:	0f 91       	pop	r16
    10ae:	ff 90       	pop	r15
    10b0:	ef 90       	pop	r14
    10b2:	bf 90       	pop	r11
    10b4:	af 90       	pop	r10
    10b6:	9f 90       	pop	r9
    10b8:	8f 90       	pop	r8
    10ba:	08 95       	ret

000010bc <conv_brk>:
    10bc:	a0 e2       	ldi	r26, 0x20	; 32
    10be:	b0 e0       	ldi	r27, 0x00	; 0
    10c0:	e4 e6       	ldi	r30, 0x64	; 100
    10c2:	f8 e0       	ldi	r31, 0x08	; 8
    10c4:	0c 94 4e 0b 	jmp	0x169c	; 0x169c <__prologue_saves__+0x6>
    10c8:	5c 01       	movw	r10, r24
    10ca:	96 2e       	mov	r9, r22
    10cc:	7a 01       	movw	r14, r20
    10ce:	f9 01       	movw	r30, r18
    10d0:	8e 01       	movw	r16, r28
    10d2:	0f 5f       	subi	r16, 0xFF	; 255
    10d4:	1f 4f       	sbci	r17, 0xFF	; 255
    10d6:	68 01       	movw	r12, r16
    10d8:	80 e2       	ldi	r24, 0x20	; 32
    10da:	d8 01       	movw	r26, r16
    10dc:	1d 92       	st	X+, r1
    10de:	8a 95       	dec	r24
    10e0:	e9 f7       	brne	.-6      	; 0x10dc <conv_brk+0x20>
    10e2:	d5 01       	movw	r26, r10
    10e4:	13 96       	adiw	r26, 0x03	; 3
    10e6:	8c 90       	ld	r8, X
    10e8:	80 e0       	ldi	r24, 0x00	; 0
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	61 2c       	mov	r6, r1
    10ee:	71 2c       	mov	r7, r1
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	61 e0       	ldi	r22, 0x01	; 1
    10f4:	70 e0       	ldi	r23, 0x00	; 0
    10f6:	83 fc       	sbrc	r8, 3
    10f8:	25 91       	lpm	r18, Z+
    10fa:	83 fe       	sbrs	r8, 3
    10fc:	21 91       	ld	r18, Z+
    10fe:	8f 01       	movw	r16, r30
    1100:	52 2e       	mov	r5, r18
    1102:	21 11       	cpse	r18, r1
    1104:	03 c0       	rjmp	.+6      	; 0x110c <conv_brk+0x50>
    1106:	80 e0       	ldi	r24, 0x00	; 0
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	92 c0       	rjmp	.+292    	; 0x1230 <conv_brk+0x174>
    110c:	2e 35       	cpi	r18, 0x5E	; 94
    110e:	11 f4       	brne	.+4      	; 0x1114 <conv_brk+0x58>
    1110:	00 97       	sbiw	r24, 0x00	; 0
    1112:	51 f1       	breq	.+84     	; 0x1168 <conv_brk+0xac>
    1114:	43 2f       	mov	r20, r19
    1116:	50 e0       	ldi	r21, 0x00	; 0
    1118:	48 17       	cp	r20, r24
    111a:	59 07       	cpc	r21, r25
    111c:	3c f4       	brge	.+14     	; 0x112c <conv_brk+0x70>
    111e:	2d 35       	cpi	r18, 0x5D	; 93
    1120:	59 f1       	breq	.+86     	; 0x1178 <conv_brk+0xbc>
    1122:	2d 32       	cpi	r18, 0x2D	; 45
    1124:	19 f4       	brne	.+6      	; 0x112c <conv_brk+0x70>
    1126:	77 20       	and	r7, r7
    1128:	09 f1       	breq	.+66     	; 0x116c <conv_brk+0xb0>
    112a:	03 c0       	rjmp	.+6      	; 0x1132 <conv_brk+0x76>
    112c:	77 20       	and	r7, r7
    112e:	09 f4       	brne	.+2      	; 0x1132 <conv_brk+0x76>
    1130:	6a c0       	rjmp	.+212    	; 0x1206 <conv_brk+0x14a>
    1132:	45 2d       	mov	r20, r5
    1134:	46 95       	lsr	r20
    1136:	46 95       	lsr	r20
    1138:	46 95       	lsr	r20
    113a:	d6 01       	movw	r26, r12
    113c:	a4 0f       	add	r26, r20
    113e:	b1 1d       	adc	r27, r1
    1140:	45 2d       	mov	r20, r5
    1142:	47 70       	andi	r20, 0x07	; 7
    1144:	8b 01       	movw	r16, r22
    1146:	02 c0       	rjmp	.+4      	; 0x114c <conv_brk+0x90>
    1148:	00 0f       	add	r16, r16
    114a:	11 1f       	adc	r17, r17
    114c:	4a 95       	dec	r20
    114e:	e2 f7       	brpl	.-8      	; 0x1148 <conv_brk+0x8c>
    1150:	a8 01       	movw	r20, r16
    1152:	5c 91       	ld	r21, X
    1154:	45 2b       	or	r20, r21
    1156:	4c 93       	st	X, r20
    1158:	65 14       	cp	r6, r5
    115a:	59 f0       	breq	.+22     	; 0x1172 <conv_brk+0xb6>
    115c:	56 14       	cp	r5, r6
    115e:	10 f4       	brcc	.+4      	; 0x1164 <conv_brk+0xa8>
    1160:	53 94       	inc	r5
    1162:	e7 cf       	rjmp	.-50     	; 0x1132 <conv_brk+0x76>
    1164:	5a 94       	dec	r5
    1166:	e5 cf       	rjmp	.-54     	; 0x1132 <conv_brk+0x76>
    1168:	31 e0       	ldi	r19, 0x01	; 1
    116a:	04 c0       	rjmp	.+8      	; 0x1174 <conv_brk+0xb8>
    116c:	77 24       	eor	r7, r7
    116e:	73 94       	inc	r7
    1170:	01 c0       	rjmp	.+2      	; 0x1174 <conv_brk+0xb8>
    1172:	71 2c       	mov	r7, r1
    1174:	01 96       	adiw	r24, 0x01	; 1
    1176:	bf cf       	rjmp	.-130    	; 0x10f6 <conv_brk+0x3a>
    1178:	77 20       	and	r7, r7
    117a:	19 f0       	breq	.+6      	; 0x1182 <conv_brk+0xc6>
    117c:	8e 81       	ldd	r24, Y+6	; 0x06
    117e:	80 62       	ori	r24, 0x20	; 32
    1180:	8e 83       	std	Y+6, r24	; 0x06
    1182:	31 11       	cpse	r19, r1
    1184:	03 c0       	rjmp	.+6      	; 0x118c <conv_brk+0xd0>
    1186:	88 24       	eor	r8, r8
    1188:	83 94       	inc	r8
    118a:	17 c0       	rjmp	.+46     	; 0x11ba <conv_brk+0xfe>
    118c:	f6 01       	movw	r30, r12
    118e:	9e 01       	movw	r18, r28
    1190:	2f 5d       	subi	r18, 0xDF	; 223
    1192:	3f 4f       	sbci	r19, 0xFF	; 255
    1194:	80 81       	ld	r24, Z
    1196:	80 95       	com	r24
    1198:	81 93       	st	Z+, r24
    119a:	2e 17       	cp	r18, r30
    119c:	3f 07       	cpc	r19, r31
    119e:	d1 f7       	brne	.-12     	; 0x1194 <conv_brk+0xd8>
    11a0:	f2 cf       	rjmp	.-28     	; 0x1186 <conv_brk+0xca>
    11a2:	e1 14       	cp	r14, r1
    11a4:	f1 04       	cpc	r15, r1
    11a6:	29 f0       	breq	.+10     	; 0x11b2 <conv_brk+0xf6>
    11a8:	d7 01       	movw	r26, r14
    11aa:	8c 93       	st	X, r24
    11ac:	f7 01       	movw	r30, r14
    11ae:	31 96       	adiw	r30, 0x01	; 1
    11b0:	7f 01       	movw	r14, r30
    11b2:	9a 94       	dec	r9
    11b4:	81 2c       	mov	r8, r1
    11b6:	99 20       	and	r9, r9
    11b8:	f9 f0       	breq	.+62     	; 0x11f8 <conv_brk+0x13c>
    11ba:	c5 01       	movw	r24, r10
    11bc:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
    11c0:	97 fd       	sbrc	r25, 7
    11c2:	18 c0       	rjmp	.+48     	; 0x11f4 <conv_brk+0x138>
    11c4:	fc 01       	movw	r30, r24
    11c6:	ff 27       	eor	r31, r31
    11c8:	23 e0       	ldi	r18, 0x03	; 3
    11ca:	f5 95       	asr	r31
    11cc:	e7 95       	ror	r30
    11ce:	2a 95       	dec	r18
    11d0:	e1 f7       	brne	.-8      	; 0x11ca <conv_brk+0x10e>
    11d2:	ec 0d       	add	r30, r12
    11d4:	fd 1d       	adc	r31, r13
    11d6:	20 81       	ld	r18, Z
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	ac 01       	movw	r20, r24
    11dc:	47 70       	andi	r20, 0x07	; 7
    11de:	55 27       	eor	r21, r21
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <conv_brk+0x12a>
    11e2:	35 95       	asr	r19
    11e4:	27 95       	ror	r18
    11e6:	4a 95       	dec	r20
    11e8:	e2 f7       	brpl	.-8      	; 0x11e2 <conv_brk+0x126>
    11ea:	20 fd       	sbrc	r18, 0
    11ec:	da cf       	rjmp	.-76     	; 0x11a2 <conv_brk+0xe6>
    11ee:	b5 01       	movw	r22, r10
    11f0:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <ungetc>
    11f4:	81 10       	cpse	r8, r1
    11f6:	87 cf       	rjmp	.-242    	; 0x1106 <conv_brk+0x4a>
    11f8:	e1 14       	cp	r14, r1
    11fa:	f1 04       	cpc	r15, r1
    11fc:	11 f0       	breq	.+4      	; 0x1202 <conv_brk+0x146>
    11fe:	d7 01       	movw	r26, r14
    1200:	1c 92       	st	X, r1
    1202:	c8 01       	movw	r24, r16
    1204:	15 c0       	rjmp	.+42     	; 0x1230 <conv_brk+0x174>
    1206:	42 2f       	mov	r20, r18
    1208:	46 95       	lsr	r20
    120a:	46 95       	lsr	r20
    120c:	46 95       	lsr	r20
    120e:	d6 01       	movw	r26, r12
    1210:	a4 0f       	add	r26, r20
    1212:	b1 1d       	adc	r27, r1
    1214:	42 2f       	mov	r20, r18
    1216:	47 70       	andi	r20, 0x07	; 7
    1218:	8b 01       	movw	r16, r22
    121a:	02 c0       	rjmp	.+4      	; 0x1220 <conv_brk+0x164>
    121c:	00 0f       	add	r16, r16
    121e:	11 1f       	adc	r17, r17
    1220:	4a 95       	dec	r20
    1222:	e2 f7       	brpl	.-8      	; 0x121c <conv_brk+0x160>
    1224:	a8 01       	movw	r20, r16
    1226:	5c 91       	ld	r21, X
    1228:	45 2b       	or	r20, r21
    122a:	4c 93       	st	X, r20
    122c:	62 2e       	mov	r6, r18
    122e:	a2 cf       	rjmp	.-188    	; 0x1174 <conv_brk+0xb8>
    1230:	a0 96       	adiw	r28, 0x20	; 32
    1232:	ef e0       	ldi	r30, 0x0F	; 15
    1234:	0c 94 6a 0b 	jmp	0x16d4	; 0x16d4 <__epilogue_restores__+0x6>

00001238 <vfscanf>:
    1238:	a0 e0       	ldi	r26, 0x00	; 0
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e2 e2       	ldi	r30, 0x22	; 34
    123e:	f9 e0       	ldi	r31, 0x09	; 9
    1240:	0c 94 4e 0b 	jmp	0x169c	; 0x169c <__prologue_saves__+0x6>
    1244:	6c 01       	movw	r12, r24
    1246:	eb 01       	movw	r28, r22
    1248:	5a 01       	movw	r10, r20
    124a:	fc 01       	movw	r30, r24
    124c:	17 82       	std	Z+7, r1	; 0x07
    124e:	16 82       	std	Z+6, r1	; 0x06
    1250:	51 2c       	mov	r5, r1
    1252:	f6 01       	movw	r30, r12
    1254:	e3 80       	ldd	r14, Z+3	; 0x03
    1256:	fe 01       	movw	r30, r28
    1258:	e3 fc       	sbrc	r14, 3
    125a:	85 91       	lpm	r24, Z+
    125c:	e3 fe       	sbrs	r14, 3
    125e:	81 91       	ld	r24, Z+
    1260:	18 2f       	mov	r17, r24
    1262:	ef 01       	movw	r28, r30
    1264:	88 23       	and	r24, r24
    1266:	09 f4       	brne	.+2      	; 0x126a <vfscanf+0x32>
    1268:	ee c0       	rjmp	.+476    	; 0x1446 <vfscanf+0x20e>
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	0e 94 2d 0a 	call	0x145a	; 0x145a <isspace>
    1270:	89 2b       	or	r24, r25
    1272:	21 f0       	breq	.+8      	; 0x127c <vfscanf+0x44>
    1274:	c6 01       	movw	r24, r12
    1276:	0e 94 b3 07 	call	0xf66	; 0xf66 <skip_spaces>
    127a:	eb cf       	rjmp	.-42     	; 0x1252 <vfscanf+0x1a>
    127c:	15 32       	cpi	r17, 0x25	; 37
    127e:	41 f4       	brne	.+16     	; 0x1290 <vfscanf+0x58>
    1280:	fe 01       	movw	r30, r28
    1282:	e3 fc       	sbrc	r14, 3
    1284:	15 91       	lpm	r17, Z+
    1286:	e3 fe       	sbrs	r14, 3
    1288:	11 91       	ld	r17, Z+
    128a:	ef 01       	movw	r28, r30
    128c:	15 32       	cpi	r17, 0x25	; 37
    128e:	81 f4       	brne	.+32     	; 0x12b0 <vfscanf+0x78>
    1290:	c6 01       	movw	r24, r12
    1292:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
    1296:	97 fd       	sbrc	r25, 7
    1298:	d4 c0       	rjmp	.+424    	; 0x1442 <vfscanf+0x20a>
    129a:	41 2f       	mov	r20, r17
    129c:	50 e0       	ldi	r21, 0x00	; 0
    129e:	9c 01       	movw	r18, r24
    12a0:	33 27       	eor	r19, r19
    12a2:	24 17       	cp	r18, r20
    12a4:	35 07       	cpc	r19, r21
    12a6:	a9 f2       	breq	.-86     	; 0x1252 <vfscanf+0x1a>
    12a8:	b6 01       	movw	r22, r12
    12aa:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <ungetc>
    12ae:	cb c0       	rjmp	.+406    	; 0x1446 <vfscanf+0x20e>
    12b0:	1a 32       	cpi	r17, 0x2A	; 42
    12b2:	39 f4       	brne	.+14     	; 0x12c2 <vfscanf+0x8a>
    12b4:	e3 fc       	sbrc	r14, 3
    12b6:	15 91       	lpm	r17, Z+
    12b8:	e3 fe       	sbrs	r14, 3
    12ba:	11 91       	ld	r17, Z+
    12bc:	ef 01       	movw	r28, r30
    12be:	01 e0       	ldi	r16, 0x01	; 1
    12c0:	01 c0       	rjmp	.+2      	; 0x12c4 <vfscanf+0x8c>
    12c2:	00 e0       	ldi	r16, 0x00	; 0
    12c4:	f1 2c       	mov	r15, r1
    12c6:	20 ed       	ldi	r18, 0xD0	; 208
    12c8:	21 0f       	add	r18, r17
    12ca:	2a 30       	cpi	r18, 0x0A	; 10
    12cc:	80 f4       	brcc	.+32     	; 0x12ee <vfscanf+0xb6>
    12ce:	02 60       	ori	r16, 0x02	; 2
    12d0:	6f 2d       	mov	r22, r15
    12d2:	70 e0       	ldi	r23, 0x00	; 0
    12d4:	80 e0       	ldi	r24, 0x00	; 0
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	40 e2       	ldi	r20, 0x20	; 32
    12da:	0e 94 8c 07 	call	0xf18	; 0xf18 <mulacc>
    12de:	f6 2e       	mov	r15, r22
    12e0:	fe 01       	movw	r30, r28
    12e2:	e3 fc       	sbrc	r14, 3
    12e4:	15 91       	lpm	r17, Z+
    12e6:	e3 fe       	sbrs	r14, 3
    12e8:	11 91       	ld	r17, Z+
    12ea:	ef 01       	movw	r28, r30
    12ec:	ec cf       	rjmp	.-40     	; 0x12c6 <vfscanf+0x8e>
    12ee:	01 ff       	sbrs	r16, 1
    12f0:	03 c0       	rjmp	.+6      	; 0x12f8 <vfscanf+0xc0>
    12f2:	f1 10       	cpse	r15, r1
    12f4:	03 c0       	rjmp	.+6      	; 0x12fc <vfscanf+0xc4>
    12f6:	a7 c0       	rjmp	.+334    	; 0x1446 <vfscanf+0x20e>
    12f8:	ff 24       	eor	r15, r15
    12fa:	fa 94       	dec	r15
    12fc:	18 36       	cpi	r17, 0x68	; 104
    12fe:	19 f0       	breq	.+6      	; 0x1306 <vfscanf+0xce>
    1300:	1c 36       	cpi	r17, 0x6C	; 108
    1302:	51 f0       	breq	.+20     	; 0x1318 <vfscanf+0xe0>
    1304:	10 c0       	rjmp	.+32     	; 0x1326 <vfscanf+0xee>
    1306:	fe 01       	movw	r30, r28
    1308:	e3 fc       	sbrc	r14, 3
    130a:	15 91       	lpm	r17, Z+
    130c:	e3 fe       	sbrs	r14, 3
    130e:	11 91       	ld	r17, Z+
    1310:	ef 01       	movw	r28, r30
    1312:	18 36       	cpi	r17, 0x68	; 104
    1314:	41 f4       	brne	.+16     	; 0x1326 <vfscanf+0xee>
    1316:	08 60       	ori	r16, 0x08	; 8
    1318:	04 60       	ori	r16, 0x04	; 4
    131a:	fe 01       	movw	r30, r28
    131c:	e3 fc       	sbrc	r14, 3
    131e:	15 91       	lpm	r17, Z+
    1320:	e3 fe       	sbrs	r14, 3
    1322:	11 91       	ld	r17, Z+
    1324:	ef 01       	movw	r28, r30
    1326:	11 23       	and	r17, r17
    1328:	09 f4       	brne	.+2      	; 0x132c <vfscanf+0xf4>
    132a:	8d c0       	rjmp	.+282    	; 0x1446 <vfscanf+0x20e>
    132c:	61 2f       	mov	r22, r17
    132e:	70 e0       	ldi	r23, 0x00	; 0
    1330:	88 e6       	ldi	r24, 0x68	; 104
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	0e 94 36 0a 	call	0x146c	; 0x146c <strchr_P>
    1338:	89 2b       	or	r24, r25
    133a:	09 f4       	brne	.+2      	; 0x133e <vfscanf+0x106>
    133c:	84 c0       	rjmp	.+264    	; 0x1446 <vfscanf+0x20e>
    133e:	00 fd       	sbrc	r16, 0
    1340:	07 c0       	rjmp	.+14     	; 0x1350 <vfscanf+0x118>
    1342:	f5 01       	movw	r30, r10
    1344:	80 80       	ld	r8, Z
    1346:	91 80       	ldd	r9, Z+1	; 0x01
    1348:	c5 01       	movw	r24, r10
    134a:	02 96       	adiw	r24, 0x02	; 2
    134c:	5c 01       	movw	r10, r24
    134e:	02 c0       	rjmp	.+4      	; 0x1354 <vfscanf+0x11c>
    1350:	81 2c       	mov	r8, r1
    1352:	91 2c       	mov	r9, r1
    1354:	1e 36       	cpi	r17, 0x6E	; 110
    1356:	51 f4       	brne	.+20     	; 0x136c <vfscanf+0x134>
    1358:	f6 01       	movw	r30, r12
    135a:	46 81       	ldd	r20, Z+6	; 0x06
    135c:	57 81       	ldd	r21, Z+7	; 0x07
    135e:	60 e0       	ldi	r22, 0x00	; 0
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	20 2f       	mov	r18, r16
    1364:	c4 01       	movw	r24, r8
    1366:	0e 94 80 07 	call	0xf00	; 0xf00 <putval>
    136a:	73 cf       	rjmp	.-282    	; 0x1252 <vfscanf+0x1a>
    136c:	13 36       	cpi	r17, 0x63	; 99
    136e:	a9 f4       	brne	.+42     	; 0x139a <vfscanf+0x162>
    1370:	01 fd       	sbrc	r16, 1
    1372:	02 c0       	rjmp	.+4      	; 0x1378 <vfscanf+0x140>
    1374:	ff 24       	eor	r15, r15
    1376:	f3 94       	inc	r15
    1378:	c6 01       	movw	r24, r12
    137a:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
    137e:	97 fd       	sbrc	r25, 7
    1380:	60 c0       	rjmp	.+192    	; 0x1442 <vfscanf+0x20a>
    1382:	81 14       	cp	r8, r1
    1384:	91 04       	cpc	r9, r1
    1386:	29 f0       	breq	.+10     	; 0x1392 <vfscanf+0x15a>
    1388:	f4 01       	movw	r30, r8
    138a:	80 83       	st	Z, r24
    138c:	c4 01       	movw	r24, r8
    138e:	01 96       	adiw	r24, 0x01	; 1
    1390:	4c 01       	movw	r8, r24
    1392:	fa 94       	dec	r15
    1394:	f1 10       	cpse	r15, r1
    1396:	f0 cf       	rjmp	.-32     	; 0x1378 <vfscanf+0x140>
    1398:	50 c0       	rjmp	.+160    	; 0x143a <vfscanf+0x202>
    139a:	1b 35       	cpi	r17, 0x5B	; 91
    139c:	59 f4       	brne	.+22     	; 0x13b4 <vfscanf+0x17c>
    139e:	9e 01       	movw	r18, r28
    13a0:	a4 01       	movw	r20, r8
    13a2:	6f 2d       	mov	r22, r15
    13a4:	c6 01       	movw	r24, r12
    13a6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <conv_brk>
    13aa:	ec 01       	movw	r28, r24
    13ac:	89 2b       	or	r24, r25
    13ae:	09 f0       	breq	.+2      	; 0x13b2 <vfscanf+0x17a>
    13b0:	44 c0       	rjmp	.+136    	; 0x143a <vfscanf+0x202>
    13b2:	3e c0       	rjmp	.+124    	; 0x1430 <vfscanf+0x1f8>
    13b4:	c6 01       	movw	r24, r12
    13b6:	0e 94 b3 07 	call	0xf66	; 0xf66 <skip_spaces>
    13ba:	97 fd       	sbrc	r25, 7
    13bc:	42 c0       	rjmp	.+132    	; 0x1442 <vfscanf+0x20a>
    13be:	1f 36       	cpi	r17, 0x6F	; 111
    13c0:	61 f1       	breq	.+88     	; 0x141a <vfscanf+0x1e2>
    13c2:	28 f4       	brcc	.+10     	; 0x13ce <vfscanf+0x196>
    13c4:	14 36       	cpi	r17, 0x64	; 100
    13c6:	39 f1       	breq	.+78     	; 0x1416 <vfscanf+0x1de>
    13c8:	19 36       	cpi	r17, 0x69	; 105
    13ca:	51 f1       	breq	.+84     	; 0x1420 <vfscanf+0x1e8>
    13cc:	28 c0       	rjmp	.+80     	; 0x141e <vfscanf+0x1e6>
    13ce:	13 37       	cpi	r17, 0x73	; 115
    13d0:	71 f0       	breq	.+28     	; 0x13ee <vfscanf+0x1b6>
    13d2:	15 37       	cpi	r17, 0x75	; 117
    13d4:	01 f1       	breq	.+64     	; 0x1416 <vfscanf+0x1de>
    13d6:	23 c0       	rjmp	.+70     	; 0x141e <vfscanf+0x1e6>
    13d8:	81 14       	cp	r8, r1
    13da:	91 04       	cpc	r9, r1
    13dc:	29 f0       	breq	.+10     	; 0x13e8 <vfscanf+0x1b0>
    13de:	f4 01       	movw	r30, r8
    13e0:	60 82       	st	Z, r6
    13e2:	c4 01       	movw	r24, r8
    13e4:	01 96       	adiw	r24, 0x01	; 1
    13e6:	4c 01       	movw	r8, r24
    13e8:	fa 94       	dec	r15
    13ea:	ff 20       	and	r15, r15
    13ec:	71 f0       	breq	.+28     	; 0x140a <vfscanf+0x1d2>
    13ee:	c6 01       	movw	r24, r12
    13f0:	0e 94 57 0a 	call	0x14ae	; 0x14ae <fgetc>
    13f4:	3c 01       	movw	r6, r24
    13f6:	97 fd       	sbrc	r25, 7
    13f8:	08 c0       	rjmp	.+16     	; 0x140a <vfscanf+0x1d2>
    13fa:	0e 94 2d 0a 	call	0x145a	; 0x145a <isspace>
    13fe:	89 2b       	or	r24, r25
    1400:	59 f3       	breq	.-42     	; 0x13d8 <vfscanf+0x1a0>
    1402:	b6 01       	movw	r22, r12
    1404:	c3 01       	movw	r24, r6
    1406:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <ungetc>
    140a:	81 14       	cp	r8, r1
    140c:	91 04       	cpc	r9, r1
    140e:	a9 f0       	breq	.+42     	; 0x143a <vfscanf+0x202>
    1410:	f4 01       	movw	r30, r8
    1412:	10 82       	st	Z, r1
    1414:	12 c0       	rjmp	.+36     	; 0x143a <vfscanf+0x202>
    1416:	00 62       	ori	r16, 0x20	; 32
    1418:	03 c0       	rjmp	.+6      	; 0x1420 <vfscanf+0x1e8>
    141a:	00 61       	ori	r16, 0x10	; 16
    141c:	01 c0       	rjmp	.+2      	; 0x1420 <vfscanf+0x1e8>
    141e:	00 64       	ori	r16, 0x40	; 64
    1420:	20 2f       	mov	r18, r16
    1422:	a4 01       	movw	r20, r8
    1424:	6f 2d       	mov	r22, r15
    1426:	c6 01       	movw	r24, r12
    1428:	0e 94 cc 07 	call	0xf98	; 0xf98 <conv_int>
    142c:	81 11       	cpse	r24, r1
    142e:	05 c0       	rjmp	.+10     	; 0x143a <vfscanf+0x202>
    1430:	f6 01       	movw	r30, r12
    1432:	83 81       	ldd	r24, Z+3	; 0x03
    1434:	80 73       	andi	r24, 0x30	; 48
    1436:	29 f4       	brne	.+10     	; 0x1442 <vfscanf+0x20a>
    1438:	06 c0       	rjmp	.+12     	; 0x1446 <vfscanf+0x20e>
    143a:	00 fd       	sbrc	r16, 0
    143c:	0a cf       	rjmp	.-492    	; 0x1252 <vfscanf+0x1a>
    143e:	53 94       	inc	r5
    1440:	08 cf       	rjmp	.-496    	; 0x1252 <vfscanf+0x1a>
    1442:	55 20       	and	r5, r5
    1444:	19 f0       	breq	.+6      	; 0x144c <vfscanf+0x214>
    1446:	85 2d       	mov	r24, r5
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <vfscanf+0x218>
    144c:	8f ef       	ldi	r24, 0xFF	; 255
    144e:	9f ef       	ldi	r25, 0xFF	; 255
    1450:	cd b7       	in	r28, 0x3d	; 61
    1452:	de b7       	in	r29, 0x3e	; 62
    1454:	ef e0       	ldi	r30, 0x0F	; 15
    1456:	0c 94 6a 0b 	jmp	0x16d4	; 0x16d4 <__epilogue_restores__+0x6>

0000145a <isspace>:
    145a:	91 11       	cpse	r25, r1
    145c:	0c 94 48 0b 	jmp	0x1690	; 0x1690 <__ctype_isfalse>
    1460:	80 32       	cpi	r24, 0x20	; 32
    1462:	19 f0       	breq	.+6      	; 0x146a <isspace+0x10>
    1464:	89 50       	subi	r24, 0x09	; 9
    1466:	85 50       	subi	r24, 0x05	; 5
    1468:	c8 f7       	brcc	.-14     	; 0x145c <isspace+0x2>
    146a:	08 95       	ret

0000146c <strchr_P>:
    146c:	fc 01       	movw	r30, r24
    146e:	05 90       	lpm	r0, Z+
    1470:	06 16       	cp	r0, r22
    1472:	21 f0       	breq	.+8      	; 0x147c <strchr_P+0x10>
    1474:	00 20       	and	r0, r0
    1476:	d9 f7       	brne	.-10     	; 0x146e <strchr_P+0x2>
    1478:	c0 01       	movw	r24, r0
    147a:	08 95       	ret
    147c:	31 97       	sbiw	r30, 0x01	; 1
    147e:	cf 01       	movw	r24, r30
    1480:	08 95       	ret

00001482 <strnlen_P>:
    1482:	fc 01       	movw	r30, r24
    1484:	05 90       	lpm	r0, Z+
    1486:	61 50       	subi	r22, 0x01	; 1
    1488:	70 40       	sbci	r23, 0x00	; 0
    148a:	01 10       	cpse	r0, r1
    148c:	d8 f7       	brcc	.-10     	; 0x1484 <strnlen_P+0x2>
    148e:	80 95       	com	r24
    1490:	90 95       	com	r25
    1492:	8e 0f       	add	r24, r30
    1494:	9f 1f       	adc	r25, r31
    1496:	08 95       	ret

00001498 <strnlen>:
    1498:	fc 01       	movw	r30, r24
    149a:	61 50       	subi	r22, 0x01	; 1
    149c:	70 40       	sbci	r23, 0x00	; 0
    149e:	01 90       	ld	r0, Z+
    14a0:	01 10       	cpse	r0, r1
    14a2:	d8 f7       	brcc	.-10     	; 0x149a <strnlen+0x2>
    14a4:	80 95       	com	r24
    14a6:	90 95       	com	r25
    14a8:	8e 0f       	add	r24, r30
    14aa:	9f 1f       	adc	r25, r31
    14ac:	08 95       	ret

000014ae <fgetc>:
    14ae:	cf 93       	push	r28
    14b0:	df 93       	push	r29
    14b2:	ec 01       	movw	r28, r24
    14b4:	2b 81       	ldd	r18, Y+3	; 0x03
    14b6:	20 ff       	sbrs	r18, 0
    14b8:	33 c0       	rjmp	.+102    	; 0x1520 <fgetc+0x72>
    14ba:	26 ff       	sbrs	r18, 6
    14bc:	0a c0       	rjmp	.+20     	; 0x14d2 <fgetc+0x24>
    14be:	2f 7b       	andi	r18, 0xBF	; 191
    14c0:	2b 83       	std	Y+3, r18	; 0x03
    14c2:	8e 81       	ldd	r24, Y+6	; 0x06
    14c4:	9f 81       	ldd	r25, Y+7	; 0x07
    14c6:	01 96       	adiw	r24, 0x01	; 1
    14c8:	9f 83       	std	Y+7, r25	; 0x07
    14ca:	8e 83       	std	Y+6, r24	; 0x06
    14cc:	8a 81       	ldd	r24, Y+2	; 0x02
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	29 c0       	rjmp	.+82     	; 0x1524 <fgetc+0x76>
    14d2:	22 ff       	sbrs	r18, 2
    14d4:	0f c0       	rjmp	.+30     	; 0x14f4 <fgetc+0x46>
    14d6:	e8 81       	ld	r30, Y
    14d8:	f9 81       	ldd	r31, Y+1	; 0x01
    14da:	80 81       	ld	r24, Z
    14dc:	08 2e       	mov	r0, r24
    14de:	00 0c       	add	r0, r0
    14e0:	99 0b       	sbc	r25, r25
    14e2:	00 97       	sbiw	r24, 0x00	; 0
    14e4:	19 f4       	brne	.+6      	; 0x14ec <fgetc+0x3e>
    14e6:	20 62       	ori	r18, 0x20	; 32
    14e8:	2b 83       	std	Y+3, r18	; 0x03
    14ea:	1a c0       	rjmp	.+52     	; 0x1520 <fgetc+0x72>
    14ec:	31 96       	adiw	r30, 0x01	; 1
    14ee:	f9 83       	std	Y+1, r31	; 0x01
    14f0:	e8 83       	st	Y, r30
    14f2:	0e c0       	rjmp	.+28     	; 0x1510 <fgetc+0x62>
    14f4:	ea 85       	ldd	r30, Y+10	; 0x0a
    14f6:	fb 85       	ldd	r31, Y+11	; 0x0b
    14f8:	09 95       	icall
    14fa:	97 ff       	sbrs	r25, 7
    14fc:	09 c0       	rjmp	.+18     	; 0x1510 <fgetc+0x62>
    14fe:	2b 81       	ldd	r18, Y+3	; 0x03
    1500:	01 96       	adiw	r24, 0x01	; 1
    1502:	11 f0       	breq	.+4      	; 0x1508 <fgetc+0x5a>
    1504:	80 e2       	ldi	r24, 0x20	; 32
    1506:	01 c0       	rjmp	.+2      	; 0x150a <fgetc+0x5c>
    1508:	80 e1       	ldi	r24, 0x10	; 16
    150a:	82 2b       	or	r24, r18
    150c:	8b 83       	std	Y+3, r24	; 0x03
    150e:	08 c0       	rjmp	.+16     	; 0x1520 <fgetc+0x72>
    1510:	2e 81       	ldd	r18, Y+6	; 0x06
    1512:	3f 81       	ldd	r19, Y+7	; 0x07
    1514:	2f 5f       	subi	r18, 0xFF	; 255
    1516:	3f 4f       	sbci	r19, 0xFF	; 255
    1518:	3f 83       	std	Y+7, r19	; 0x07
    151a:	2e 83       	std	Y+6, r18	; 0x06
    151c:	99 27       	eor	r25, r25
    151e:	02 c0       	rjmp	.+4      	; 0x1524 <fgetc+0x76>
    1520:	8f ef       	ldi	r24, 0xFF	; 255
    1522:	9f ef       	ldi	r25, 0xFF	; 255
    1524:	df 91       	pop	r29
    1526:	cf 91       	pop	r28
    1528:	08 95       	ret

0000152a <fputc>:
    152a:	0f 93       	push	r16
    152c:	1f 93       	push	r17
    152e:	cf 93       	push	r28
    1530:	df 93       	push	r29
    1532:	fb 01       	movw	r30, r22
    1534:	23 81       	ldd	r18, Z+3	; 0x03
    1536:	21 fd       	sbrc	r18, 1
    1538:	03 c0       	rjmp	.+6      	; 0x1540 <fputc+0x16>
    153a:	8f ef       	ldi	r24, 0xFF	; 255
    153c:	9f ef       	ldi	r25, 0xFF	; 255
    153e:	2c c0       	rjmp	.+88     	; 0x1598 <fputc+0x6e>
    1540:	22 ff       	sbrs	r18, 2
    1542:	16 c0       	rjmp	.+44     	; 0x1570 <fputc+0x46>
    1544:	46 81       	ldd	r20, Z+6	; 0x06
    1546:	57 81       	ldd	r21, Z+7	; 0x07
    1548:	24 81       	ldd	r18, Z+4	; 0x04
    154a:	35 81       	ldd	r19, Z+5	; 0x05
    154c:	42 17       	cp	r20, r18
    154e:	53 07       	cpc	r21, r19
    1550:	44 f4       	brge	.+16     	; 0x1562 <fputc+0x38>
    1552:	a0 81       	ld	r26, Z
    1554:	b1 81       	ldd	r27, Z+1	; 0x01
    1556:	9d 01       	movw	r18, r26
    1558:	2f 5f       	subi	r18, 0xFF	; 255
    155a:	3f 4f       	sbci	r19, 0xFF	; 255
    155c:	31 83       	std	Z+1, r19	; 0x01
    155e:	20 83       	st	Z, r18
    1560:	8c 93       	st	X, r24
    1562:	26 81       	ldd	r18, Z+6	; 0x06
    1564:	37 81       	ldd	r19, Z+7	; 0x07
    1566:	2f 5f       	subi	r18, 0xFF	; 255
    1568:	3f 4f       	sbci	r19, 0xFF	; 255
    156a:	37 83       	std	Z+7, r19	; 0x07
    156c:	26 83       	std	Z+6, r18	; 0x06
    156e:	14 c0       	rjmp	.+40     	; 0x1598 <fputc+0x6e>
    1570:	8b 01       	movw	r16, r22
    1572:	ec 01       	movw	r28, r24
    1574:	fb 01       	movw	r30, r22
    1576:	00 84       	ldd	r0, Z+8	; 0x08
    1578:	f1 85       	ldd	r31, Z+9	; 0x09
    157a:	e0 2d       	mov	r30, r0
    157c:	09 95       	icall
    157e:	89 2b       	or	r24, r25
    1580:	e1 f6       	brne	.-72     	; 0x153a <fputc+0x10>
    1582:	d8 01       	movw	r26, r16
    1584:	16 96       	adiw	r26, 0x06	; 6
    1586:	8d 91       	ld	r24, X+
    1588:	9c 91       	ld	r25, X
    158a:	17 97       	sbiw	r26, 0x07	; 7
    158c:	01 96       	adiw	r24, 0x01	; 1
    158e:	17 96       	adiw	r26, 0x07	; 7
    1590:	9c 93       	st	X, r25
    1592:	8e 93       	st	-X, r24
    1594:	16 97       	sbiw	r26, 0x06	; 6
    1596:	ce 01       	movw	r24, r28
    1598:	df 91       	pop	r29
    159a:	cf 91       	pop	r28
    159c:	1f 91       	pop	r17
    159e:	0f 91       	pop	r16
    15a0:	08 95       	ret

000015a2 <ungetc>:
    15a2:	fb 01       	movw	r30, r22
    15a4:	23 81       	ldd	r18, Z+3	; 0x03
    15a6:	20 ff       	sbrs	r18, 0
    15a8:	12 c0       	rjmp	.+36     	; 0x15ce <ungetc+0x2c>
    15aa:	26 fd       	sbrc	r18, 6
    15ac:	10 c0       	rjmp	.+32     	; 0x15ce <ungetc+0x2c>
    15ae:	8f 3f       	cpi	r24, 0xFF	; 255
    15b0:	3f ef       	ldi	r19, 0xFF	; 255
    15b2:	93 07       	cpc	r25, r19
    15b4:	61 f0       	breq	.+24     	; 0x15ce <ungetc+0x2c>
    15b6:	82 83       	std	Z+2, r24	; 0x02
    15b8:	2f 7d       	andi	r18, 0xDF	; 223
    15ba:	20 64       	ori	r18, 0x40	; 64
    15bc:	23 83       	std	Z+3, r18	; 0x03
    15be:	26 81       	ldd	r18, Z+6	; 0x06
    15c0:	37 81       	ldd	r19, Z+7	; 0x07
    15c2:	21 50       	subi	r18, 0x01	; 1
    15c4:	31 09       	sbc	r19, r1
    15c6:	37 83       	std	Z+7, r19	; 0x07
    15c8:	26 83       	std	Z+6, r18	; 0x06
    15ca:	99 27       	eor	r25, r25
    15cc:	08 95       	ret
    15ce:	8f ef       	ldi	r24, 0xFF	; 255
    15d0:	9f ef       	ldi	r25, 0xFF	; 255
    15d2:	08 95       	ret

000015d4 <__ultoa_invert>:
    15d4:	fa 01       	movw	r30, r20
    15d6:	aa 27       	eor	r26, r26
    15d8:	28 30       	cpi	r18, 0x08	; 8
    15da:	51 f1       	breq	.+84     	; 0x1630 <__ultoa_invert+0x5c>
    15dc:	20 31       	cpi	r18, 0x10	; 16
    15de:	81 f1       	breq	.+96     	; 0x1640 <__ultoa_invert+0x6c>
    15e0:	e8 94       	clt
    15e2:	6f 93       	push	r22
    15e4:	6e 7f       	andi	r22, 0xFE	; 254
    15e6:	6e 5f       	subi	r22, 0xFE	; 254
    15e8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ea:	8f 4f       	sbci	r24, 0xFF	; 255
    15ec:	9f 4f       	sbci	r25, 0xFF	; 255
    15ee:	af 4f       	sbci	r26, 0xFF	; 255
    15f0:	b1 e0       	ldi	r27, 0x01	; 1
    15f2:	3e d0       	rcall	.+124    	; 0x1670 <__ultoa_invert+0x9c>
    15f4:	b4 e0       	ldi	r27, 0x04	; 4
    15f6:	3c d0       	rcall	.+120    	; 0x1670 <__ultoa_invert+0x9c>
    15f8:	67 0f       	add	r22, r23
    15fa:	78 1f       	adc	r23, r24
    15fc:	89 1f       	adc	r24, r25
    15fe:	9a 1f       	adc	r25, r26
    1600:	a1 1d       	adc	r26, r1
    1602:	68 0f       	add	r22, r24
    1604:	79 1f       	adc	r23, r25
    1606:	8a 1f       	adc	r24, r26
    1608:	91 1d       	adc	r25, r1
    160a:	a1 1d       	adc	r26, r1
    160c:	6a 0f       	add	r22, r26
    160e:	71 1d       	adc	r23, r1
    1610:	81 1d       	adc	r24, r1
    1612:	91 1d       	adc	r25, r1
    1614:	a1 1d       	adc	r26, r1
    1616:	20 d0       	rcall	.+64     	; 0x1658 <__ultoa_invert+0x84>
    1618:	09 f4       	brne	.+2      	; 0x161c <__ultoa_invert+0x48>
    161a:	68 94       	set
    161c:	3f 91       	pop	r19
    161e:	2a e0       	ldi	r18, 0x0A	; 10
    1620:	26 9f       	mul	r18, r22
    1622:	11 24       	eor	r1, r1
    1624:	30 19       	sub	r19, r0
    1626:	30 5d       	subi	r19, 0xD0	; 208
    1628:	31 93       	st	Z+, r19
    162a:	de f6       	brtc	.-74     	; 0x15e2 <__ultoa_invert+0xe>
    162c:	cf 01       	movw	r24, r30
    162e:	08 95       	ret
    1630:	46 2f       	mov	r20, r22
    1632:	47 70       	andi	r20, 0x07	; 7
    1634:	40 5d       	subi	r20, 0xD0	; 208
    1636:	41 93       	st	Z+, r20
    1638:	b3 e0       	ldi	r27, 0x03	; 3
    163a:	0f d0       	rcall	.+30     	; 0x165a <__ultoa_invert+0x86>
    163c:	c9 f7       	brne	.-14     	; 0x1630 <__ultoa_invert+0x5c>
    163e:	f6 cf       	rjmp	.-20     	; 0x162c <__ultoa_invert+0x58>
    1640:	46 2f       	mov	r20, r22
    1642:	4f 70       	andi	r20, 0x0F	; 15
    1644:	40 5d       	subi	r20, 0xD0	; 208
    1646:	4a 33       	cpi	r20, 0x3A	; 58
    1648:	18 f0       	brcs	.+6      	; 0x1650 <__ultoa_invert+0x7c>
    164a:	49 5d       	subi	r20, 0xD9	; 217
    164c:	31 fd       	sbrc	r19, 1
    164e:	40 52       	subi	r20, 0x20	; 32
    1650:	41 93       	st	Z+, r20
    1652:	02 d0       	rcall	.+4      	; 0x1658 <__ultoa_invert+0x84>
    1654:	a9 f7       	brne	.-22     	; 0x1640 <__ultoa_invert+0x6c>
    1656:	ea cf       	rjmp	.-44     	; 0x162c <__ultoa_invert+0x58>
    1658:	b4 e0       	ldi	r27, 0x04	; 4
    165a:	a6 95       	lsr	r26
    165c:	97 95       	ror	r25
    165e:	87 95       	ror	r24
    1660:	77 95       	ror	r23
    1662:	67 95       	ror	r22
    1664:	ba 95       	dec	r27
    1666:	c9 f7       	brne	.-14     	; 0x165a <__ultoa_invert+0x86>
    1668:	00 97       	sbiw	r24, 0x00	; 0
    166a:	61 05       	cpc	r22, r1
    166c:	71 05       	cpc	r23, r1
    166e:	08 95       	ret
    1670:	9b 01       	movw	r18, r22
    1672:	ac 01       	movw	r20, r24
    1674:	0a 2e       	mov	r0, r26
    1676:	06 94       	lsr	r0
    1678:	57 95       	ror	r21
    167a:	47 95       	ror	r20
    167c:	37 95       	ror	r19
    167e:	27 95       	ror	r18
    1680:	ba 95       	dec	r27
    1682:	c9 f7       	brne	.-14     	; 0x1676 <__ultoa_invert+0xa2>
    1684:	62 0f       	add	r22, r18
    1686:	73 1f       	adc	r23, r19
    1688:	84 1f       	adc	r24, r20
    168a:	95 1f       	adc	r25, r21
    168c:	a0 1d       	adc	r26, r0
    168e:	08 95       	ret

00001690 <__ctype_isfalse>:
    1690:	99 27       	eor	r25, r25
    1692:	88 27       	eor	r24, r24

00001694 <__ctype_istrue>:
    1694:	08 95       	ret

00001696 <__prologue_saves__>:
    1696:	2f 92       	push	r2
    1698:	3f 92       	push	r3
    169a:	4f 92       	push	r4
    169c:	5f 92       	push	r5
    169e:	6f 92       	push	r6
    16a0:	7f 92       	push	r7
    16a2:	8f 92       	push	r8
    16a4:	9f 92       	push	r9
    16a6:	af 92       	push	r10
    16a8:	bf 92       	push	r11
    16aa:	cf 92       	push	r12
    16ac:	df 92       	push	r13
    16ae:	ef 92       	push	r14
    16b0:	ff 92       	push	r15
    16b2:	0f 93       	push	r16
    16b4:	1f 93       	push	r17
    16b6:	cf 93       	push	r28
    16b8:	df 93       	push	r29
    16ba:	cd b7       	in	r28, 0x3d	; 61
    16bc:	de b7       	in	r29, 0x3e	; 62
    16be:	ca 1b       	sub	r28, r26
    16c0:	db 0b       	sbc	r29, r27
    16c2:	0f b6       	in	r0, 0x3f	; 63
    16c4:	f8 94       	cli
    16c6:	de bf       	out	0x3e, r29	; 62
    16c8:	0f be       	out	0x3f, r0	; 63
    16ca:	cd bf       	out	0x3d, r28	; 61
    16cc:	09 94       	ijmp

000016ce <__epilogue_restores__>:
    16ce:	2a 88       	ldd	r2, Y+18	; 0x12
    16d0:	39 88       	ldd	r3, Y+17	; 0x11
    16d2:	48 88       	ldd	r4, Y+16	; 0x10
    16d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    16d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    16d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    16da:	8c 84       	ldd	r8, Y+12	; 0x0c
    16dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    16de:	aa 84       	ldd	r10, Y+10	; 0x0a
    16e0:	b9 84       	ldd	r11, Y+9	; 0x09
    16e2:	c8 84       	ldd	r12, Y+8	; 0x08
    16e4:	df 80       	ldd	r13, Y+7	; 0x07
    16e6:	ee 80       	ldd	r14, Y+6	; 0x06
    16e8:	fd 80       	ldd	r15, Y+5	; 0x05
    16ea:	0c 81       	ldd	r16, Y+4	; 0x04
    16ec:	1b 81       	ldd	r17, Y+3	; 0x03
    16ee:	aa 81       	ldd	r26, Y+2	; 0x02
    16f0:	b9 81       	ldd	r27, Y+1	; 0x01
    16f2:	ce 0f       	add	r28, r30
    16f4:	d1 1d       	adc	r29, r1
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	f8 94       	cli
    16fa:	de bf       	out	0x3e, r29	; 62
    16fc:	0f be       	out	0x3f, r0	; 63
    16fe:	cd bf       	out	0x3d, r28	; 61
    1700:	ed 01       	movw	r28, r26
    1702:	08 95       	ret

00001704 <_exit>:
    1704:	f8 94       	cli

00001706 <__stop_program>:
    1706:	ff cf       	rjmp	.-2      	; 0x1706 <__stop_program>
