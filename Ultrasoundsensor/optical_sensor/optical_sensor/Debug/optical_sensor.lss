
optical_sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00000a22  00000ab6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080012e  0080012e  00000ae4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009e8  00000000  00000000  00000bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000831  00000000  00000000  000015d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000448  00000000  00000000  00001e09  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  00002254  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000432  00000000  00000000  00002364  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000215  00000000  00000000  00002796  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000029ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 ac 00 	jmp	0x158	; 0x158 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e2       	ldi	r30, 0x22	; 34
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 32       	cpi	r26, 0x2E	; 46
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e2       	ldi	r26, 0x2E	; 46
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 33       	cpi	r26, 0x3A	; 58
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7a 00 	call	0xf4	; 0xf4 <main>
  9e:	0c 94 0f 05 	jmp	0xa1e	; 0xa1e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <delay_us>:
	}
}

void delay_us(unsigned char us)
{
	for(int i =0; i<us; i++){
  a6:	48 2f       	mov	r20, r24
  a8:	50 e0       	ldi	r21, 0x00	; 0
  aa:	14 16       	cp	r1, r20
  ac:	15 06       	cpc	r1, r21
  ae:	94 f4       	brge	.+36     	; 0xd4 <delay_us+0x2e>
  b0:	20 e0       	ldi	r18, 0x00	; 0
  b2:	30 e0       	ldi	r19, 0x00	; 0
		// configure the timer to CTC mode
		TCCR0A |= (1<<WGM01);
		// set desired number of states we want
		// we want 16 states
		OCR0A = 0x0F;
  b4:	7f e0       	ldi	r23, 0x0F	; 15
		// set prescaler and start timer
		TCCR0B =(1<<CS00); //CS00 = 1 --> prescaler of 1
  b6:	61 e0       	ldi	r22, 0x01	; 1
		{
			//do nothing
		}
		// I know that at this point in code, 1 us has passed.
		// reset match flag by adding 1 into the flag
		TIFR0 = (1 << OCF0A);
  b8:	92 e0       	ldi	r25, 0x02	; 2

void delay_us(unsigned char us)
{
	for(int i =0; i<us; i++){
		// configure the timer to CTC mode
		TCCR0A |= (1<<WGM01);
  ba:	84 b5       	in	r24, 0x24	; 36
  bc:	82 60       	ori	r24, 0x02	; 2
  be:	84 bd       	out	0x24, r24	; 36
		// set desired number of states we want
		// we want 16 states
		OCR0A = 0x0F;
  c0:	77 bd       	out	0x27, r23	; 39
		// set prescaler and start timer
		TCCR0B =(1<<CS00); //CS00 = 1 --> prescaler of 1
  c2:	65 bd       	out	0x25, r22	; 37
		// wait for match between current state and desired state
		while ((TIFR0 & (1 << OCF0A))==0) //means flag is low
  c4:	a9 9b       	sbis	0x15, 1	; 21
  c6:	fe cf       	rjmp	.-4      	; 0xc4 <delay_us+0x1e>
		{
			//do nothing
		}
		// I know that at this point in code, 1 us has passed.
		// reset match flag by adding 1 into the flag
		TIFR0 = (1 << OCF0A);
  c8:	95 bb       	out	0x15, r25	; 21
	}
}

void delay_us(unsigned char us)
{
	for(int i =0; i<us; i++){
  ca:	2f 5f       	subi	r18, 0xFF	; 255
  cc:	3f 4f       	sbci	r19, 0xFF	; 255
  ce:	24 17       	cp	r18, r20
  d0:	35 07       	cpc	r19, r21
  d2:	99 f7       	brne	.-26     	; 0xba <delay_us+0x14>
  d4:	08 95       	ret

000000d6 <init_interrupt>:
	}
}

void init_interrupt(void){
	//set the timer mode to CTC <- count to desired value and then restart and count again
	TCCR0A |= (1 << WGM01);
  d6:	84 b5       	in	r24, 0x24	; 36
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	84 bd       	out	0x24, r24	; 36
	//set the value that you want to count to <- 250 timer ticks (0-249)
	OCR0A = 0x0F;
  dc:	8f e0       	ldi	r24, 0x0F	; 15
  de:	87 bd       	out	0x27, r24	; 39
	
	//enable the interrupt for on compare a for timer 0
	TIMSK0 |= (1 << OCIE0A); //can be interrupted by Compare A matrch
  e0:	ee e6       	ldi	r30, 0x6E	; 110
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	82 60       	ori	r24, 0x02	; 2
  e8:	80 83       	st	Z, r24
	//enable all interrupts
	sei();
  ea:	78 94       	sei
	
	//start the timer
	TCCR0B |= (1 << CS00); //set prescaler to 64 and start
  ec:	85 b5       	in	r24, 0x25	; 37
  ee:	81 60       	ori	r24, 0x01	; 1
  f0:	85 bd       	out	0x25, r24	; 37
  f2:	08 95       	ret

000000f4 <main>:
char sendsignal=1;
volatile float distance=0;

int main(void)
{
	uart_init();
  f4:	0e 94 1a 01 	call	0x234	; 0x234 <uart_init>
	io_redirect();
  f8:	0e 94 2b 01 	call	0x256	; 0x256 <io_redirect>
	init_interrupt();
  fc:	0e 94 6b 00 	call	0xd6	; 0xd6 <init_interrupt>
	
	DDRB &= ~(1 << DDB0);
 100:	20 98       	cbi	0x04, 0	; 4
	DDRD |= (1 << DDD2);
 102:	52 9a       	sbi	0x0a, 2	; 10
		PORTD |= (1<<PORTD2);
		delay_us(10);
		PORTD &= (0<<PORTD2);
		sendsignal=0;
		}
		printf("The result: %f \n", distance);
 104:	cd e1       	ldi	r28, 0x1D	; 29
 106:	d1 e0       	ldi	r29, 0x01	; 1
	DDRD |= (1 << DDD2);
	
    /* Replace with your application code */
    while (1) 
    {
		if(sendsignal==1){
 108:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	69 f4       	brne	.+26     	; 0x12a <main+0x36>
		PORTD &= (0<<PORTD2);
 110:	8b b1       	in	r24, 0x0b	; 11
 112:	1b b8       	out	0x0b, r1	; 11
		delay_us(2);
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	0e 94 53 00 	call	0xa6	; 0xa6 <delay_us>
		PORTD |= (1<<PORTD2);
 11a:	5a 9a       	sbi	0x0b, 2	; 11
		delay_us(10);
 11c:	8a e0       	ldi	r24, 0x0A	; 10
 11e:	0e 94 53 00 	call	0xa6	; 0xa6 <delay_us>
		PORTD &= (0<<PORTD2);
 122:	8b b1       	in	r24, 0x0b	; 11
 124:	1b b8       	out	0x0b, r1	; 11
		sendsignal=0;
 126:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
		}
		printf("The result: %f \n", distance);
 12a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
 12e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
 132:	a0 91 30 01 	lds	r26, 0x0130	; 0x800130 <__data_end+0x2>
 136:	b0 91 31 01 	lds	r27, 0x0131	; 0x800131 <__data_end+0x3>
 13a:	bf 93       	push	r27
 13c:	af 93       	push	r26
 13e:	9f 93       	push	r25
 140:	8f 93       	push	r24
 142:	df 93       	push	r29
 144:	cf 93       	push	r28
 146:	0e 94 31 02 	call	0x462	; 0x462 <printf>
	}
 14a:	0f 90       	pop	r0
 14c:	0f 90       	pop	r0
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	d8 cf       	rjmp	.-80     	; 0x108 <main+0x14>

00000158 <__vector_14>:
	
	//start the timer
	TCCR0B |= (1 << CS00); //set prescaler to 64 and start
}

ISR (TIMER0_COMPA_vect) {
 158:	1f 92       	push	r1
 15a:	0f 92       	push	r0
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	0f 92       	push	r0
 160:	11 24       	eor	r1, r1
 162:	2f 93       	push	r18
 164:	3f 93       	push	r19
 166:	4f 93       	push	r20
 168:	5f 93       	push	r21
 16a:	6f 93       	push	r22
 16c:	7f 93       	push	r23
 16e:	8f 93       	push	r24
 170:	9f 93       	push	r25
 172:	af 93       	push	r26
 174:	bf 93       	push	r27
 176:	ef 93       	push	r30
 178:	ff 93       	push	r31
	if (PINB & (1<<PINB0)) us_counter++;
 17a:	18 9b       	sbis	0x03, 0	; 3
 17c:	09 c0       	rjmp	.+18     	; 0x190 <__vector_14+0x38>
 17e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <us_counter>
 182:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <us_counter+0x1>
 186:	01 96       	adiw	r24, 0x01	; 1
 188:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <us_counter+0x1>
 18c:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <us_counter>
	if (~(PINB & (1<<PINB0)))
 190:	83 b1       	in	r24, 0x03	; 3
		distance = us_counter * 0.034 / 2;
 192:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <us_counter>
 196:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <us_counter+0x1>
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 36 01 	call	0x26c	; 0x26c <__floatunsisf>
 1a2:	26 e9       	ldi	r18, 0x96	; 150
 1a4:	33 e4       	ldi	r19, 0x43	; 67
 1a6:	4b e0       	ldi	r20, 0x0B	; 11
 1a8:	5d e3       	ldi	r21, 0x3D	; 61
 1aa:	0e 94 c4 01 	call	0x388	; 0x388 <__mulsf3>
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	40 e0       	ldi	r20, 0x00	; 0
 1b4:	5f e3       	ldi	r21, 0x3F	; 63
 1b6:	0e 94 c4 01 	call	0x388	; 0x388 <__mulsf3>
 1ba:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <__data_end>
 1be:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <__data_end+0x1>
 1c2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end+0x2>
 1c6:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__data_end+0x3>
		sendsignal=1;
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		us_counter++;
 1d0:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <us_counter>
 1d4:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <us_counter+0x1>
 1d8:	01 96       	adiw	r24, 0x01	; 1
 1da:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <us_counter+0x1>
 1de:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <us_counter>
 1e2:	ff 91       	pop	r31
 1e4:	ef 91       	pop	r30
 1e6:	bf 91       	pop	r27
 1e8:	af 91       	pop	r26
 1ea:	9f 91       	pop	r25
 1ec:	8f 91       	pop	r24
 1ee:	7f 91       	pop	r23
 1f0:	6f 91       	pop	r22
 1f2:	5f 91       	pop	r21
 1f4:	4f 91       	pop	r20
 1f6:	3f 91       	pop	r19
 1f8:	2f 91       	pop	r18
 1fa:	0f 90       	pop	r0
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	0f 90       	pop	r0
 200:	1f 90       	pop	r1
 202:	18 95       	reti

00000204 <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
 204:	cf 93       	push	r28
 206:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 208:	8a 30       	cpi	r24, 0x0A	; 10
 20a:	19 f4       	brne	.+6      	; 0x212 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 20c:	8d e0       	ldi	r24, 0x0D	; 13
 20e:	0e 94 02 01 	call	0x204	; 0x204 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 212:	e0 ec       	ldi	r30, 0xC0	; 192
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	85 ff       	sbrs	r24, 5
 21a:	fd cf       	rjmp	.-6      	; 0x216 <uart_putchar+0x12>
	UDR0 = c;
 21c:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 220:	cf 91       	pop	r28
 222:	08 95       	ret

00000224 <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 224:	e0 ec       	ldi	r30, 0xC0	; 192
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	88 23       	and	r24, r24
 22c:	ec f7       	brge	.-6      	; 0x228 <uart_getchar+0x4>
	return UDR0;
 22e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 232:	08 95       	ret

00000234 <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
 234:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = UBRRL_VALUE;
 238:	87 e6       	ldi	r24, 0x67	; 103
 23a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
 23e:	e0 ec       	ldi	r30, 0xC0	; 192
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	8d 7f       	andi	r24, 0xFD	; 253
 246:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
 248:	86 e0       	ldi	r24, 0x06	; 6
 24a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
 24e:	88 e1       	ldi	r24, 0x18	; 24
 250:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 254:	08 95       	ret

00000256 <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
 256:	e4 e3       	ldi	r30, 0x34	; 52
 258:	f1 e0       	ldi	r31, 0x01	; 1
 25a:	8f e0       	ldi	r24, 0x0F	; 15
 25c:	91 e0       	ldi	r25, 0x01	; 1
 25e:	93 83       	std	Z+3, r25	; 0x03
 260:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	91 83       	std	Z+1, r25	; 0x01
 268:	80 83       	st	Z, r24
 26a:	08 95       	ret

0000026c <__floatunsisf>:
 26c:	e8 94       	clt
 26e:	09 c0       	rjmp	.+18     	; 0x282 <__floatsisf+0x12>

00000270 <__floatsisf>:
 270:	97 fb       	bst	r25, 7
 272:	3e f4       	brtc	.+14     	; 0x282 <__floatsisf+0x12>
 274:	90 95       	com	r25
 276:	80 95       	com	r24
 278:	70 95       	com	r23
 27a:	61 95       	neg	r22
 27c:	7f 4f       	sbci	r23, 0xFF	; 255
 27e:	8f 4f       	sbci	r24, 0xFF	; 255
 280:	9f 4f       	sbci	r25, 0xFF	; 255
 282:	99 23       	and	r25, r25
 284:	a9 f0       	breq	.+42     	; 0x2b0 <__floatsisf+0x40>
 286:	f9 2f       	mov	r31, r25
 288:	96 e9       	ldi	r25, 0x96	; 150
 28a:	bb 27       	eor	r27, r27
 28c:	93 95       	inc	r25
 28e:	f6 95       	lsr	r31
 290:	87 95       	ror	r24
 292:	77 95       	ror	r23
 294:	67 95       	ror	r22
 296:	b7 95       	ror	r27
 298:	f1 11       	cpse	r31, r1
 29a:	f8 cf       	rjmp	.-16     	; 0x28c <__floatsisf+0x1c>
 29c:	fa f4       	brpl	.+62     	; 0x2dc <__floatsisf+0x6c>
 29e:	bb 0f       	add	r27, r27
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <__floatsisf+0x36>
 2a2:	60 ff       	sbrs	r22, 0
 2a4:	1b c0       	rjmp	.+54     	; 0x2dc <__floatsisf+0x6c>
 2a6:	6f 5f       	subi	r22, 0xFF	; 255
 2a8:	7f 4f       	sbci	r23, 0xFF	; 255
 2aa:	8f 4f       	sbci	r24, 0xFF	; 255
 2ac:	9f 4f       	sbci	r25, 0xFF	; 255
 2ae:	16 c0       	rjmp	.+44     	; 0x2dc <__floatsisf+0x6c>
 2b0:	88 23       	and	r24, r24
 2b2:	11 f0       	breq	.+4      	; 0x2b8 <__floatsisf+0x48>
 2b4:	96 e9       	ldi	r25, 0x96	; 150
 2b6:	11 c0       	rjmp	.+34     	; 0x2da <__floatsisf+0x6a>
 2b8:	77 23       	and	r23, r23
 2ba:	21 f0       	breq	.+8      	; 0x2c4 <__floatsisf+0x54>
 2bc:	9e e8       	ldi	r25, 0x8E	; 142
 2be:	87 2f       	mov	r24, r23
 2c0:	76 2f       	mov	r23, r22
 2c2:	05 c0       	rjmp	.+10     	; 0x2ce <__floatsisf+0x5e>
 2c4:	66 23       	and	r22, r22
 2c6:	71 f0       	breq	.+28     	; 0x2e4 <__floatsisf+0x74>
 2c8:	96 e8       	ldi	r25, 0x86	; 134
 2ca:	86 2f       	mov	r24, r22
 2cc:	70 e0       	ldi	r23, 0x00	; 0
 2ce:	60 e0       	ldi	r22, 0x00	; 0
 2d0:	2a f0       	brmi	.+10     	; 0x2dc <__floatsisf+0x6c>
 2d2:	9a 95       	dec	r25
 2d4:	66 0f       	add	r22, r22
 2d6:	77 1f       	adc	r23, r23
 2d8:	88 1f       	adc	r24, r24
 2da:	da f7       	brpl	.-10     	; 0x2d2 <__floatsisf+0x62>
 2dc:	88 0f       	add	r24, r24
 2de:	96 95       	lsr	r25
 2e0:	87 95       	ror	r24
 2e2:	97 f9       	bld	r25, 7
 2e4:	08 95       	ret

000002e6 <__fp_inf>:
 2e6:	97 f9       	bld	r25, 7
 2e8:	9f 67       	ori	r25, 0x7F	; 127
 2ea:	80 e8       	ldi	r24, 0x80	; 128
 2ec:	70 e0       	ldi	r23, 0x00	; 0
 2ee:	60 e0       	ldi	r22, 0x00	; 0
 2f0:	08 95       	ret

000002f2 <__fp_nan>:
 2f2:	9f ef       	ldi	r25, 0xFF	; 255
 2f4:	80 ec       	ldi	r24, 0xC0	; 192
 2f6:	08 95       	ret

000002f8 <__fp_pscA>:
 2f8:	00 24       	eor	r0, r0
 2fa:	0a 94       	dec	r0
 2fc:	16 16       	cp	r1, r22
 2fe:	17 06       	cpc	r1, r23
 300:	18 06       	cpc	r1, r24
 302:	09 06       	cpc	r0, r25
 304:	08 95       	ret

00000306 <__fp_pscB>:
 306:	00 24       	eor	r0, r0
 308:	0a 94       	dec	r0
 30a:	12 16       	cp	r1, r18
 30c:	13 06       	cpc	r1, r19
 30e:	14 06       	cpc	r1, r20
 310:	05 06       	cpc	r0, r21
 312:	08 95       	ret

00000314 <__fp_round>:
 314:	09 2e       	mov	r0, r25
 316:	03 94       	inc	r0
 318:	00 0c       	add	r0, r0
 31a:	11 f4       	brne	.+4      	; 0x320 <__fp_round+0xc>
 31c:	88 23       	and	r24, r24
 31e:	52 f0       	brmi	.+20     	; 0x334 <__fp_round+0x20>
 320:	bb 0f       	add	r27, r27
 322:	40 f4       	brcc	.+16     	; 0x334 <__fp_round+0x20>
 324:	bf 2b       	or	r27, r31
 326:	11 f4       	brne	.+4      	; 0x32c <__fp_round+0x18>
 328:	60 ff       	sbrs	r22, 0
 32a:	04 c0       	rjmp	.+8      	; 0x334 <__fp_round+0x20>
 32c:	6f 5f       	subi	r22, 0xFF	; 255
 32e:	7f 4f       	sbci	r23, 0xFF	; 255
 330:	8f 4f       	sbci	r24, 0xFF	; 255
 332:	9f 4f       	sbci	r25, 0xFF	; 255
 334:	08 95       	ret

00000336 <__fp_split3>:
 336:	57 fd       	sbrc	r21, 7
 338:	90 58       	subi	r25, 0x80	; 128
 33a:	44 0f       	add	r20, r20
 33c:	55 1f       	adc	r21, r21
 33e:	59 f0       	breq	.+22     	; 0x356 <__fp_splitA+0x10>
 340:	5f 3f       	cpi	r21, 0xFF	; 255
 342:	71 f0       	breq	.+28     	; 0x360 <__fp_splitA+0x1a>
 344:	47 95       	ror	r20

00000346 <__fp_splitA>:
 346:	88 0f       	add	r24, r24
 348:	97 fb       	bst	r25, 7
 34a:	99 1f       	adc	r25, r25
 34c:	61 f0       	breq	.+24     	; 0x366 <__fp_splitA+0x20>
 34e:	9f 3f       	cpi	r25, 0xFF	; 255
 350:	79 f0       	breq	.+30     	; 0x370 <__fp_splitA+0x2a>
 352:	87 95       	ror	r24
 354:	08 95       	ret
 356:	12 16       	cp	r1, r18
 358:	13 06       	cpc	r1, r19
 35a:	14 06       	cpc	r1, r20
 35c:	55 1f       	adc	r21, r21
 35e:	f2 cf       	rjmp	.-28     	; 0x344 <__fp_split3+0xe>
 360:	46 95       	lsr	r20
 362:	f1 df       	rcall	.-30     	; 0x346 <__fp_splitA>
 364:	08 c0       	rjmp	.+16     	; 0x376 <__fp_splitA+0x30>
 366:	16 16       	cp	r1, r22
 368:	17 06       	cpc	r1, r23
 36a:	18 06       	cpc	r1, r24
 36c:	99 1f       	adc	r25, r25
 36e:	f1 cf       	rjmp	.-30     	; 0x352 <__fp_splitA+0xc>
 370:	86 95       	lsr	r24
 372:	71 05       	cpc	r23, r1
 374:	61 05       	cpc	r22, r1
 376:	08 94       	sec
 378:	08 95       	ret

0000037a <__fp_zero>:
 37a:	e8 94       	clt

0000037c <__fp_szero>:
 37c:	bb 27       	eor	r27, r27
 37e:	66 27       	eor	r22, r22
 380:	77 27       	eor	r23, r23
 382:	cb 01       	movw	r24, r22
 384:	97 f9       	bld	r25, 7
 386:	08 95       	ret

00000388 <__mulsf3>:
 388:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__mulsf3x>
 38c:	0c 94 8a 01 	jmp	0x314	; 0x314 <__fp_round>
 390:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__fp_pscA>
 394:	38 f0       	brcs	.+14     	; 0x3a4 <__mulsf3+0x1c>
 396:	0e 94 83 01 	call	0x306	; 0x306 <__fp_pscB>
 39a:	20 f0       	brcs	.+8      	; 0x3a4 <__mulsf3+0x1c>
 39c:	95 23       	and	r25, r21
 39e:	11 f0       	breq	.+4      	; 0x3a4 <__mulsf3+0x1c>
 3a0:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__fp_inf>
 3a4:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_nan>
 3a8:	11 24       	eor	r1, r1
 3aa:	0c 94 be 01 	jmp	0x37c	; 0x37c <__fp_szero>

000003ae <__mulsf3x>:
 3ae:	0e 94 9b 01 	call	0x336	; 0x336 <__fp_split3>
 3b2:	70 f3       	brcs	.-36     	; 0x390 <__mulsf3+0x8>

000003b4 <__mulsf3_pse>:
 3b4:	95 9f       	mul	r25, r21
 3b6:	c1 f3       	breq	.-16     	; 0x3a8 <__mulsf3+0x20>
 3b8:	95 0f       	add	r25, r21
 3ba:	50 e0       	ldi	r21, 0x00	; 0
 3bc:	55 1f       	adc	r21, r21
 3be:	62 9f       	mul	r22, r18
 3c0:	f0 01       	movw	r30, r0
 3c2:	72 9f       	mul	r23, r18
 3c4:	bb 27       	eor	r27, r27
 3c6:	f0 0d       	add	r31, r0
 3c8:	b1 1d       	adc	r27, r1
 3ca:	63 9f       	mul	r22, r19
 3cc:	aa 27       	eor	r26, r26
 3ce:	f0 0d       	add	r31, r0
 3d0:	b1 1d       	adc	r27, r1
 3d2:	aa 1f       	adc	r26, r26
 3d4:	64 9f       	mul	r22, r20
 3d6:	66 27       	eor	r22, r22
 3d8:	b0 0d       	add	r27, r0
 3da:	a1 1d       	adc	r26, r1
 3dc:	66 1f       	adc	r22, r22
 3de:	82 9f       	mul	r24, r18
 3e0:	22 27       	eor	r18, r18
 3e2:	b0 0d       	add	r27, r0
 3e4:	a1 1d       	adc	r26, r1
 3e6:	62 1f       	adc	r22, r18
 3e8:	73 9f       	mul	r23, r19
 3ea:	b0 0d       	add	r27, r0
 3ec:	a1 1d       	adc	r26, r1
 3ee:	62 1f       	adc	r22, r18
 3f0:	83 9f       	mul	r24, r19
 3f2:	a0 0d       	add	r26, r0
 3f4:	61 1d       	adc	r22, r1
 3f6:	22 1f       	adc	r18, r18
 3f8:	74 9f       	mul	r23, r20
 3fa:	33 27       	eor	r19, r19
 3fc:	a0 0d       	add	r26, r0
 3fe:	61 1d       	adc	r22, r1
 400:	23 1f       	adc	r18, r19
 402:	84 9f       	mul	r24, r20
 404:	60 0d       	add	r22, r0
 406:	21 1d       	adc	r18, r1
 408:	82 2f       	mov	r24, r18
 40a:	76 2f       	mov	r23, r22
 40c:	6a 2f       	mov	r22, r26
 40e:	11 24       	eor	r1, r1
 410:	9f 57       	subi	r25, 0x7F	; 127
 412:	50 40       	sbci	r21, 0x00	; 0
 414:	9a f0       	brmi	.+38     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 416:	f1 f0       	breq	.+60     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 418:	88 23       	and	r24, r24
 41a:	4a f0       	brmi	.+18     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 41c:	ee 0f       	add	r30, r30
 41e:	ff 1f       	adc	r31, r31
 420:	bb 1f       	adc	r27, r27
 422:	66 1f       	adc	r22, r22
 424:	77 1f       	adc	r23, r23
 426:	88 1f       	adc	r24, r24
 428:	91 50       	subi	r25, 0x01	; 1
 42a:	50 40       	sbci	r21, 0x00	; 0
 42c:	a9 f7       	brne	.-22     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 42e:	9e 3f       	cpi	r25, 0xFE	; 254
 430:	51 05       	cpc	r21, r1
 432:	80 f0       	brcs	.+32     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 434:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__fp_inf>
 438:	0c 94 be 01 	jmp	0x37c	; 0x37c <__fp_szero>
 43c:	5f 3f       	cpi	r21, 0xFF	; 255
 43e:	e4 f3       	brlt	.-8      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 440:	98 3e       	cpi	r25, 0xE8	; 232
 442:	d4 f3       	brlt	.-12     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 444:	86 95       	lsr	r24
 446:	77 95       	ror	r23
 448:	67 95       	ror	r22
 44a:	b7 95       	ror	r27
 44c:	f7 95       	ror	r31
 44e:	e7 95       	ror	r30
 450:	9f 5f       	subi	r25, 0xFF	; 255
 452:	c1 f7       	brne	.-16     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 454:	fe 2b       	or	r31, r30
 456:	88 0f       	add	r24, r24
 458:	91 1d       	adc	r25, r1
 45a:	96 95       	lsr	r25
 45c:	87 95       	ror	r24
 45e:	97 f9       	bld	r25, 7
 460:	08 95       	ret

00000462 <printf>:
 462:	a0 e0       	ldi	r26, 0x00	; 0
 464:	b0 e0       	ldi	r27, 0x00	; 0
 466:	e7 e3       	ldi	r30, 0x37	; 55
 468:	f2 e0       	ldi	r31, 0x02	; 2
 46a:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__prologue_saves__+0x20>
 46e:	ae 01       	movw	r20, r28
 470:	4b 5f       	subi	r20, 0xFB	; 251
 472:	5f 4f       	sbci	r21, 0xFF	; 255
 474:	fa 01       	movw	r30, r20
 476:	61 91       	ld	r22, Z+
 478:	71 91       	ld	r23, Z+
 47a:	af 01       	movw	r20, r30
 47c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__iob+0x2>
 480:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <__iob+0x3>
 484:	0e 94 47 02 	call	0x48e	; 0x48e <vfprintf>
 488:	e2 e0       	ldi	r30, 0x02	; 2
 48a:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__epilogue_restores__+0x20>

0000048e <vfprintf>:
 48e:	ab e0       	ldi	r26, 0x0B	; 11
 490:	b0 e0       	ldi	r27, 0x00	; 0
 492:	ed e4       	ldi	r30, 0x4D	; 77
 494:	f2 e0       	ldi	r31, 0x02	; 2
 496:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <__prologue_saves__>
 49a:	6c 01       	movw	r12, r24
 49c:	7b 01       	movw	r14, r22
 49e:	8a 01       	movw	r16, r20
 4a0:	fc 01       	movw	r30, r24
 4a2:	17 82       	std	Z+7, r1	; 0x07
 4a4:	16 82       	std	Z+6, r1	; 0x06
 4a6:	83 81       	ldd	r24, Z+3	; 0x03
 4a8:	81 ff       	sbrs	r24, 1
 4aa:	cc c1       	rjmp	.+920    	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 4ac:	ce 01       	movw	r24, r28
 4ae:	01 96       	adiw	r24, 0x01	; 1
 4b0:	3c 01       	movw	r6, r24
 4b2:	f6 01       	movw	r30, r12
 4b4:	93 81       	ldd	r25, Z+3	; 0x03
 4b6:	f7 01       	movw	r30, r14
 4b8:	93 fd       	sbrc	r25, 3
 4ba:	85 91       	lpm	r24, Z+
 4bc:	93 ff       	sbrs	r25, 3
 4be:	81 91       	ld	r24, Z+
 4c0:	7f 01       	movw	r14, r30
 4c2:	88 23       	and	r24, r24
 4c4:	09 f4       	brne	.+2      	; 0x4c8 <vfprintf+0x3a>
 4c6:	ba c1       	rjmp	.+884    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 4c8:	85 32       	cpi	r24, 0x25	; 37
 4ca:	39 f4       	brne	.+14     	; 0x4da <vfprintf+0x4c>
 4cc:	93 fd       	sbrc	r25, 3
 4ce:	85 91       	lpm	r24, Z+
 4d0:	93 ff       	sbrs	r25, 3
 4d2:	81 91       	ld	r24, Z+
 4d4:	7f 01       	movw	r14, r30
 4d6:	85 32       	cpi	r24, 0x25	; 37
 4d8:	29 f4       	brne	.+10     	; 0x4e4 <vfprintf+0x56>
 4da:	b6 01       	movw	r22, r12
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 4e2:	e7 cf       	rjmp	.-50     	; 0x4b2 <vfprintf+0x24>
 4e4:	91 2c       	mov	r9, r1
 4e6:	21 2c       	mov	r2, r1
 4e8:	31 2c       	mov	r3, r1
 4ea:	ff e1       	ldi	r31, 0x1F	; 31
 4ec:	f3 15       	cp	r31, r3
 4ee:	d8 f0       	brcs	.+54     	; 0x526 <vfprintf+0x98>
 4f0:	8b 32       	cpi	r24, 0x2B	; 43
 4f2:	79 f0       	breq	.+30     	; 0x512 <vfprintf+0x84>
 4f4:	38 f4       	brcc	.+14     	; 0x504 <vfprintf+0x76>
 4f6:	80 32       	cpi	r24, 0x20	; 32
 4f8:	79 f0       	breq	.+30     	; 0x518 <vfprintf+0x8a>
 4fa:	83 32       	cpi	r24, 0x23	; 35
 4fc:	a1 f4       	brne	.+40     	; 0x526 <vfprintf+0x98>
 4fe:	23 2d       	mov	r18, r3
 500:	20 61       	ori	r18, 0x10	; 16
 502:	1d c0       	rjmp	.+58     	; 0x53e <vfprintf+0xb0>
 504:	8d 32       	cpi	r24, 0x2D	; 45
 506:	61 f0       	breq	.+24     	; 0x520 <vfprintf+0x92>
 508:	80 33       	cpi	r24, 0x30	; 48
 50a:	69 f4       	brne	.+26     	; 0x526 <vfprintf+0x98>
 50c:	23 2d       	mov	r18, r3
 50e:	21 60       	ori	r18, 0x01	; 1
 510:	16 c0       	rjmp	.+44     	; 0x53e <vfprintf+0xb0>
 512:	83 2d       	mov	r24, r3
 514:	82 60       	ori	r24, 0x02	; 2
 516:	38 2e       	mov	r3, r24
 518:	e3 2d       	mov	r30, r3
 51a:	e4 60       	ori	r30, 0x04	; 4
 51c:	3e 2e       	mov	r3, r30
 51e:	2a c0       	rjmp	.+84     	; 0x574 <vfprintf+0xe6>
 520:	f3 2d       	mov	r31, r3
 522:	f8 60       	ori	r31, 0x08	; 8
 524:	1d c0       	rjmp	.+58     	; 0x560 <vfprintf+0xd2>
 526:	37 fc       	sbrc	r3, 7
 528:	2d c0       	rjmp	.+90     	; 0x584 <vfprintf+0xf6>
 52a:	20 ed       	ldi	r18, 0xD0	; 208
 52c:	28 0f       	add	r18, r24
 52e:	2a 30       	cpi	r18, 0x0A	; 10
 530:	40 f0       	brcs	.+16     	; 0x542 <vfprintf+0xb4>
 532:	8e 32       	cpi	r24, 0x2E	; 46
 534:	b9 f4       	brne	.+46     	; 0x564 <vfprintf+0xd6>
 536:	36 fc       	sbrc	r3, 6
 538:	81 c1       	rjmp	.+770    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 53a:	23 2d       	mov	r18, r3
 53c:	20 64       	ori	r18, 0x40	; 64
 53e:	32 2e       	mov	r3, r18
 540:	19 c0       	rjmp	.+50     	; 0x574 <vfprintf+0xe6>
 542:	36 fe       	sbrs	r3, 6
 544:	06 c0       	rjmp	.+12     	; 0x552 <vfprintf+0xc4>
 546:	8a e0       	ldi	r24, 0x0A	; 10
 548:	98 9e       	mul	r9, r24
 54a:	20 0d       	add	r18, r0
 54c:	11 24       	eor	r1, r1
 54e:	92 2e       	mov	r9, r18
 550:	11 c0       	rjmp	.+34     	; 0x574 <vfprintf+0xe6>
 552:	ea e0       	ldi	r30, 0x0A	; 10
 554:	2e 9e       	mul	r2, r30
 556:	20 0d       	add	r18, r0
 558:	11 24       	eor	r1, r1
 55a:	22 2e       	mov	r2, r18
 55c:	f3 2d       	mov	r31, r3
 55e:	f0 62       	ori	r31, 0x20	; 32
 560:	3f 2e       	mov	r3, r31
 562:	08 c0       	rjmp	.+16     	; 0x574 <vfprintf+0xe6>
 564:	8c 36       	cpi	r24, 0x6C	; 108
 566:	21 f4       	brne	.+8      	; 0x570 <vfprintf+0xe2>
 568:	83 2d       	mov	r24, r3
 56a:	80 68       	ori	r24, 0x80	; 128
 56c:	38 2e       	mov	r3, r24
 56e:	02 c0       	rjmp	.+4      	; 0x574 <vfprintf+0xe6>
 570:	88 36       	cpi	r24, 0x68	; 104
 572:	41 f4       	brne	.+16     	; 0x584 <vfprintf+0xf6>
 574:	f7 01       	movw	r30, r14
 576:	93 fd       	sbrc	r25, 3
 578:	85 91       	lpm	r24, Z+
 57a:	93 ff       	sbrs	r25, 3
 57c:	81 91       	ld	r24, Z+
 57e:	7f 01       	movw	r14, r30
 580:	81 11       	cpse	r24, r1
 582:	b3 cf       	rjmp	.-154    	; 0x4ea <vfprintf+0x5c>
 584:	98 2f       	mov	r25, r24
 586:	9f 7d       	andi	r25, 0xDF	; 223
 588:	95 54       	subi	r25, 0x45	; 69
 58a:	93 30       	cpi	r25, 0x03	; 3
 58c:	28 f4       	brcc	.+10     	; 0x598 <vfprintf+0x10a>
 58e:	0c 5f       	subi	r16, 0xFC	; 252
 590:	1f 4f       	sbci	r17, 0xFF	; 255
 592:	9f e3       	ldi	r25, 0x3F	; 63
 594:	99 83       	std	Y+1, r25	; 0x01
 596:	0d c0       	rjmp	.+26     	; 0x5b2 <vfprintf+0x124>
 598:	83 36       	cpi	r24, 0x63	; 99
 59a:	31 f0       	breq	.+12     	; 0x5a8 <vfprintf+0x11a>
 59c:	83 37       	cpi	r24, 0x73	; 115
 59e:	71 f0       	breq	.+28     	; 0x5bc <vfprintf+0x12e>
 5a0:	83 35       	cpi	r24, 0x53	; 83
 5a2:	09 f0       	breq	.+2      	; 0x5a6 <vfprintf+0x118>
 5a4:	59 c0       	rjmp	.+178    	; 0x658 <vfprintf+0x1ca>
 5a6:	21 c0       	rjmp	.+66     	; 0x5ea <vfprintf+0x15c>
 5a8:	f8 01       	movw	r30, r16
 5aa:	80 81       	ld	r24, Z
 5ac:	89 83       	std	Y+1, r24	; 0x01
 5ae:	0e 5f       	subi	r16, 0xFE	; 254
 5b0:	1f 4f       	sbci	r17, 0xFF	; 255
 5b2:	88 24       	eor	r8, r8
 5b4:	83 94       	inc	r8
 5b6:	91 2c       	mov	r9, r1
 5b8:	53 01       	movw	r10, r6
 5ba:	13 c0       	rjmp	.+38     	; 0x5e2 <vfprintf+0x154>
 5bc:	28 01       	movw	r4, r16
 5be:	f2 e0       	ldi	r31, 0x02	; 2
 5c0:	4f 0e       	add	r4, r31
 5c2:	51 1c       	adc	r5, r1
 5c4:	f8 01       	movw	r30, r16
 5c6:	a0 80       	ld	r10, Z
 5c8:	b1 80       	ldd	r11, Z+1	; 0x01
 5ca:	36 fe       	sbrs	r3, 6
 5cc:	03 c0       	rjmp	.+6      	; 0x5d4 <vfprintf+0x146>
 5ce:	69 2d       	mov	r22, r9
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <vfprintf+0x14a>
 5d4:	6f ef       	ldi	r22, 0xFF	; 255
 5d6:	7f ef       	ldi	r23, 0xFF	; 255
 5d8:	c5 01       	movw	r24, r10
 5da:	0e 94 33 04 	call	0x866	; 0x866 <strnlen>
 5de:	4c 01       	movw	r8, r24
 5e0:	82 01       	movw	r16, r4
 5e2:	f3 2d       	mov	r31, r3
 5e4:	ff 77       	andi	r31, 0x7F	; 127
 5e6:	3f 2e       	mov	r3, r31
 5e8:	16 c0       	rjmp	.+44     	; 0x616 <vfprintf+0x188>
 5ea:	28 01       	movw	r4, r16
 5ec:	22 e0       	ldi	r18, 0x02	; 2
 5ee:	42 0e       	add	r4, r18
 5f0:	51 1c       	adc	r5, r1
 5f2:	f8 01       	movw	r30, r16
 5f4:	a0 80       	ld	r10, Z
 5f6:	b1 80       	ldd	r11, Z+1	; 0x01
 5f8:	36 fe       	sbrs	r3, 6
 5fa:	03 c0       	rjmp	.+6      	; 0x602 <vfprintf+0x174>
 5fc:	69 2d       	mov	r22, r9
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	02 c0       	rjmp	.+4      	; 0x606 <vfprintf+0x178>
 602:	6f ef       	ldi	r22, 0xFF	; 255
 604:	7f ef       	ldi	r23, 0xFF	; 255
 606:	c5 01       	movw	r24, r10
 608:	0e 94 28 04 	call	0x850	; 0x850 <strnlen_P>
 60c:	4c 01       	movw	r8, r24
 60e:	f3 2d       	mov	r31, r3
 610:	f0 68       	ori	r31, 0x80	; 128
 612:	3f 2e       	mov	r3, r31
 614:	82 01       	movw	r16, r4
 616:	33 fc       	sbrc	r3, 3
 618:	1b c0       	rjmp	.+54     	; 0x650 <vfprintf+0x1c2>
 61a:	82 2d       	mov	r24, r2
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	88 16       	cp	r8, r24
 620:	99 06       	cpc	r9, r25
 622:	b0 f4       	brcc	.+44     	; 0x650 <vfprintf+0x1c2>
 624:	b6 01       	movw	r22, r12
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 62e:	2a 94       	dec	r2
 630:	f4 cf       	rjmp	.-24     	; 0x61a <vfprintf+0x18c>
 632:	f5 01       	movw	r30, r10
 634:	37 fc       	sbrc	r3, 7
 636:	85 91       	lpm	r24, Z+
 638:	37 fe       	sbrs	r3, 7
 63a:	81 91       	ld	r24, Z+
 63c:	5f 01       	movw	r10, r30
 63e:	b6 01       	movw	r22, r12
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 646:	21 10       	cpse	r2, r1
 648:	2a 94       	dec	r2
 64a:	21 e0       	ldi	r18, 0x01	; 1
 64c:	82 1a       	sub	r8, r18
 64e:	91 08       	sbc	r9, r1
 650:	81 14       	cp	r8, r1
 652:	91 04       	cpc	r9, r1
 654:	71 f7       	brne	.-36     	; 0x632 <vfprintf+0x1a4>
 656:	e8 c0       	rjmp	.+464    	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 658:	84 36       	cpi	r24, 0x64	; 100
 65a:	11 f0       	breq	.+4      	; 0x660 <vfprintf+0x1d2>
 65c:	89 36       	cpi	r24, 0x69	; 105
 65e:	41 f5       	brne	.+80     	; 0x6b0 <vfprintf+0x222>
 660:	f8 01       	movw	r30, r16
 662:	37 fe       	sbrs	r3, 7
 664:	07 c0       	rjmp	.+14     	; 0x674 <vfprintf+0x1e6>
 666:	60 81       	ld	r22, Z
 668:	71 81       	ldd	r23, Z+1	; 0x01
 66a:	82 81       	ldd	r24, Z+2	; 0x02
 66c:	93 81       	ldd	r25, Z+3	; 0x03
 66e:	0c 5f       	subi	r16, 0xFC	; 252
 670:	1f 4f       	sbci	r17, 0xFF	; 255
 672:	08 c0       	rjmp	.+16     	; 0x684 <vfprintf+0x1f6>
 674:	60 81       	ld	r22, Z
 676:	71 81       	ldd	r23, Z+1	; 0x01
 678:	07 2e       	mov	r0, r23
 67a:	00 0c       	add	r0, r0
 67c:	88 0b       	sbc	r24, r24
 67e:	99 0b       	sbc	r25, r25
 680:	0e 5f       	subi	r16, 0xFE	; 254
 682:	1f 4f       	sbci	r17, 0xFF	; 255
 684:	f3 2d       	mov	r31, r3
 686:	ff 76       	andi	r31, 0x6F	; 111
 688:	3f 2e       	mov	r3, r31
 68a:	97 ff       	sbrs	r25, 7
 68c:	09 c0       	rjmp	.+18     	; 0x6a0 <vfprintf+0x212>
 68e:	90 95       	com	r25
 690:	80 95       	com	r24
 692:	70 95       	com	r23
 694:	61 95       	neg	r22
 696:	7f 4f       	sbci	r23, 0xFF	; 255
 698:	8f 4f       	sbci	r24, 0xFF	; 255
 69a:	9f 4f       	sbci	r25, 0xFF	; 255
 69c:	f0 68       	ori	r31, 0x80	; 128
 69e:	3f 2e       	mov	r3, r31
 6a0:	2a e0       	ldi	r18, 0x0A	; 10
 6a2:	30 e0       	ldi	r19, 0x00	; 0
 6a4:	a3 01       	movw	r20, r6
 6a6:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__ultoa_invert>
 6aa:	88 2e       	mov	r8, r24
 6ac:	86 18       	sub	r8, r6
 6ae:	45 c0       	rjmp	.+138    	; 0x73a <vfprintf+0x2ac>
 6b0:	85 37       	cpi	r24, 0x75	; 117
 6b2:	31 f4       	brne	.+12     	; 0x6c0 <vfprintf+0x232>
 6b4:	23 2d       	mov	r18, r3
 6b6:	2f 7e       	andi	r18, 0xEF	; 239
 6b8:	b2 2e       	mov	r11, r18
 6ba:	2a e0       	ldi	r18, 0x0A	; 10
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	25 c0       	rjmp	.+74     	; 0x70a <vfprintf+0x27c>
 6c0:	93 2d       	mov	r25, r3
 6c2:	99 7f       	andi	r25, 0xF9	; 249
 6c4:	b9 2e       	mov	r11, r25
 6c6:	8f 36       	cpi	r24, 0x6F	; 111
 6c8:	c1 f0       	breq	.+48     	; 0x6fa <vfprintf+0x26c>
 6ca:	18 f4       	brcc	.+6      	; 0x6d2 <vfprintf+0x244>
 6cc:	88 35       	cpi	r24, 0x58	; 88
 6ce:	79 f0       	breq	.+30     	; 0x6ee <vfprintf+0x260>
 6d0:	b5 c0       	rjmp	.+362    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 6d2:	80 37       	cpi	r24, 0x70	; 112
 6d4:	19 f0       	breq	.+6      	; 0x6dc <vfprintf+0x24e>
 6d6:	88 37       	cpi	r24, 0x78	; 120
 6d8:	21 f0       	breq	.+8      	; 0x6e2 <vfprintf+0x254>
 6da:	b0 c0       	rjmp	.+352    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 6dc:	e9 2f       	mov	r30, r25
 6de:	e0 61       	ori	r30, 0x10	; 16
 6e0:	be 2e       	mov	r11, r30
 6e2:	b4 fe       	sbrs	r11, 4
 6e4:	0d c0       	rjmp	.+26     	; 0x700 <vfprintf+0x272>
 6e6:	fb 2d       	mov	r31, r11
 6e8:	f4 60       	ori	r31, 0x04	; 4
 6ea:	bf 2e       	mov	r11, r31
 6ec:	09 c0       	rjmp	.+18     	; 0x700 <vfprintf+0x272>
 6ee:	34 fe       	sbrs	r3, 4
 6f0:	0a c0       	rjmp	.+20     	; 0x706 <vfprintf+0x278>
 6f2:	29 2f       	mov	r18, r25
 6f4:	26 60       	ori	r18, 0x06	; 6
 6f6:	b2 2e       	mov	r11, r18
 6f8:	06 c0       	rjmp	.+12     	; 0x706 <vfprintf+0x278>
 6fa:	28 e0       	ldi	r18, 0x08	; 8
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	05 c0       	rjmp	.+10     	; 0x70a <vfprintf+0x27c>
 700:	20 e1       	ldi	r18, 0x10	; 16
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	02 c0       	rjmp	.+4      	; 0x70a <vfprintf+0x27c>
 706:	20 e1       	ldi	r18, 0x10	; 16
 708:	32 e0       	ldi	r19, 0x02	; 2
 70a:	f8 01       	movw	r30, r16
 70c:	b7 fe       	sbrs	r11, 7
 70e:	07 c0       	rjmp	.+14     	; 0x71e <vfprintf+0x290>
 710:	60 81       	ld	r22, Z
 712:	71 81       	ldd	r23, Z+1	; 0x01
 714:	82 81       	ldd	r24, Z+2	; 0x02
 716:	93 81       	ldd	r25, Z+3	; 0x03
 718:	0c 5f       	subi	r16, 0xFC	; 252
 71a:	1f 4f       	sbci	r17, 0xFF	; 255
 71c:	06 c0       	rjmp	.+12     	; 0x72a <vfprintf+0x29c>
 71e:	60 81       	ld	r22, Z
 720:	71 81       	ldd	r23, Z+1	; 0x01
 722:	80 e0       	ldi	r24, 0x00	; 0
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0e 5f       	subi	r16, 0xFE	; 254
 728:	1f 4f       	sbci	r17, 0xFF	; 255
 72a:	a3 01       	movw	r20, r6
 72c:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__ultoa_invert>
 730:	88 2e       	mov	r8, r24
 732:	86 18       	sub	r8, r6
 734:	fb 2d       	mov	r31, r11
 736:	ff 77       	andi	r31, 0x7F	; 127
 738:	3f 2e       	mov	r3, r31
 73a:	36 fe       	sbrs	r3, 6
 73c:	0d c0       	rjmp	.+26     	; 0x758 <vfprintf+0x2ca>
 73e:	23 2d       	mov	r18, r3
 740:	2e 7f       	andi	r18, 0xFE	; 254
 742:	a2 2e       	mov	r10, r18
 744:	89 14       	cp	r8, r9
 746:	58 f4       	brcc	.+22     	; 0x75e <vfprintf+0x2d0>
 748:	34 fe       	sbrs	r3, 4
 74a:	0b c0       	rjmp	.+22     	; 0x762 <vfprintf+0x2d4>
 74c:	32 fc       	sbrc	r3, 2
 74e:	09 c0       	rjmp	.+18     	; 0x762 <vfprintf+0x2d4>
 750:	83 2d       	mov	r24, r3
 752:	8e 7e       	andi	r24, 0xEE	; 238
 754:	a8 2e       	mov	r10, r24
 756:	05 c0       	rjmp	.+10     	; 0x762 <vfprintf+0x2d4>
 758:	b8 2c       	mov	r11, r8
 75a:	a3 2c       	mov	r10, r3
 75c:	03 c0       	rjmp	.+6      	; 0x764 <vfprintf+0x2d6>
 75e:	b8 2c       	mov	r11, r8
 760:	01 c0       	rjmp	.+2      	; 0x764 <vfprintf+0x2d6>
 762:	b9 2c       	mov	r11, r9
 764:	a4 fe       	sbrs	r10, 4
 766:	0f c0       	rjmp	.+30     	; 0x786 <vfprintf+0x2f8>
 768:	fe 01       	movw	r30, r28
 76a:	e8 0d       	add	r30, r8
 76c:	f1 1d       	adc	r31, r1
 76e:	80 81       	ld	r24, Z
 770:	80 33       	cpi	r24, 0x30	; 48
 772:	21 f4       	brne	.+8      	; 0x77c <vfprintf+0x2ee>
 774:	9a 2d       	mov	r25, r10
 776:	99 7e       	andi	r25, 0xE9	; 233
 778:	a9 2e       	mov	r10, r25
 77a:	09 c0       	rjmp	.+18     	; 0x78e <vfprintf+0x300>
 77c:	a2 fe       	sbrs	r10, 2
 77e:	06 c0       	rjmp	.+12     	; 0x78c <vfprintf+0x2fe>
 780:	b3 94       	inc	r11
 782:	b3 94       	inc	r11
 784:	04 c0       	rjmp	.+8      	; 0x78e <vfprintf+0x300>
 786:	8a 2d       	mov	r24, r10
 788:	86 78       	andi	r24, 0x86	; 134
 78a:	09 f0       	breq	.+2      	; 0x78e <vfprintf+0x300>
 78c:	b3 94       	inc	r11
 78e:	a3 fc       	sbrc	r10, 3
 790:	11 c0       	rjmp	.+34     	; 0x7b4 <vfprintf+0x326>
 792:	a0 fe       	sbrs	r10, 0
 794:	06 c0       	rjmp	.+12     	; 0x7a2 <vfprintf+0x314>
 796:	b2 14       	cp	r11, r2
 798:	88 f4       	brcc	.+34     	; 0x7bc <vfprintf+0x32e>
 79a:	28 0c       	add	r2, r8
 79c:	92 2c       	mov	r9, r2
 79e:	9b 18       	sub	r9, r11
 7a0:	0e c0       	rjmp	.+28     	; 0x7be <vfprintf+0x330>
 7a2:	b2 14       	cp	r11, r2
 7a4:	60 f4       	brcc	.+24     	; 0x7be <vfprintf+0x330>
 7a6:	b6 01       	movw	r22, r12
 7a8:	80 e2       	ldi	r24, 0x20	; 32
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 7b0:	b3 94       	inc	r11
 7b2:	f7 cf       	rjmp	.-18     	; 0x7a2 <vfprintf+0x314>
 7b4:	b2 14       	cp	r11, r2
 7b6:	18 f4       	brcc	.+6      	; 0x7be <vfprintf+0x330>
 7b8:	2b 18       	sub	r2, r11
 7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <vfprintf+0x332>
 7bc:	98 2c       	mov	r9, r8
 7be:	21 2c       	mov	r2, r1
 7c0:	a4 fe       	sbrs	r10, 4
 7c2:	10 c0       	rjmp	.+32     	; 0x7e4 <vfprintf+0x356>
 7c4:	b6 01       	movw	r22, r12
 7c6:	80 e3       	ldi	r24, 0x30	; 48
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 7ce:	a2 fe       	sbrs	r10, 2
 7d0:	17 c0       	rjmp	.+46     	; 0x800 <__DATA_REGION_LENGTH__>
 7d2:	a1 fc       	sbrc	r10, 1
 7d4:	03 c0       	rjmp	.+6      	; 0x7dc <vfprintf+0x34e>
 7d6:	88 e7       	ldi	r24, 0x78	; 120
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	02 c0       	rjmp	.+4      	; 0x7e0 <vfprintf+0x352>
 7dc:	88 e5       	ldi	r24, 0x58	; 88
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	b6 01       	movw	r22, r12
 7e2:	0c c0       	rjmp	.+24     	; 0x7fc <vfprintf+0x36e>
 7e4:	8a 2d       	mov	r24, r10
 7e6:	86 78       	andi	r24, 0x86	; 134
 7e8:	59 f0       	breq	.+22     	; 0x800 <__DATA_REGION_LENGTH__>
 7ea:	a1 fe       	sbrs	r10, 1
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <vfprintf+0x364>
 7ee:	8b e2       	ldi	r24, 0x2B	; 43
 7f0:	01 c0       	rjmp	.+2      	; 0x7f4 <vfprintf+0x366>
 7f2:	80 e2       	ldi	r24, 0x20	; 32
 7f4:	a7 fc       	sbrc	r10, 7
 7f6:	8d e2       	ldi	r24, 0x2D	; 45
 7f8:	b6 01       	movw	r22, r12
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 800:	89 14       	cp	r8, r9
 802:	38 f4       	brcc	.+14     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 804:	b6 01       	movw	r22, r12
 806:	80 e3       	ldi	r24, 0x30	; 48
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 80e:	9a 94       	dec	r9
 810:	f7 cf       	rjmp	.-18     	; 0x800 <__DATA_REGION_LENGTH__>
 812:	8a 94       	dec	r8
 814:	f3 01       	movw	r30, r6
 816:	e8 0d       	add	r30, r8
 818:	f1 1d       	adc	r31, r1
 81a:	80 81       	ld	r24, Z
 81c:	b6 01       	movw	r22, r12
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 824:	81 10       	cpse	r8, r1
 826:	f5 cf       	rjmp	.-22     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 828:	22 20       	and	r2, r2
 82a:	09 f4       	brne	.+2      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 82c:	42 ce       	rjmp	.-892    	; 0x4b2 <vfprintf+0x24>
 82e:	b6 01       	movw	r22, r12
 830:	80 e2       	ldi	r24, 0x20	; 32
 832:	90 e0       	ldi	r25, 0x00	; 0
 834:	0e 94 3e 04 	call	0x87c	; 0x87c <fputc>
 838:	2a 94       	dec	r2
 83a:	f6 cf       	rjmp	.-20     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 83c:	f6 01       	movw	r30, r12
 83e:	86 81       	ldd	r24, Z+6	; 0x06
 840:	97 81       	ldd	r25, Z+7	; 0x07
 842:	02 c0       	rjmp	.+4      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 844:	8f ef       	ldi	r24, 0xFF	; 255
 846:	9f ef       	ldi	r25, 0xFF	; 255
 848:	2b 96       	adiw	r28, 0x0b	; 11
 84a:	e2 e1       	ldi	r30, 0x12	; 18
 84c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__epilogue_restores__>

00000850 <strnlen_P>:
 850:	fc 01       	movw	r30, r24
 852:	05 90       	lpm	r0, Z+
 854:	61 50       	subi	r22, 0x01	; 1
 856:	70 40       	sbci	r23, 0x00	; 0
 858:	01 10       	cpse	r0, r1
 85a:	d8 f7       	brcc	.-10     	; 0x852 <strnlen_P+0x2>
 85c:	80 95       	com	r24
 85e:	90 95       	com	r25
 860:	8e 0f       	add	r24, r30
 862:	9f 1f       	adc	r25, r31
 864:	08 95       	ret

00000866 <strnlen>:
 866:	fc 01       	movw	r30, r24
 868:	61 50       	subi	r22, 0x01	; 1
 86a:	70 40       	sbci	r23, 0x00	; 0
 86c:	01 90       	ld	r0, Z+
 86e:	01 10       	cpse	r0, r1
 870:	d8 f7       	brcc	.-10     	; 0x868 <strnlen+0x2>
 872:	80 95       	com	r24
 874:	90 95       	com	r25
 876:	8e 0f       	add	r24, r30
 878:	9f 1f       	adc	r25, r31
 87a:	08 95       	ret

0000087c <fputc>:
 87c:	0f 93       	push	r16
 87e:	1f 93       	push	r17
 880:	cf 93       	push	r28
 882:	df 93       	push	r29
 884:	fb 01       	movw	r30, r22
 886:	23 81       	ldd	r18, Z+3	; 0x03
 888:	21 fd       	sbrc	r18, 1
 88a:	03 c0       	rjmp	.+6      	; 0x892 <fputc+0x16>
 88c:	8f ef       	ldi	r24, 0xFF	; 255
 88e:	9f ef       	ldi	r25, 0xFF	; 255
 890:	2c c0       	rjmp	.+88     	; 0x8ea <fputc+0x6e>
 892:	22 ff       	sbrs	r18, 2
 894:	16 c0       	rjmp	.+44     	; 0x8c2 <fputc+0x46>
 896:	46 81       	ldd	r20, Z+6	; 0x06
 898:	57 81       	ldd	r21, Z+7	; 0x07
 89a:	24 81       	ldd	r18, Z+4	; 0x04
 89c:	35 81       	ldd	r19, Z+5	; 0x05
 89e:	42 17       	cp	r20, r18
 8a0:	53 07       	cpc	r21, r19
 8a2:	44 f4       	brge	.+16     	; 0x8b4 <fputc+0x38>
 8a4:	a0 81       	ld	r26, Z
 8a6:	b1 81       	ldd	r27, Z+1	; 0x01
 8a8:	9d 01       	movw	r18, r26
 8aa:	2f 5f       	subi	r18, 0xFF	; 255
 8ac:	3f 4f       	sbci	r19, 0xFF	; 255
 8ae:	31 83       	std	Z+1, r19	; 0x01
 8b0:	20 83       	st	Z, r18
 8b2:	8c 93       	st	X, r24
 8b4:	26 81       	ldd	r18, Z+6	; 0x06
 8b6:	37 81       	ldd	r19, Z+7	; 0x07
 8b8:	2f 5f       	subi	r18, 0xFF	; 255
 8ba:	3f 4f       	sbci	r19, 0xFF	; 255
 8bc:	37 83       	std	Z+7, r19	; 0x07
 8be:	26 83       	std	Z+6, r18	; 0x06
 8c0:	14 c0       	rjmp	.+40     	; 0x8ea <fputc+0x6e>
 8c2:	8b 01       	movw	r16, r22
 8c4:	ec 01       	movw	r28, r24
 8c6:	fb 01       	movw	r30, r22
 8c8:	00 84       	ldd	r0, Z+8	; 0x08
 8ca:	f1 85       	ldd	r31, Z+9	; 0x09
 8cc:	e0 2d       	mov	r30, r0
 8ce:	09 95       	icall
 8d0:	89 2b       	or	r24, r25
 8d2:	e1 f6       	brne	.-72     	; 0x88c <fputc+0x10>
 8d4:	d8 01       	movw	r26, r16
 8d6:	16 96       	adiw	r26, 0x06	; 6
 8d8:	8d 91       	ld	r24, X+
 8da:	9c 91       	ld	r25, X
 8dc:	17 97       	sbiw	r26, 0x07	; 7
 8de:	01 96       	adiw	r24, 0x01	; 1
 8e0:	17 96       	adiw	r26, 0x07	; 7
 8e2:	9c 93       	st	X, r25
 8e4:	8e 93       	st	-X, r24
 8e6:	16 97       	sbiw	r26, 0x06	; 6
 8e8:	ce 01       	movw	r24, r28
 8ea:	df 91       	pop	r29
 8ec:	cf 91       	pop	r28
 8ee:	1f 91       	pop	r17
 8f0:	0f 91       	pop	r16
 8f2:	08 95       	ret

000008f4 <__ultoa_invert>:
 8f4:	fa 01       	movw	r30, r20
 8f6:	aa 27       	eor	r26, r26
 8f8:	28 30       	cpi	r18, 0x08	; 8
 8fa:	51 f1       	breq	.+84     	; 0x950 <__stack+0x51>
 8fc:	20 31       	cpi	r18, 0x10	; 16
 8fe:	81 f1       	breq	.+96     	; 0x960 <__stack+0x61>
 900:	e8 94       	clt
 902:	6f 93       	push	r22
 904:	6e 7f       	andi	r22, 0xFE	; 254
 906:	6e 5f       	subi	r22, 0xFE	; 254
 908:	7f 4f       	sbci	r23, 0xFF	; 255
 90a:	8f 4f       	sbci	r24, 0xFF	; 255
 90c:	9f 4f       	sbci	r25, 0xFF	; 255
 90e:	af 4f       	sbci	r26, 0xFF	; 255
 910:	b1 e0       	ldi	r27, 0x01	; 1
 912:	3e d0       	rcall	.+124    	; 0x990 <__stack+0x91>
 914:	b4 e0       	ldi	r27, 0x04	; 4
 916:	3c d0       	rcall	.+120    	; 0x990 <__stack+0x91>
 918:	67 0f       	add	r22, r23
 91a:	78 1f       	adc	r23, r24
 91c:	89 1f       	adc	r24, r25
 91e:	9a 1f       	adc	r25, r26
 920:	a1 1d       	adc	r26, r1
 922:	68 0f       	add	r22, r24
 924:	79 1f       	adc	r23, r25
 926:	8a 1f       	adc	r24, r26
 928:	91 1d       	adc	r25, r1
 92a:	a1 1d       	adc	r26, r1
 92c:	6a 0f       	add	r22, r26
 92e:	71 1d       	adc	r23, r1
 930:	81 1d       	adc	r24, r1
 932:	91 1d       	adc	r25, r1
 934:	a1 1d       	adc	r26, r1
 936:	20 d0       	rcall	.+64     	; 0x978 <__stack+0x79>
 938:	09 f4       	brne	.+2      	; 0x93c <__stack+0x3d>
 93a:	68 94       	set
 93c:	3f 91       	pop	r19
 93e:	2a e0       	ldi	r18, 0x0A	; 10
 940:	26 9f       	mul	r18, r22
 942:	11 24       	eor	r1, r1
 944:	30 19       	sub	r19, r0
 946:	30 5d       	subi	r19, 0xD0	; 208
 948:	31 93       	st	Z+, r19
 94a:	de f6       	brtc	.-74     	; 0x902 <__stack+0x3>
 94c:	cf 01       	movw	r24, r30
 94e:	08 95       	ret
 950:	46 2f       	mov	r20, r22
 952:	47 70       	andi	r20, 0x07	; 7
 954:	40 5d       	subi	r20, 0xD0	; 208
 956:	41 93       	st	Z+, r20
 958:	b3 e0       	ldi	r27, 0x03	; 3
 95a:	0f d0       	rcall	.+30     	; 0x97a <__stack+0x7b>
 95c:	c9 f7       	brne	.-14     	; 0x950 <__stack+0x51>
 95e:	f6 cf       	rjmp	.-20     	; 0x94c <__stack+0x4d>
 960:	46 2f       	mov	r20, r22
 962:	4f 70       	andi	r20, 0x0F	; 15
 964:	40 5d       	subi	r20, 0xD0	; 208
 966:	4a 33       	cpi	r20, 0x3A	; 58
 968:	18 f0       	brcs	.+6      	; 0x970 <__stack+0x71>
 96a:	49 5d       	subi	r20, 0xD9	; 217
 96c:	31 fd       	sbrc	r19, 1
 96e:	40 52       	subi	r20, 0x20	; 32
 970:	41 93       	st	Z+, r20
 972:	02 d0       	rcall	.+4      	; 0x978 <__stack+0x79>
 974:	a9 f7       	brne	.-22     	; 0x960 <__stack+0x61>
 976:	ea cf       	rjmp	.-44     	; 0x94c <__stack+0x4d>
 978:	b4 e0       	ldi	r27, 0x04	; 4
 97a:	a6 95       	lsr	r26
 97c:	97 95       	ror	r25
 97e:	87 95       	ror	r24
 980:	77 95       	ror	r23
 982:	67 95       	ror	r22
 984:	ba 95       	dec	r27
 986:	c9 f7       	brne	.-14     	; 0x97a <__stack+0x7b>
 988:	00 97       	sbiw	r24, 0x00	; 0
 98a:	61 05       	cpc	r22, r1
 98c:	71 05       	cpc	r23, r1
 98e:	08 95       	ret
 990:	9b 01       	movw	r18, r22
 992:	ac 01       	movw	r20, r24
 994:	0a 2e       	mov	r0, r26
 996:	06 94       	lsr	r0
 998:	57 95       	ror	r21
 99a:	47 95       	ror	r20
 99c:	37 95       	ror	r19
 99e:	27 95       	ror	r18
 9a0:	ba 95       	dec	r27
 9a2:	c9 f7       	brne	.-14     	; 0x996 <__stack+0x97>
 9a4:	62 0f       	add	r22, r18
 9a6:	73 1f       	adc	r23, r19
 9a8:	84 1f       	adc	r24, r20
 9aa:	95 1f       	adc	r25, r21
 9ac:	a0 1d       	adc	r26, r0
 9ae:	08 95       	ret

000009b0 <__prologue_saves__>:
 9b0:	2f 92       	push	r2
 9b2:	3f 92       	push	r3
 9b4:	4f 92       	push	r4
 9b6:	5f 92       	push	r5
 9b8:	6f 92       	push	r6
 9ba:	7f 92       	push	r7
 9bc:	8f 92       	push	r8
 9be:	9f 92       	push	r9
 9c0:	af 92       	push	r10
 9c2:	bf 92       	push	r11
 9c4:	cf 92       	push	r12
 9c6:	df 92       	push	r13
 9c8:	ef 92       	push	r14
 9ca:	ff 92       	push	r15
 9cc:	0f 93       	push	r16
 9ce:	1f 93       	push	r17
 9d0:	cf 93       	push	r28
 9d2:	df 93       	push	r29
 9d4:	cd b7       	in	r28, 0x3d	; 61
 9d6:	de b7       	in	r29, 0x3e	; 62
 9d8:	ca 1b       	sub	r28, r26
 9da:	db 0b       	sbc	r29, r27
 9dc:	0f b6       	in	r0, 0x3f	; 63
 9de:	f8 94       	cli
 9e0:	de bf       	out	0x3e, r29	; 62
 9e2:	0f be       	out	0x3f, r0	; 63
 9e4:	cd bf       	out	0x3d, r28	; 61
 9e6:	09 94       	ijmp

000009e8 <__epilogue_restores__>:
 9e8:	2a 88       	ldd	r2, Y+18	; 0x12
 9ea:	39 88       	ldd	r3, Y+17	; 0x11
 9ec:	48 88       	ldd	r4, Y+16	; 0x10
 9ee:	5f 84       	ldd	r5, Y+15	; 0x0f
 9f0:	6e 84       	ldd	r6, Y+14	; 0x0e
 9f2:	7d 84       	ldd	r7, Y+13	; 0x0d
 9f4:	8c 84       	ldd	r8, Y+12	; 0x0c
 9f6:	9b 84       	ldd	r9, Y+11	; 0x0b
 9f8:	aa 84       	ldd	r10, Y+10	; 0x0a
 9fa:	b9 84       	ldd	r11, Y+9	; 0x09
 9fc:	c8 84       	ldd	r12, Y+8	; 0x08
 9fe:	df 80       	ldd	r13, Y+7	; 0x07
 a00:	ee 80       	ldd	r14, Y+6	; 0x06
 a02:	fd 80       	ldd	r15, Y+5	; 0x05
 a04:	0c 81       	ldd	r16, Y+4	; 0x04
 a06:	1b 81       	ldd	r17, Y+3	; 0x03
 a08:	aa 81       	ldd	r26, Y+2	; 0x02
 a0a:	b9 81       	ldd	r27, Y+1	; 0x01
 a0c:	ce 0f       	add	r28, r30
 a0e:	d1 1d       	adc	r29, r1
 a10:	0f b6       	in	r0, 0x3f	; 63
 a12:	f8 94       	cli
 a14:	de bf       	out	0x3e, r29	; 62
 a16:	0f be       	out	0x3f, r0	; 63
 a18:	cd bf       	out	0x3d, r28	; 61
 a1a:	ed 01       	movw	r28, r26
 a1c:	08 95       	ret

00000a1e <_exit>:
 a1e:	f8 94       	cli

00000a20 <__stop_program>:
 a20:	ff cf       	rjmp	.-2      	; 0xa20 <__stop_program>
